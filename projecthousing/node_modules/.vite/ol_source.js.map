{
  "version": 3,
  "sources": ["../xml-utils/get-attribute.js", "../xml-utils/index-of-match.js", "../xml-utils/find-tag-by-name.js", "../xml-utils/find-tags-by-name.js", "../ms/index.js", "../debug/src/common.js", "../debug/src/browser.js", "../is-observable/index.js", "../yallist/iterator.js", "../yallist/yallist.js", "../lru-cache/index.js", "../ol/src/source/BingMaps.js", "../ol/src/source/CartoDB.js", "../ol/src/source/Cluster.js", "../ol/src/DataTile.js", "../ol/src/source/DataTile.js", "../@petamoriken/float16/src/_converter.mjs", "../@petamoriken/float16/src/_util/private.mjs", "../@petamoriken/float16/src/_arrayIterator.mjs", "../@petamoriken/float16/src/_util/is.mjs", "../@petamoriken/float16/src/_spec.mjs", "../@petamoriken/float16/src/_util/hasOwn.mjs", "../@petamoriken/float16/src/Float16Array.mjs", "../@petamoriken/float16/src/DataView.mjs", "../geotiff/src/geotiffimage.js", "../geotiff/src/rgb.js", "../geotiff/src/compression/index.js", "../geotiff/src/resample.js", "../geotiff/src/dataview64.js", "../geotiff/src/dataslice.js", "../threads/dist-esm/serializers.js", "../threads/dist-esm/common.js", "../threads/dist-esm/master/get-bundle-url.browser.js", "../threads/dist-esm/master/implementation.browser.js", "../threads/dist-esm/master/pool.js", "../observable-fns/dist.esm/_symbols.js", "../observable-fns/dist.esm/observable.js", "../observable-fns/dist.esm/unsubscribe.js", "../observable-fns/dist.esm/subject.js", "../observable-fns/dist.esm/multicast.js", "../threads/dist-esm/ponyfills.js", "../threads/dist-esm/master/pool-types.js", "../threads/dist-esm/symbols.js", "../threads/dist-esm/master/thread.js", "../threads/dist-esm/master/spawn.js", "../threads/dist-esm/promise.js", "../threads/dist-esm/types/master.js", "../threads/dist-esm/master/invocation-proxy.js", "../threads/dist-esm/observable-promise.js", "../threads/dist-esm/transferable.js", "../threads/dist-esm/types/messages.js", "../threads/dist-esm/master/index.js", "../threads/dist-esm/worker/index.js", "../threads/dist-esm/worker/implementation.browser.js", "../geotiff/src/pool.js", "../geotiff/src/source/httputils.js", "../geotiff/src/source/basesource.js", "../geotiff/src/source/blockedsource.js", "../geotiff/src/utils.js", "../geotiff/src/source/client/base.js", "../geotiff/src/source/client/fetch.js", "../geotiff/src/source/client/xhr.js", "browser-external:http", "browser-external:https", "browser-external:url", "../geotiff/src/source/client/http.js", "../geotiff/src/source/remote.js", "browser-external:fs", "../geotiff/src/geotiffwriter.js", "../geotiff/src/logging.js", "../geotiff/src/geotiff.js", "../ol/src/worker/geotiff-decoder.js", "../ol/src/source/GeoTIFF.js", "../ol/src/source/Zoomify.js", "../ol/src/format/IIIFInfo.js", "../ol/src/source/IIIF.js", "../ol/src/reproj/Image.js", "../ol/src/source/Image.js", "../ol/src/uri.js", "../ol/src/source/ImageArcGISRest.js", "../ol/src/source/ImageCanvas.js", "../ol/src/source/ImageMapGuide.js", "../ol/src/source/ImageStatic.js", "../ol/src/source/WMSServerType.js", "../ol/src/source/ImageWMS.js", "../ol/src/source/Raster.js", "../ol/src/source/Stamen.js", "../ol/src/source/TileArcGISRest.js", "../ol/src/source/TileDebug.js", "../ol/src/source/TileWMS.js", "../ol/src/source/UTFGrid.js", "../ol/src/source/WMTSRequestEncoding.js", "../ol/src/tilegrid/WMTS.js", "../ol/src/source/WMTS.js"],
  "sourcesContent": ["function getAttribute(tag, attributeName, options) {\n  const debug = (options && options.debug) || false;\n  if (debug) console.log(\"getting \" + attributeName + \" in \" + tag);\n\n  const xml = typeof tag === \"object\" ? tag.outer : tag;\n\n  const pattern = `${attributeName}\\\\=\"\\([^\"]*\\)\"`;\n  if (debug) console.log(\"pattern:\", pattern);\n\n  const re = new RegExp(pattern);\n  const match = re.exec(xml);\n  if (debug) console.log(\"match:\", match);\n  if (match) return match[1];\n}\n\nmodule.exports = getAttribute;\n", "function indexOfMatch(xml, pattern, startIndex) {\n  const re = new RegExp(pattern);\n  const match = re.exec(xml.slice(startIndex));\n  if (match) return startIndex + match.index;\n  else return -1;\n}\n\nmodule.exports = indexOfMatch;\n", "const indexOfMatch = require(\"./index-of-match.js\");\n\nfunction findTagByName(xml, tagName, options) {\n  const debug = (options && options.debug) || false;\n\n  const startIndex = (options && options.startIndex) || 0;\n\n  if (debug) console.log(\"starting findTagByName with\", tagName, \" and \", options);\n\n  const start = indexOfMatch(xml, `\\<${tagName}[ \\>]`, startIndex);\n  if (debug) console.log(\"start:\", start);\n  if (start === -1) return undefined;\n\n  const afterStart = xml.slice(start + tagName.length);\n  let relativeEnd = indexOfMatch(afterStart, \"[ /]\" + tagName + \">\", 0);\n  const selfClosing = relativeEnd === -1;\n\n  if (selfClosing) {\n    relativeEnd = indexOfMatch(afterStart, \"[ /]>\", 0);\n  }\n\n  const end = start + tagName.length + relativeEnd + 1 + (selfClosing ? 0 : tagName.length) + 1;\n  if (debug) console.log(\"end:\", end);\n  if (end === -1) return undefined;\n\n  const outer = xml.slice(start, end);\n  // tag is like <gml:identifier codeSpace=\"OGP\">urn:ogc:def:crs:EPSG::32617</gml:identifier>\n\n  let inner;\n  if (selfClosing) {\n    inner = null;\n  } else {\n    inner = outer.slice(outer.indexOf(\">\") + 1, outer.lastIndexOf(\"<\"));\n  }\n\n  return { inner, outer, start, end };\n}\n\nmodule.exports = findTagByName;\n", "const findTagByName = require(\"./find-tag-by-name.js\");\n\nfunction findTagsByName(xml, tagName, options) {\n  const tags = [];\n  const debug = (options && options.debug) || false;\n  let startIndex = (options && options.startIndex) || 0;\n  let tag;\n  while ((tag = findTagByName(xml, tagName, { debug, startIndex }))) {\n    startIndex = tag.end;\n    tags.push(tag);\n  }\n  if (debug) console.log(\"findTagsByName found\", tags.length, \"tags\");\n  return tags;\n}\n\nmodule.exports = findTagsByName;\n", "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "'use strict';\n\nmodule.exports = value => {\n\tif (!value) {\n\t\treturn false;\n\t}\n\n\t// eslint-disable-next-line no-use-extend-native/no-use-extend-native\n\tif (typeof Symbol.observable === 'symbol' && typeof value[Symbol.observable] === 'function') {\n\t\t// eslint-disable-next-line no-use-extend-native/no-use-extend-native\n\t\treturn value === value[Symbol.observable]();\n\t}\n\n\tif (typeof value['@@observable'] === 'function') {\n\t\treturn value === value['@@observable']();\n\t}\n\n\treturn false;\n};\n", "'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n", "'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n", "'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n", null, null, null, null, null, "// algorithm: http://fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst buffer = new ArrayBuffer(4);\nconst floatView = new Float32Array(buffer);\nconst uint32View = new Uint32Array(buffer);\n\nconst baseTable = new Uint32Array(512);\nconst shiftTable = new Uint32Array(512);\n\nfor (let i = 0; i < 256; ++i) {\n  const e = i - 127;\n\n  // very small number (0, -0)\n  if (e < -27) {\n    baseTable[i]         = 0x0000;\n    baseTable[i | 0x100] = 0x8000;\n    shiftTable[i]         = 24;\n    shiftTable[i | 0x100] = 24;\n\n  // small number (denorm)\n  } else if (e < -14) {\n    baseTable[i]         =  0x0400 >> (-e - 14);\n    baseTable[i | 0x100] = (0x0400 >> (-e - 14)) | 0x8000;\n    shiftTable[i]         = -e - 1;\n    shiftTable[i | 0x100] = -e - 1;\n\n  // normal number\n  } else if (e <= 15) {\n    baseTable[i]         =  (e + 15) << 10;\n    baseTable[i | 0x100] = ((e + 15) << 10) | 0x8000;\n    shiftTable[i]         = 13;\n    shiftTable[i | 0x100] = 13;\n\n  // large number (Infinity, -Infinity)\n  } else if (e < 128) {\n    baseTable[i]         = 0x7c00;\n    baseTable[i | 0x100] = 0xfc00;\n    shiftTable[i]         = 24;\n    shiftTable[i | 0x100] = 24;\n\n  // stay (NaN, Infinity, -Infinity)\n  } else {\n    baseTable[i]         = 0x7c00;\n    baseTable[i | 0x100] = 0xfc00;\n    shiftTable[i]         = 13;\n    shiftTable[i | 0x100] = 13;\n  }\n}\n\n/**\n * round a number to a half float number bits.\n *\n * @param {number} num - double float\n * @returns {number} half float number bits\n */\nexport function roundToFloat16Bits(num) {\n  floatView[0] = num;\n  const f = uint32View[0];\n  const e = (f >> 23) & 0x1ff;\n  return baseTable[e] + ((f & 0x007fffff) >> shiftTable[e]);\n}\n\nconst mantissaTable = new Uint32Array(2048);\nconst exponentTable = new Uint32Array(64);\nconst offsetTable = new Uint32Array(64);\n\nmantissaTable[0] = 0;\nfor (let i = 1; i < 1024; ++i) {\n  let m = i << 13;    // zero pad mantissa bits\n  let e = 0;          // zero exponent\n\n  // normalized\n  while((m & 0x00800000) === 0) {\n    e -= 0x00800000;  // decrement exponent\n    m <<= 1;\n  }\n\n  m &= ~0x00800000;   // clear leading 1 bit\n  e += 0x38800000;    // adjust bias\n\n  mantissaTable[i] = m | e;\n}\nfor (let i = 1024; i < 2048; ++i) {\n  mantissaTable[i] = 0x38000000 + ((i - 1024) << 13);\n}\n\nexponentTable[0] = 0;\nfor (let i = 1; i < 31; ++i) {\n  exponentTable[i] = i << 23;\n}\nexponentTable[31] = 0x47800000;\nexponentTable[32] = 0x80000000;\nfor (let i = 33; i < 63; ++i) {\n  exponentTable[i] = 0x80000000 + ((i - 32) << 23);\n}\nexponentTable[63] = 0xc7800000;\n\noffsetTable[0] = 0;\nfor (let i = 1; i < 64; ++i) {\n  if (i === 32) {\n    offsetTable[i] = 0;\n  } else {\n    offsetTable[i] = 1024;\n  }\n}\n\n/**\n * convert a half float number bits to a number.\n *\n * @param {number} float16bits - half float number bits\n * @returns {number} double float\n */\nexport function convertToNumber(float16bits) {\n  const m = float16bits >> 10;\n  uint32View[0] = mantissaTable[offsetTable[m] + (float16bits & 0x3ff)] + exponentTable[m];\n  return floatView[0];\n}\n", "/** @returns {(self: object) => object} */\nexport function createPrivateStorage() {\n  const wm = new WeakMap();\n\n  return (self) => {\n    const storage = wm.get(self);\n    if (storage !== undefined) {\n      return storage;\n    }\n\n    const obj = Object.create(null);\n    wm.set(self, obj);\n    return obj;\n  };\n}\n", "import { createPrivateStorage } from \"./_util/private.mjs\";\n\nconst _ = createPrivateStorage();\n\nconst IteratorPrototype = Reflect.getPrototypeOf(Reflect.getPrototypeOf([][Symbol.iterator]()));\n\n/** @see https://tc39.es/ecma262/#sec-%arrayiteratorprototype%-object */\nconst ArrayIteratorPrototype = Object.create(IteratorPrototype, {\n  next: {\n    value: function next() {\n      return _(this).iterator.next();\n    },\n    writable: true,\n    configurable: true,\n  },\n\n  [Symbol.toStringTag]: {\n    value: \"Array Iterator\",\n    configurable: true,\n  },\n});\n\n/**\n * @param {Iterator<number>} iterator\n * @returns {IterableIterator<number>}\n */\nexport function wrapInArrayIterator(iterator) {\n  const arrayIterator = Object.create(ArrayIteratorPrototype);\n  _(arrayIterator).iterator = iterator;\n  return arrayIterator;\n}\n", "/**\n * @param {unknown} value\n * @returns {value is object}\n */\nexport function isObject(value) {\n  return (value !== null && typeof value === \"object\") || typeof value === \"function\";\n}\n\n/**\n * @param {unknown} value\n * @returns {value is object}\n */\nexport function isObjectLike(value) {\n  return value !== null && typeof value === \"object\";\n}\n\n// Inspired by util.types implementation of Node.js\nconst getTypedArrayPrototypeSymbolToStringTag = Reflect.getOwnPropertyDescriptor(Reflect.getPrototypeOf(Uint8Array).prototype, Symbol.toStringTag).get;\n\n/**\n * @param {unknown} value\n * @returns {value is Uint8Array|Uint8ClampedArray|Uint16Array|Uint32Array|Int8Array|Int16Array|Int32Array|Float32Array|Float64Array|BigUint64Array|BigInt64Array}\n */\nexport function isTypedArray(value) {\n  return getTypedArrayPrototypeSymbolToStringTag.call(value) !== undefined;\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Uint16Array}\n */\nexport function isUint16Array(value) {\n  return getTypedArrayPrototypeSymbolToStringTag.call(value) === \"Uint16Array\";\n}\n\n/**\n * @param {unknown} value\n * @returns {value is DataView}\n */\nexport function isDataView(value) {\n  if (!ArrayBuffer.isView(value)) {\n    return false;\n  }\n\n  if (isTypedArray(value)) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * @param {unknown} value\n * @returns {value is ArrayBuffer}\n */\nexport function isArrayBuffer(value) {\n  return isObjectLike(value) && value[Symbol.toStringTag] === \"ArrayBuffer\";\n}\n\n/**\n * @param {unknown} value\n * @returns {value is SharedArrayBuffer}\n */\nexport function isSharedArrayBuffer(value) {\n  return isObjectLike(value) && value[Symbol.toStringTag] === \"SharedArrayBuffer\";\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Iterable<any>}\n */\nexport function isIterable(value) {\n  return isObject(value) && typeof value[Symbol.iterator] === \"function\";\n}\n\n/**\n * @param {unknown} value\n * @returns {value is any[]}\n */\nexport function isOrdinaryArray(value) {\n  if (!Array.isArray(value)) {\n    return false;\n  }\n\n  const iterator = value[Symbol.iterator]();\n  if (iterator[Symbol.toStringTag] !== \"Array Iterator\") {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Uint8Array|Uint8ClampedArray|Uint16Array|Uint32Array|Int8Array|Int16Array|Int32Array|Float32Array|Float64Array|BigUint64Array|BigInt64Array}\n */\nexport function isOrdinaryTypedArray(value) {\n  if (!isTypedArray(value)) {\n    return false;\n  }\n\n  const iterator = value[Symbol.iterator]();\n  if (iterator[Symbol.toStringTag] !== \"Array Iterator\") {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * @param {unknown} value\n * @returns {value is string}\n */\nexport function isCanonicalIntegerIndexString(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n\n  const number = Number(value);\n  if (value !== number + \"\") {\n    return false;\n  }\n\n  if (!Number.isFinite(number)) {\n    return false;\n  }\n\n  if (number !== Math.trunc(number)) {\n    return false;\n  }\n\n  return true;\n}\n", "import { isObject } from \"./_util/is.mjs\";\n\n/**\n * @see https://tc39.es/ecma262/#sec-tointegerorinfinity\n * @param {unknown} target\n * @returns {number}\n */\nexport function ToIntegerOrInfinity(target) {\n  if (typeof target === \"bigint\") {\n    throw TypeError(\"Cannot convert a BigInt value to a number\");\n  }\n\n  const number = Number(target);\n\n  if (Number.isNaN(number) || number === 0) {\n    return 0;\n  }\n\n  return Math.trunc(number);\n}\n\n/**\n * @see https://tc39.es/ecma262/#sec-tolength\n * @param {unknown} target\n * @returns {number}\n */\nfunction ToLength(target) {\n  const length = ToIntegerOrInfinity(target);\n  if (length < 0) {\n    return 0;\n  }\n\n  return length < Number.MAX_SAFE_INTEGER ? length : Number.MAX_SAFE_INTEGER;\n}\n\n/**\n * @see https://tc39.es/ecma262/#sec-lengthofarraylike\n * @param {object} arrayLike\n * @returns {number}\n */\nexport function LengthOfArrayLike(arrayLike) {\n  if (!isObject(arrayLike)) {\n    throw TypeError(\"this is not a object\");\n  }\n\n  return ToLength(arrayLike.length);\n}\n\n/**\n * @see https://tc39.es/ecma262/#sec-speciesconstructor\n * @param {object} target\n * @param {Function} defaultConstructor\n * @returns {Function}\n */\nexport function SpeciesConstructor(target, defaultConstructor) {\n  if (!isObject(target)) {\n    throw TypeError(\"this is not a object\");\n  }\n\n  const constructor = target.constructor;\n  if (constructor === undefined) {\n    return defaultConstructor;\n  }\n  if (!isObject(constructor)) {\n    throw TypeError(\"constructor is not a object\");\n  }\n\n  const species = constructor[Symbol.species];\n  if (species == null) {\n    return defaultConstructor;\n  }\n\n  return species;\n}\n\n/**\n * bigint comparisons are not supported\n *\n * @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.sort\n * @param {number} x\n * @param {number} y\n * @returns {-1 | 0 | 1}\n */\nexport function defaultCompare(x, y) {\n  const isNaN_x = Number.isNaN(x);\n  const isNaN_y = Number.isNaN(y);\n\n  if (isNaN_x && isNaN_y) {\n    return 0;\n  }\n\n  if (isNaN_x) {\n    return 1;\n  }\n\n  if (isNaN_y) {\n    return -1;\n  }\n\n  if (x < y) {\n    return -1;\n  }\n\n  if (x > y) {\n    return 1;\n  }\n\n  if (x === 0 && y === 0) {\n    const isPlusZero_x = Object.is(x, 0);\n    const isPlusZero_y = Object.is(y, 0);\n\n    if (!isPlusZero_x && isPlusZero_y) {\n      return -1;\n    }\n\n    if (isPlusZero_x && !isPlusZero_y) {\n      return 1;\n    }\n  }\n\n  return 0;\n}\n", "const hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/** @type {(object: object, key: PropertyKey) => boolean} */\nexport const hasOwn = Object.hasOwn || function hasOwn(object, key) {\n  return hasOwnProperty.call(object, key);\n};\n", "import { wrapInArrayIterator } from \"./_arrayIterator.mjs\";\nimport { convertToNumber, roundToFloat16Bits } from \"./_converter.mjs\";\nimport { LengthOfArrayLike, SpeciesConstructor, ToIntegerOrInfinity, defaultCompare } from \"./_spec.mjs\";\nimport { hasOwn } from \"./_util/hasOwn.mjs\";\nimport { isArrayBuffer, isCanonicalIntegerIndexString, isIterable, isObject, isObjectLike, isOrdinaryArray, isOrdinaryTypedArray, isSharedArrayBuffer, isTypedArray, isUint16Array } from \"./_util/is.mjs\";\nimport { createPrivateStorage } from \"./_util/private.mjs\";\n\nconst brand = Symbol.for(\"__Float16Array__\");\n\nconst _ = createPrivateStorage();\n\n/**\n * @param {unknown} target\n * @returns {boolean}\n */\nfunction hasFloat16ArrayBrand(target) {\n  if (!isObjectLike(target)) {\n    return false;\n  }\n\n  const prototype = Reflect.getPrototypeOf(target);\n  if (!isObjectLike(prototype)) {\n    return false;\n  }\n\n  const constructor = prototype.constructor;\n  if (constructor === undefined) {\n    return false;\n  }\n  if (!isObject(constructor)) {\n    throw TypeError(\"constructor is not a object\");\n  }\n\n  return Reflect.has(constructor, brand);\n}\n\n/**\n * @param {unknown} target\n * @returns {boolean}\n */\nexport function isFloat16Array(target) {\n  return hasFloat16ArrayBrand(target) && !isTypedArray(target);\n}\n\n/**\n * @param {unknown} target\n * @returns {boolean}\n */\nfunction isFloat16BitsArray(target) {\n  return hasFloat16ArrayBrand(target) && isUint16Array(target);\n}\n\n/**\n * @param {unknown} target\n * @throws {TypeError}\n */\nfunction assertFloat16BitsArray(target) {\n  if (!isFloat16BitsArray(target)) {\n    throw new TypeError(\"This is not a Float16Array\");\n  }\n}\n\n/**\n * @param {Float16Array} float16\n * @returns {ArrayLike<number>}\n */\nfunction getFloat16BitsArrayFromFloat16Array(float16) {\n  let target = _(float16).target;\n\n  // from other realms\n  if (target === undefined) {\n    const clone = new Float16Array(float16.buffer, float16.byteOffset, float16.length);\n    target = _(clone).target;\n  }\n\n  return target;\n}\n\n/**\n * @param {ArrayLike<number>} float16bitsArray\n * @returns {number[]}\n */\nfunction copyToArray(float16bitsArray) {\n  const length = float16bitsArray.length;\n\n  const array = [];\n  for (let i = 0; i < length; ++i) {\n    array[i] = convertToNumber(float16bitsArray[i]);\n  }\n\n  return array;\n}\n\nconst defaultFloat16ArrayMethods = new WeakSet();\n\n/**\n * @param {unknown} target\n * @returns {boolean}\n */\nfunction isDefaultFloat16ArrayMethods(target) {\n  return typeof target === \"function\" && defaultFloat16ArrayMethods.has(target);\n}\n\n/** @type {ProxyHandler<Function>} */\nconst applyHandler = Object.freeze({\n  apply(func, thisArg, args) {\n    // peel off Proxy\n    if (isFloat16Array(thisArg)) {\n      const target = getFloat16BitsArrayFromFloat16Array(thisArg);\n      return Reflect.apply(func, target, args);\n    }\n\n    return Reflect.apply(func, thisArg, args);\n  },\n});\n\n/** @type {ProxyHandler<Float16Array>} */\nconst handler = Object.freeze({\n  get(target, key) {\n    if (isCanonicalIntegerIndexString(key) && hasOwn(target, key)) {\n      return convertToNumber(Reflect.get(target, key));\n    }\n\n    const ret = Reflect.get(target, key);\n    if (!isDefaultFloat16ArrayMethods(ret)) {\n      return ret;\n    }\n\n    // TypedArray methods can't be called by Proxy Object\n    let proxy = _(ret).proxy;\n\n    if (proxy === undefined) {\n      proxy = _(ret).proxy = new Proxy(ret, applyHandler);\n    }\n\n    return proxy;\n  },\n\n  set(target, key, value) {\n    if (isCanonicalIntegerIndexString(key) && hasOwn(target, key)) {\n      return Reflect.set(target, key, roundToFloat16Bits(value));\n    }\n\n    return Reflect.set(target, key, value);\n  },\n});\n\n/** limitation: see README.md for details */\nexport class Float16Array extends Uint16Array {\n\n  /** @see https://tc39.es/ecma262/#sec-typedarray */\n  constructor(input, byteOffset, length) {\n    // input Float16Array\n    if (isFloat16Array(input)) {\n      // peel off Proxy\n      const float16bitsArray = getFloat16BitsArrayFromFloat16Array(input);\n      super(float16bitsArray);\n\n    // object without ArrayBuffer\n    } else if (isObject(input) && !isArrayBuffer(input)) {\n      /** @type {ArrayLike<number>} */\n      let list;\n      /** @type {number} */\n      let length;\n\n      // TypedArray\n      if (isTypedArray(input)) {\n        list = input;\n        length = input.length;\n\n        const buffer = input.buffer;\n        /** @type {ArrayBufferConstructor} */\n        const BufferConstructor = !isSharedArrayBuffer(buffer) ? SpeciesConstructor(buffer, ArrayBuffer) : ArrayBuffer;\n        const data = new BufferConstructor(length * Float16Array.BYTES_PER_ELEMENT);\n        super(data);\n\n      // Iterable (Array)\n      } else if (isIterable(input)) {\n        // for optimization\n        if (isOrdinaryArray(input)) {\n          list = input;\n          length = input.length;\n          super(length);\n\n        } else {\n          list = [...input];\n          length = list.length;\n          super(length);\n        }\n\n      // ArrayLike\n      } else {\n        list = input;\n        length = LengthOfArrayLike(input);\n        super(length);\n      }\n\n      // set values\n      for (let i = 0; i < length; ++i) {\n        // super (Uint16Array)\n        this[i] = roundToFloat16Bits(list[i]);\n      }\n\n    // primitive, ArrayBuffer\n    } else {\n      switch (arguments.length) {\n        case 0:\n          super();\n          break;\n\n        case 1:\n          super(input);\n          break;\n\n        case 2:\n          super(input, byteOffset);\n          break;\n\n        case 3:\n          super(input, byteOffset, length);\n          break;\n\n        default:\n          super(...arguments);\n      }\n    }\n\n    const proxy = new Proxy(this, handler);\n\n    // proxy private storage\n    _(proxy).target = this;\n\n    // this private storage\n    _(this).proxy = proxy;\n\n    return proxy;\n  }\n\n  /**\n   * limitation: `Object.getOwnPropertyNames(Float16Array)` or `Reflect.ownKeys(Float16Array)` include this key\n   *\n   * @see https://tc39.es/ecma262/#sec-%typedarray%.from\n   */\n  static from(src, ...opts) {\n    const Constructor = this;\n\n    if (!Reflect.has(Constructor, brand)) {\n      throw TypeError(\"This constructor is not a subclass of Float16Array\");\n    }\n\n    // for optimization\n    if (Constructor === Float16Array) {\n      if (isFloat16Array(src) && opts.length === 0) {\n        const uint16 = new Uint16Array(src.buffer, src.byteOffset, src.length);\n        return new Float16Array(uint16.slice().buffer);\n      }\n\n      if (opts.length === 0) {\n        return new Float16Array(Uint16Array.from(src, roundToFloat16Bits).buffer);\n      }\n\n      const mapFunc = opts[0];\n      const thisArg = opts[1];\n\n      return new Float16Array(Uint16Array.from(src, function (val, ...args) {\n        return roundToFloat16Bits(mapFunc.call(this, val, ...args));\n      }, thisArg).buffer);\n    }\n\n    /** @type {ArrayLike<number>} */\n    let list;\n    /** @type {number} */\n    let length;\n\n    // Iterable (TypedArray, Array)\n    if (isIterable(src)) {\n      // for optimization\n      if (isOrdinaryArray(src) || isOrdinaryTypedArray(src)) {\n        list = src;\n        length = src.length;\n      } else {\n        list = [...src];\n        length = list.length;\n      }\n\n    // ArrayLike\n    } else {\n      list = src;\n      length = LengthOfArrayLike(src);\n    }\n\n    const array = new Constructor(length);\n\n    if (opts.length === 0) {\n      for (let i = 0; i < length; ++i) {\n        array[i] = list[i];\n      }\n\n    } else {\n      const mapFunc = opts[0];\n      const thisArg = opts[1];\n      for (let i = 0; i < length; ++i) {\n        array[i] = mapFunc.call(thisArg, list[i], i);\n      }\n    }\n\n    return array;\n  }\n\n  /**\n   * limitation: `Object.getOwnPropertyNames(Float16Array)` or `Reflect.ownKeys(Float16Array)` include this key\n   *\n   * @see https://tc39.es/ecma262/#sec-%typedarray%.of\n   */\n  static of(...items) {\n    const Constructor = this;\n\n    if (!Reflect.has(Constructor, brand)) {\n      throw TypeError(\"This constructor is not a subclass of Float16Array\");\n    }\n\n    const length = items.length;\n\n    // for optimization\n    if (Constructor === Float16Array) {\n      const proxy = new Float16Array(length);\n      const float16bitsArray = getFloat16BitsArrayFromFloat16Array(proxy);\n\n      for (let i = 0; i < length; ++i) {\n        float16bitsArray[i] = roundToFloat16Bits(items[i]);\n      }\n\n      return proxy;\n    }\n\n    const array = new Constructor(length);\n\n    for (let i = 0; i < length; ++i) {\n      array[i] = items[i];\n    }\n\n    return array;\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.keys */\n  keys() {\n    assertFloat16BitsArray(this);\n\n    return super.keys();\n  }\n\n  /**\n   * limitation: returns a object whose prototype is not `%ArrayIteratorPrototype%`\n   *\n   * @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.values\n   */\n  values() {\n    assertFloat16BitsArray(this);\n\n    const arrayIterator = super.values();\n    return wrapInArrayIterator((function* () {\n      for (const val of arrayIterator) {\n        yield convertToNumber(val);\n      }\n    })());\n  }\n\n  /**\n   * limitation: returns a object whose prototype is not `%ArrayIteratorPrototype%`\n   *\n   * @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.entries\n   */\n  entries() {\n    assertFloat16BitsArray(this);\n\n    const arrayIterator = super.entries();\n    return wrapInArrayIterator((function* () {\n      for (const [i, val] of arrayIterator) {\n        yield [i, convertToNumber(val)];\n      }\n    })());\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.at */\n  at(index) {\n    assertFloat16BitsArray(this);\n\n    const length = this.length;\n    const relativeIndex = ToIntegerOrInfinity(index);\n    const k = relativeIndex >= 0 ? relativeIndex : length + relativeIndex;\n\n    if (k < 0 || k >= length) {\n      return;\n    }\n\n    return convertToNumber(this[k]);\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.map */\n  map(callback, ...opts) {\n    assertFloat16BitsArray(this);\n\n    const length = this.length;\n    const thisArg = opts[0];\n\n    const Constructor = SpeciesConstructor(this, Float16Array);\n\n    // for optimization\n    if (Constructor === Float16Array) {\n      const proxy = new Float16Array(length);\n      const float16bitsArray = getFloat16BitsArrayFromFloat16Array(proxy);\n\n      for (let i = 0; i < length; ++i) {\n        const val = convertToNumber(this[i]);\n        float16bitsArray[i] = roundToFloat16Bits(callback.call(thisArg, val, i, _(this).proxy));\n      }\n\n      return proxy;\n    }\n\n    const array = new Constructor(length);\n\n    for (let i = 0; i < length; ++i) {\n      const val = convertToNumber(this[i]);\n      array[i] = callback.call(thisArg, val, i, _(this).proxy);\n    }\n\n    return array;\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.filter */\n  filter(callback, ...opts) {\n    assertFloat16BitsArray(this);\n\n    const length = this.length;\n    const thisArg = opts[0];\n\n    const kept = [];\n    for (let i = 0; i < length; ++i) {\n      const val = convertToNumber(this[i]);\n      if (callback.call(thisArg, val, i, _(this).proxy)) {\n        kept.push(val);\n      }\n    }\n\n    const Constructor = SpeciesConstructor(this, Float16Array);\n    const array = new Constructor(kept);\n\n    return array;\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.reduce */\n  reduce(callback, ...opts) {\n    assertFloat16BitsArray(this);\n\n    const length = this.length;\n    if (length === 0 && opts.length === 0) {\n      throw TypeError(\"Reduce of empty array with no initial value\");\n    }\n\n    let accumulator, start;\n    if (opts.length === 0) {\n      accumulator = convertToNumber(this[0]);\n      start = 1;\n    } else {\n      accumulator = opts[0];\n      start = 0;\n    }\n\n    for (let i = start; i < length; ++i) {\n      accumulator = callback(accumulator, convertToNumber(this[i]), i, _(this).proxy);\n    }\n\n    return accumulator;\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.reduceright */\n  reduceRight(callback, ...opts) {\n    assertFloat16BitsArray(this);\n\n    const length = this.length;\n    if (length === 0 && opts.length === 0) {\n      throw TypeError(\"Reduce of empty array with no initial value\");\n    }\n\n    let accumulator, start;\n    if (opts.length === 0) {\n      accumulator = convertToNumber(this[length - 1]);\n      start = length - 2;\n    } else {\n      accumulator = opts[0];\n      start = length - 1;\n    }\n\n    for (let i = start; i >= 0; --i) {\n      accumulator = callback(accumulator, convertToNumber(this[i]), i, _(this).proxy);\n    }\n\n    return accumulator;\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.foreach */\n  forEach(callback, ...opts) {\n    assertFloat16BitsArray(this);\n\n    const length = this.length;\n    const thisArg = opts[0];\n\n    for (let i = 0; i < length; ++i) {\n      callback.call(thisArg, convertToNumber(this[i]), i, _(this).proxy);\n    }\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.find */\n  find(callback, ...opts) {\n    assertFloat16BitsArray(this);\n\n    const length = this.length;\n    const thisArg = opts[0];\n\n    for (let i = 0; i < length; ++i) {\n      const value = convertToNumber(this[i]);\n      if (callback.call(thisArg, value, i, _(this).proxy)) {\n        return value;\n      }\n    }\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.findindex */\n  findIndex(callback, ...opts) {\n    assertFloat16BitsArray(this);\n\n    const length = this.length;\n    const thisArg = opts[0];\n\n    for (let i = 0; i < length; ++i) {\n      const value = convertToNumber(this[i]);\n      if (callback.call(thisArg, value, i, _(this).proxy)) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  /** @see https://tc39.es/proposal-array-find-from-last/index.html#sec-%typedarray%.prototype.findlast */\n  findLast(callback, ...opts) {\n    assertFloat16BitsArray(this);\n\n    const length = this.length;\n    const thisArg = opts[0];\n\n    for (let i = length - 1; i >= 0; --i) {\n      const value = convertToNumber(this[i]);\n      if (callback.call(thisArg, value, i, _(this).proxy)) {\n        return value;\n      }\n    }\n  }\n\n  /** @see https://tc39.es/proposal-array-find-from-last/index.html#sec-%typedarray%.prototype.findlastindex */\n  findLastIndex(callback, ...opts) {\n    assertFloat16BitsArray(this);\n\n    const length = this.length;\n    const thisArg = opts[0];\n\n    for (let i = length - 1; i >= 0; --i) {\n      const value = convertToNumber(this[i]);\n      if (callback.call(thisArg, value, i, _(this).proxy)) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.every */\n  every(callback, ...opts) {\n    assertFloat16BitsArray(this);\n\n    const length = this.length;\n    const thisArg = opts[0];\n\n    for (let i = 0; i < length; ++i) {\n      if (!callback.call(thisArg, convertToNumber(this[i]), i, _(this).proxy)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.some */\n  some(callback, ...opts) {\n    assertFloat16BitsArray(this);\n\n    const length = this.length;\n    const thisArg = opts[0];\n\n    for (let i = 0; i < length; ++i) {\n      if (callback.call(thisArg, convertToNumber(this[i]), i, _(this).proxy)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.set */\n  set(input, ...opts) {\n    assertFloat16BitsArray(this);\n\n    const targetOffset = ToIntegerOrInfinity(opts[0]);\n    if (targetOffset < 0) {\n      throw RangeError(\"offset is out of bounds\");\n    }\n\n    // for optimization\n    if (isFloat16Array(input)) {\n      // peel off Proxy\n      const float16bitsArray = getFloat16BitsArrayFromFloat16Array(input);\n      super.set(float16bitsArray, targetOffset);\n      return;\n    }\n\n    const targetLength = this.length;\n\n    const src = Object(input);\n    const srcLength = LengthOfArrayLike(src);\n\n    if (targetOffset === Infinity || srcLength + targetOffset > targetLength) {\n      throw RangeError(\"offset is out of bounds\");\n    }\n\n    for (let i = 0; i < srcLength; ++i) {\n      this[i + targetOffset] = roundToFloat16Bits(src[i]);\n    }\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.reverse */\n  reverse() {\n    assertFloat16BitsArray(this);\n\n    super.reverse();\n\n    return _(this).proxy;\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.fill */\n  fill(value, ...opts) {\n    assertFloat16BitsArray(this);\n\n    super.fill(roundToFloat16Bits(value), ...opts);\n\n    return _(this).proxy;\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.copywithin */\n  copyWithin(target, start, ...opts) {\n    assertFloat16BitsArray(this);\n\n    super.copyWithin(target, start, ...opts);\n\n    return _(this).proxy;\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.sort */\n  sort(...opts) {\n    assertFloat16BitsArray(this);\n\n    const compare = opts[0] !== undefined ? opts[0] : defaultCompare;\n    super.sort((x, y) => { return compare(convertToNumber(x), convertToNumber(y)); });\n\n    return _(this).proxy;\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.slice */\n  slice(...opts) {\n    assertFloat16BitsArray(this);\n\n    const Constructor = SpeciesConstructor(this, Float16Array);\n\n    // for optimization\n    if (Constructor === Float16Array) {\n      const uint16 = new Uint16Array(this.buffer, this.byteOffset, this.length);\n      const float16bitsArray = uint16.slice(...opts);\n      return new Float16Array(float16bitsArray.buffer);\n    }\n\n    const length = this.length;\n    const start = ToIntegerOrInfinity(opts[0]);\n    const end = opts[1] === undefined ? length : ToIntegerOrInfinity(opts[1]);\n\n    let k;\n    if (start === -Infinity) {\n      k = 0;\n    } else if (start < 0) {\n      k = length + start > 0 ? length + start : 0;\n    } else {\n      k = length < start ? length : start;\n    }\n\n    let final;\n    if (end === -Infinity) {\n      final = 0;\n    } else if (end < 0) {\n      final = length + end > 0 ? length + end : 0;\n    } else {\n      final = length < end ? length : end;\n    }\n\n    const count = final - k > 0 ? final - k : 0;\n    const array = new Constructor(count);\n\n    if (count === 0) {\n      return array;\n    }\n\n    let n = 0;\n    while (k < final) {\n      array[n] = convertToNumber(this[k]);\n      ++k;\n      ++n;\n    }\n\n    return array;\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.subarray */\n  subarray(...opts) {\n    assertFloat16BitsArray(this);\n\n    const uint16 = new Uint16Array(this.buffer, this.byteOffset, this.length);\n    const float16bitsArray = uint16.subarray(...opts);\n\n    const Constructor = SpeciesConstructor(this, Float16Array);\n    const array = new Constructor(float16bitsArray.buffer, float16bitsArray.byteOffset, float16bitsArray.length);\n\n    return array;\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.indexof */\n  indexOf(element, ...opts) {\n    assertFloat16BitsArray(this);\n\n    const length = this.length;\n\n    let from = ToIntegerOrInfinity(opts[0]);\n    if (from === Infinity) {\n      return -1;\n    }\n\n    if (from < 0) {\n      from += length;\n      if (from < 0) {\n        from = 0;\n      }\n    }\n\n    for (let i = from; i < length; ++i) {\n      if (hasOwn(this, i) && convertToNumber(this[i]) === element) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.lastindexof */\n  lastIndexOf(element, ...opts) {\n    assertFloat16BitsArray(this);\n\n    const length = this.length;\n\n    let from = opts.length >= 1 ? ToIntegerOrInfinity(opts[0]) : length - 1;\n    if (from === -Infinity) {\n      return -1;\n    }\n\n    if (from >= 0) {\n      from = from < length - 1 ? from : length - 1;\n    } else {\n      from += length;\n    }\n\n    for (let i = from; i >= 0; --i) {\n      if (hasOwn(this, i) && convertToNumber(this[i]) === element) {\n        return i;\n      }\n    }\n\n    return -1;\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.includes */\n  includes(element, ...opts) {\n    assertFloat16BitsArray(this);\n\n    const length = this.length;\n\n    let from = ToIntegerOrInfinity(opts[0]);\n    if (from === Infinity) {\n      return false;\n    }\n\n    if (from < 0) {\n      from += length;\n      if (from < 0) {\n        from = 0;\n      }\n    }\n\n    const isNaN = Number.isNaN(element);\n    for (let i = from; i < length; ++i) {\n      const value = convertToNumber(this[i]);\n\n      if (isNaN && Number.isNaN(value)) {\n        return true;\n      }\n\n      if (value === element) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.join */\n  join(...opts) {\n    assertFloat16BitsArray(this);\n\n    const array = copyToArray(this);\n\n    return array.join(...opts);\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype.tolocalestring */\n  toLocaleString(...opts) {\n    assertFloat16BitsArray(this);\n\n    const array = copyToArray(this);\n\n    return array.toLocaleString(...opts);\n  }\n\n  /** @see https://tc39.es/ecma262/#sec-get-%typedarray%.prototype-@@tostringtag */\n  get [Symbol.toStringTag]() {\n    if (isFloat16BitsArray(this)) {\n      return \"Float16Array\";\n    }\n  }\n}\n\n/** @see https://tc39.es/ecma262/#sec-typedarray.bytes_per_element */\nObject.defineProperty(Float16Array, \"BYTES_PER_ELEMENT\", { value: Uint16Array.BYTES_PER_ELEMENT });\n\n/** limitation: It is peaked by `Object.getOwnPropertySymbols(Float16Array)` and `Reflect.ownKeys(Float16Array)` */\nObject.defineProperty(Float16Array, brand, {});\n\nconst Float16ArrayPrototype = Float16Array.prototype;\n\n/** @see https://tc39.es/ecma262/#sec-%typedarray%.prototype-@@iterator */\nObject.defineProperty(Float16ArrayPrototype, Symbol.iterator, {\n  value: Float16ArrayPrototype.values,\n  writable: true,\n  configurable: true,\n});\n\nfor (const key of Reflect.ownKeys(Float16ArrayPrototype)) {\n  // constructor is not callable\n  if (key === \"constructor\") {\n    continue;\n  }\n\n  const val = Float16ArrayPrototype[key];\n  if (typeof val === \"function\") {\n    defaultFloat16ArrayMethods.add(val);\n  }\n}\n", "import { convertToNumber, roundToFloat16Bits } from \"./_converter.mjs\";\nimport { isDataView } from \"./_util/is.mjs\";\n\n/**\n * returns an unsigned 16-bit float at the specified byte offset from the start of the DataView.\n *\n * @param {DataView} dataView\n * @param {number} byteOffset\n * @param {[boolean]} opts\n * @returns {number}\n */\nexport function getFloat16(dataView, byteOffset, ...opts) {\n  if (!isDataView(dataView)) {\n    throw new TypeError(\"First argument to getFloat16 function must be a DataView\");\n  }\n\n  return convertToNumber( dataView.getUint16(byteOffset, ...opts) );\n}\n\n/**\n * stores an unsigned 16-bit float value at the specified byte offset from the start of the DataView.\n *\n * @param {DataView} dataView\n * @param {number} byteOffset\n * @param {number} value\n * @param {[boolean]} opts\n */\nexport function setFloat16(dataView, byteOffset, value, ...opts) {\n  if (!isDataView(dataView)) {\n    throw new TypeError(\"First argument to setFloat16 function must be a DataView\");\n  }\n\n  dataView.setUint16(byteOffset, roundToFloat16Bits(value), ...opts);\n}\n", "import { getFloat16 } from '@petamoriken/float16';\nimport getAttribute from 'xml-utils/get-attribute';\nimport findTagsByName from 'xml-utils/find-tags-by-name';\n\nimport { photometricInterpretations, ExtraSamplesValues } from './globals';\nimport { fromWhiteIsZero, fromBlackIsZero, fromPalette, fromCMYK, fromYCbCr, fromCIELab } from './rgb';\nimport { getDecoder } from './compression';\nimport { resample, resampleInterleaved } from './resample';\n\nfunction sum(array, start, end) {\n  let s = 0;\n  for (let i = start; i < end; ++i) {\n    s += array[i];\n  }\n  return s;\n}\n\nfunction arrayForType(format, bitsPerSample, size) {\n  switch (format) {\n    case 1: // unsigned integer data\n      if (bitsPerSample <= 8) {\n        return new Uint8Array(size);\n      } else if (bitsPerSample <= 16) {\n        return new Uint16Array(size);\n      } else if (bitsPerSample <= 32) {\n        return new Uint32Array(size);\n      }\n      break;\n    case 2: // twos complement signed integer data\n      if (bitsPerSample === 8) {\n        return new Int8Array(size);\n      } else if (bitsPerSample === 16) {\n        return new Int16Array(size);\n      } else if (bitsPerSample === 32) {\n        return new Int32Array(size);\n      }\n      break;\n    case 3: // floating point data\n      switch (bitsPerSample) {\n        case 16:\n        case 32:\n          return new Float32Array(size);\n        case 64:\n          return new Float64Array(size);\n        default:\n          break;\n      }\n      break;\n    default:\n      break;\n  }\n  throw Error('Unsupported data format/bitsPerSample');\n}\n\nfunction needsNormalization(format, bitsPerSample) {\n  if ((format === 1 || format === 2) && bitsPerSample <= 32 && bitsPerSample % 8 === 0) {\n    return false;\n  } else if (format === 3 && (bitsPerSample === 16 || bitsPerSample === 32 || bitsPerSample === 64)) {\n    return false;\n  }\n  return true;\n}\n\nfunction normalizeArray(inBuffer, format, planarConfiguration, samplesPerPixel, bitsPerSample, tileWidth, tileHeight) {\n  // const inByteArray = new Uint8Array(inBuffer);\n  const view = new DataView(inBuffer);\n  const outSize = planarConfiguration === 2\n    ? tileHeight * tileWidth\n    : tileHeight * tileWidth * samplesPerPixel;\n  const samplesToTransfer = planarConfiguration === 2\n    ? 1 : samplesPerPixel;\n  const outArray = arrayForType(format, bitsPerSample, outSize);\n  // let pixel = 0;\n\n  const bitMask = parseInt('1'.repeat(bitsPerSample), 2);\n\n  if (format === 1) { // unsigned integer\n    // translation of https://github.com/OSGeo/gdal/blob/master/gdal/frmts/gtiff/geotiff.cpp#L7337\n    let pixelBitSkip;\n    // let sampleBitOffset = 0;\n    if (planarConfiguration === 1) {\n      pixelBitSkip = samplesPerPixel * bitsPerSample;\n      // sampleBitOffset = (samplesPerPixel - 1) * bitsPerSample;\n    } else {\n      pixelBitSkip = bitsPerSample;\n    }\n\n    // Bits per line rounds up to next byte boundary.\n    let bitsPerLine = tileWidth * pixelBitSkip;\n    if ((bitsPerLine & 7) !== 0) {\n      bitsPerLine = (bitsPerLine + 7) & (~7);\n    }\n\n    for (let y = 0; y < tileHeight; ++y) {\n      const lineBitOffset = y * bitsPerLine;\n      for (let x = 0; x < tileWidth; ++x) {\n        const pixelBitOffset = lineBitOffset + (x * samplesToTransfer * bitsPerSample);\n        for (let i = 0; i < samplesToTransfer; ++i) {\n          const bitOffset = pixelBitOffset + (i * bitsPerSample);\n          const outIndex = (((y * tileWidth) + x) * samplesToTransfer) + i;\n\n          const byteOffset = Math.floor(bitOffset / 8);\n          const innerBitOffset = bitOffset % 8;\n          if (innerBitOffset + bitsPerSample <= 8) {\n            outArray[outIndex] = (view.getUint8(byteOffset) >> (8 - bitsPerSample) - innerBitOffset) & bitMask;\n          } else if (innerBitOffset + bitsPerSample <= 16) {\n            outArray[outIndex] = (view.getUint16(byteOffset) >> (16 - bitsPerSample) - innerBitOffset) & bitMask;\n          } else if (innerBitOffset + bitsPerSample <= 24) {\n            const raw = (view.getUint16(byteOffset) << 8) | (view.getUint8(byteOffset + 2));\n            outArray[outIndex] = (raw >> (24 - bitsPerSample) - innerBitOffset) & bitMask;\n          } else {\n            outArray[outIndex] = (view.getUint32(byteOffset) >> (32 - bitsPerSample) - innerBitOffset) & bitMask;\n          }\n\n          // let outWord = 0;\n          // for (let bit = 0; bit < bitsPerSample; ++bit) {\n          //   if (inByteArray[bitOffset >> 3]\n          //     & (0x80 >> (bitOffset & 7))) {\n          //     outWord |= (1 << (bitsPerSample - 1 - bit));\n          //   }\n          //   ++bitOffset;\n          // }\n\n          // outArray[outIndex] = outWord;\n          // outArray[pixel] = outWord;\n          // pixel += 1;\n        }\n        // bitOffset = bitOffset + pixelBitSkip - bitsPerSample;\n      }\n    }\n  } else if (format === 3) { // floating point\n    // Float16 is handled elsewhere\n    // normalize 16/24 bit floats to 32 bit floats in the array\n    // console.time();\n    // if (bitsPerSample === 16) {\n    //   for (let byte = 0, outIndex = 0; byte < inBuffer.byteLength; byte += 2, ++outIndex) {\n    //     outArray[outIndex] = getFloat16(view, byte);\n    //   }\n    // }\n    // console.timeEnd()\n  }\n\n  return outArray.buffer;\n}\n\n/**\n * GeoTIFF sub-file image.\n */\nclass GeoTIFFImage {\n  /**\n   * @constructor\n   * @param {Object} fileDirectory The parsed file directory\n   * @param {Object} geoKeys The parsed geo-keys\n   * @param {DataView} dataView The DataView for the underlying file.\n   * @param {Boolean} littleEndian Whether the file is encoded in little or big endian\n   * @param {Boolean} cache Whether or not decoded tiles shall be cached\n   * @param {Source} source The datasource to read from\n   */\n  constructor(fileDirectory, geoKeys, dataView, littleEndian, cache, source) {\n    this.fileDirectory = fileDirectory;\n    this.geoKeys = geoKeys;\n    this.dataView = dataView;\n    this.littleEndian = littleEndian;\n    this.tiles = cache ? {} : null;\n    this.isTiled = !fileDirectory.StripOffsets;\n    const planarConfiguration = fileDirectory.PlanarConfiguration;\n    this.planarConfiguration = (typeof planarConfiguration === 'undefined') ? 1 : planarConfiguration;\n    if (this.planarConfiguration !== 1 && this.planarConfiguration !== 2) {\n      throw new Error('Invalid planar configuration.');\n    }\n\n    this.source = source;\n  }\n\n  /**\n   * Returns the associated parsed file directory.\n   * @returns {Object} the parsed file directory\n   */\n  getFileDirectory() {\n    return this.fileDirectory;\n  }\n\n  /**\n   * Returns the associated parsed geo keys.\n   * @returns {Object} the parsed geo keys\n   */\n  getGeoKeys() {\n    return this.geoKeys;\n  }\n\n  /**\n   * Returns the width of the image.\n   * @returns {Number} the width of the image\n   */\n  getWidth() {\n    return this.fileDirectory.ImageWidth;\n  }\n\n  /**\n   * Returns the height of the image.\n   * @returns {Number} the height of the image\n   */\n  getHeight() {\n    return this.fileDirectory.ImageLength;\n  }\n\n  /**\n   * Returns the number of samples per pixel.\n   * @returns {Number} the number of samples per pixel\n   */\n  getSamplesPerPixel() {\n    return typeof this.fileDirectory.SamplesPerPixel !== 'undefined'\n      ? this.fileDirectory.SamplesPerPixel : 1;\n  }\n\n  /**\n   * Returns the width of each tile.\n   * @returns {Number} the width of each tile\n   */\n  getTileWidth() {\n    return this.isTiled ? this.fileDirectory.TileWidth : this.getWidth();\n  }\n\n  /**\n   * Returns the height of each tile.\n   * @returns {Number} the height of each tile\n   */\n  getTileHeight() {\n    if (this.isTiled) {\n      return this.fileDirectory.TileLength;\n    }\n    if (typeof this.fileDirectory.RowsPerStrip !== 'undefined') {\n      return Math.min(this.fileDirectory.RowsPerStrip, this.getHeight());\n    }\n    return this.getHeight();\n  }\n\n  getBlockWidth() {\n    return this.getTileWidth();\n  }\n\n  getBlockHeight(y) {\n    if (this.isTiled || (y + 1) * this.getTileHeight() <= this.getHeight()) {\n      return this.getTileHeight();\n    } else {\n      return this.getHeight() - (y * this.getTileHeight());\n    }\n  }\n\n  /**\n   * Calculates the number of bytes for each pixel across all samples. Only full\n   * bytes are supported, an exception is thrown when this is not the case.\n   * @returns {Number} the bytes per pixel\n   */\n  getBytesPerPixel() {\n    let bytes = 0;\n    for (let i = 0; i < this.fileDirectory.BitsPerSample.length; ++i) {\n      bytes += this.getSampleByteSize(i);\n    }\n    return bytes;\n  }\n\n  getSampleByteSize(i) {\n    if (i >= this.fileDirectory.BitsPerSample.length) {\n      throw new RangeError(`Sample index ${i} is out of range.`);\n    }\n    return Math.ceil(this.fileDirectory.BitsPerSample[i] / 8);\n  }\n\n  getReaderForSample(sampleIndex) {\n    const format = this.fileDirectory.SampleFormat\n      ? this.fileDirectory.SampleFormat[sampleIndex] : 1;\n    const bitsPerSample = this.fileDirectory.BitsPerSample[sampleIndex];\n    switch (format) {\n      case 1: // unsigned integer data\n        if (bitsPerSample <= 8) {\n          return DataView.prototype.getUint8;\n        } else if (bitsPerSample <= 16) {\n          return DataView.prototype.getUint16;\n        } else if (bitsPerSample <= 32) {\n          return DataView.prototype.getUint32;\n        }\n        break;\n      case 2: // twos complement signed integer data\n        if (bitsPerSample <= 8) {\n          return DataView.prototype.getInt8;\n        } else if (bitsPerSample <= 16) {\n          return DataView.prototype.getInt16;\n        } else if (bitsPerSample <= 32) {\n          return DataView.prototype.getInt32;\n        }\n        break;\n      case 3:\n        switch (bitsPerSample) {\n          case 16:\n            return function (offset, littleEndian) {\n              return getFloat16(this, offset, littleEndian);\n            };\n          case 32:\n            return DataView.prototype.getFloat32;\n          case 64:\n            return DataView.prototype.getFloat64;\n          default:\n            break;\n        }\n        break;\n      default:\n        break;\n    }\n    throw Error('Unsupported data format/bitsPerSample');\n  }\n\n  getSampleFormat(sampleIndex = 0) {\n    return this.fileDirectory.SampleFormat\n      ? this.fileDirectory.SampleFormat[sampleIndex] : 1;\n  }\n\n  getBitsPerSample(sampleIndex = 0) {\n    return this.fileDirectory.BitsPerSample[sampleIndex];\n  }\n\n  getArrayForSample(sampleIndex, size) {\n    const format = this.getSampleFormat(sampleIndex);\n    const bitsPerSample = this.getBitsPerSample(sampleIndex);\n    return arrayForType(format, bitsPerSample, size);\n  }\n\n  /**\n   * Returns the decoded strip or tile.\n   * @param {Number} x the strip or tile x-offset\n   * @param {Number} y the tile y-offset (0 for stripped images)\n   * @param {Number} sample the sample to get for separated samples\n   * @param {Pool|AbstractDecoder} poolOrDecoder the decoder or decoder pool\n   * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n   *                               to be aborted\n   * @returns {Promise.<ArrayBuffer>}\n   */\n  async getTileOrStrip(x, y, sample, poolOrDecoder, signal) {\n    const numTilesPerRow = Math.ceil(this.getWidth() / this.getTileWidth());\n    const numTilesPerCol = Math.ceil(this.getHeight() / this.getTileHeight());\n    let index;\n    const { tiles } = this;\n    if (this.planarConfiguration === 1) {\n      index = (y * numTilesPerRow) + x;\n    } else if (this.planarConfiguration === 2) {\n      index = (sample * numTilesPerRow * numTilesPerCol) + (y * numTilesPerRow) + x;\n    }\n\n    let offset;\n    let byteCount;\n    if (this.isTiled) {\n      offset = this.fileDirectory.TileOffsets[index];\n      byteCount = this.fileDirectory.TileByteCounts[index];\n    } else {\n      offset = this.fileDirectory.StripOffsets[index];\n      byteCount = this.fileDirectory.StripByteCounts[index];\n    }\n    const slice = (await this.source.fetch([{ offset, length: byteCount }], signal))[0];\n\n    let request;\n    if (tiles === null || !tiles[index]) {\n    // resolve each request by potentially applying array normalization\n      request = (async () => {\n        let data = await poolOrDecoder.decode(this.fileDirectory, slice);\n        const sampleFormat = this.getSampleFormat();\n        const bitsPerSample = this.getBitsPerSample();\n        if (needsNormalization(sampleFormat, bitsPerSample)) {\n          data = normalizeArray(\n            data,\n            sampleFormat,\n            this.planarConfiguration,\n            this.getSamplesPerPixel(),\n            bitsPerSample,\n            this.getTileWidth(),\n            this.getBlockHeight(y),\n          );\n        }\n        return data;\n      })();\n\n      // set the cache\n      if (tiles !== null) {\n        tiles[index] = request;\n      }\n    } else {\n      // get from the cache\n      request = tiles[index];\n    }\n\n    // cache the tile request\n    return { x, y, sample, data: await request };\n  }\n\n  /**\n   * Internal read function.\n   * @private\n   * @param {Array} imageWindow The image window in pixel coordinates\n   * @param {Array} samples The selected samples (0-based indices)\n   * @param {TypedArray[]|TypedArray} valueArrays The array(s) to write into\n   * @param {Boolean} interleave Whether or not to write in an interleaved manner\n   * @param {Pool|AbstractDecoder} poolOrDecoder the decoder or decoder pool\n   * @param {number} width the width of window to be read into\n   * @param {number} height the height of window to be read into\n   * @param {number} resampleMethod the resampling method to be used when interpolating\n   * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n   *                               to be aborted\n   * @returns {Promise<TypedArray[]>|Promise<TypedArray>}\n   */\n  async _readRaster(imageWindow, samples, valueArrays, interleave, poolOrDecoder, width,\n    height, resampleMethod, signal) {\n    const tileWidth = this.getTileWidth();\n    const tileHeight = this.getTileHeight();\n    const imageWidth = this.getWidth();\n    const imageHeight = this.getHeight();\n\n    const minXTile = Math.max(Math.floor(imageWindow[0] / tileWidth), 0);\n    const maxXTile = Math.min(\n      Math.ceil(imageWindow[2] / tileWidth),\n      Math.ceil(imageWidth / tileWidth),\n    );\n    const minYTile = Math.max(Math.floor(imageWindow[1] / tileHeight), 0);\n    const maxYTile = Math.min(\n      Math.ceil(imageWindow[3] / tileHeight),\n      Math.ceil(imageHeight / tileHeight),\n    );\n    const windowWidth = imageWindow[2] - imageWindow[0];\n\n    let bytesPerPixel = this.getBytesPerPixel();\n\n    const srcSampleOffsets = [];\n    const sampleReaders = [];\n    for (let i = 0; i < samples.length; ++i) {\n      if (this.planarConfiguration === 1) {\n        srcSampleOffsets.push(sum(this.fileDirectory.BitsPerSample, 0, samples[i]) / 8);\n      } else {\n        srcSampleOffsets.push(0);\n      }\n      sampleReaders.push(this.getReaderForSample(samples[i]));\n    }\n\n    const promises = [];\n    const { littleEndian } = this;\n\n    for (let yTile = minYTile; yTile < maxYTile; ++yTile) {\n      for (let xTile = minXTile; xTile < maxXTile; ++xTile) {\n        for (let sampleIndex = 0; sampleIndex < samples.length; ++sampleIndex) {\n          const si = sampleIndex;\n          const sample = samples[sampleIndex];\n          if (this.planarConfiguration === 2) {\n            bytesPerPixel = this.getSampleByteSize(sampleIndex);\n          }\n          const promise = this.getTileOrStrip(xTile, yTile, sample, poolOrDecoder, signal);\n          promises.push(promise);\n          promise.then((tile) => {\n            const buffer = tile.data;\n            const dataView = new DataView(buffer);\n            const blockHeight = this.getBlockHeight(tile.y);\n            const firstLine = tile.y * tileHeight;\n            const firstCol = tile.x * tileWidth;\n            const lastLine = firstLine + blockHeight;\n            const lastCol = (tile.x + 1) * tileWidth;\n            const reader = sampleReaders[si];\n\n            const ymax = Math.min(blockHeight, blockHeight - (lastLine - imageWindow[3]), imageHeight - firstLine);\n            const xmax = Math.min(tileWidth, tileWidth - (lastCol - imageWindow[2]), imageWidth - firstCol);\n\n            for (let y = Math.max(0, imageWindow[1] - firstLine); y < ymax; ++y) {\n              for (let x = Math.max(0, imageWindow[0] - firstCol); x < xmax; ++x) {\n                const pixelOffset = ((y * tileWidth) + x) * bytesPerPixel;\n                const value = reader.call(\n                  dataView, pixelOffset + srcSampleOffsets[si], littleEndian,\n                );\n                let windowCoordinate;\n                if (interleave) {\n                  windowCoordinate = ((y + firstLine - imageWindow[1]) * windowWidth * samples.length)\n                    + ((x + firstCol - imageWindow[0]) * samples.length)\n                    + si;\n                  valueArrays[windowCoordinate] = value;\n                } else {\n                  windowCoordinate = (\n                    (y + firstLine - imageWindow[1]) * windowWidth\n                  ) + x + firstCol - imageWindow[0];\n                  valueArrays[si][windowCoordinate] = value;\n                }\n              }\n            }\n          });\n        }\n      }\n    }\n    await Promise.all(promises);\n\n    if ((width && (imageWindow[2] - imageWindow[0]) !== width)\n        || (height && (imageWindow[3] - imageWindow[1]) !== height)) {\n      let resampled;\n      if (interleave) {\n        resampled = resampleInterleaved(\n          valueArrays,\n          imageWindow[2] - imageWindow[0],\n          imageWindow[3] - imageWindow[1],\n          width, height,\n          samples.length,\n          resampleMethod,\n        );\n      } else {\n        resampled = resample(\n          valueArrays,\n          imageWindow[2] - imageWindow[0],\n          imageWindow[3] - imageWindow[1],\n          width, height,\n          resampleMethod,\n        );\n      }\n      resampled.width = width;\n      resampled.height = height;\n      return resampled;\n    }\n\n    valueArrays.width = width || imageWindow[2] - imageWindow[0];\n    valueArrays.height = height || imageWindow[3] - imageWindow[1];\n\n    return valueArrays;\n  }\n\n  /**\n   * Reads raster data from the image. This function reads all selected samples\n   * into separate arrays of the correct type for that sample or into a single\n   * combined array when `interleave` is set. When provided, only a subset\n   * of the raster is read for each sample.\n   *\n   * @param {Object} [options={}] optional parameters\n   * @param {Array} [options.window=whole image] the subset to read data from.\n   * @param {Array} [options.samples=all samples] the selection of samples to read from.\n   * @param {Boolean} [options.interleave=false] whether the data shall be read\n   *                                             in one single array or separate\n   *                                             arrays.\n   * @param {Number} [options.pool=null] The optional decoder pool to use.\n   * @param {number} [options.width] The desired width of the output. When the width is\n   *                                 not the same as the images, resampling will be\n   *                                 performed.\n   * @param {number} [options.height] The desired height of the output. When the width\n   *                                  is not the same as the images, resampling will\n   *                                  be performed.\n   * @param {string} [options.resampleMethod='nearest'] The desired resampling method.\n   * @param {number|number[]} [options.fillValue] The value to use for parts of the image\n   *                                              outside of the images extent. When\n   *                                              multiple samples are requested, an\n   *                                              array of fill values can be passed.\n   * @param {AbortSignal} [options.signal] An AbortSignal that may be signalled if the request is\n   *                                       to be aborted\n   * @returns {Promise.<(TypedArray|TypedArray[])>} the decoded arrays as a promise\n   */\n  async readRasters({\n    window: wnd, samples = [], interleave, pool = null,\n    width, height, resampleMethod, fillValue, signal,\n  } = {}) {\n    const imageWindow = wnd || [0, 0, this.getWidth(), this.getHeight()];\n\n    // check parameters\n    if (imageWindow[0] > imageWindow[2] || imageWindow[1] > imageWindow[3]) {\n      throw new Error('Invalid subsets');\n    }\n\n    const imageWindowWidth = imageWindow[2] - imageWindow[0];\n    const imageWindowHeight = imageWindow[3] - imageWindow[1];\n    const numPixels = imageWindowWidth * imageWindowHeight;\n    const samplesPerPixel = this.getSamplesPerPixel();\n\n    if (!samples || !samples.length) {\n      for (let i = 0; i < samplesPerPixel; ++i) {\n        samples.push(i);\n      }\n    } else {\n      for (let i = 0; i < samples.length; ++i) {\n        if (samples[i] >= samplesPerPixel) {\n          return Promise.reject(new RangeError(`Invalid sample index '${samples[i]}'.`));\n        }\n      }\n    }\n    let valueArrays;\n    if (interleave) {\n      const format = this.fileDirectory.SampleFormat\n        ? Math.max.apply(null, this.fileDirectory.SampleFormat) : 1;\n      const bitsPerSample = Math.max.apply(null, this.fileDirectory.BitsPerSample);\n      valueArrays = arrayForType(format, bitsPerSample, numPixels * samples.length);\n      if (fillValue) {\n        valueArrays.fill(fillValue);\n      }\n    } else {\n      valueArrays = [];\n      for (let i = 0; i < samples.length; ++i) {\n        const valueArray = this.getArrayForSample(samples[i], numPixels);\n        if (Array.isArray(fillValue) && i < fillValue.length) {\n          valueArray.fill(fillValue[i]);\n        } else if (fillValue && !Array.isArray(fillValue)) {\n          valueArray.fill(fillValue);\n        }\n        valueArrays.push(valueArray);\n      }\n    }\n\n    const poolOrDecoder = pool || await getDecoder(this.fileDirectory);\n\n    const result = await this._readRaster(\n      imageWindow, samples, valueArrays, interleave, poolOrDecoder, width, height, resampleMethod, signal,\n    );\n    return result;\n  }\n\n  /**\n   * Reads raster data from the image as RGB. The result is always an\n   * interleaved typed array.\n   * Colorspaces other than RGB will be transformed to RGB, color maps expanded.\n   * When no other method is applicable, the first sample is used to produce a\n   * greayscale image.\n   * When provided, only a subset of the raster is read for each sample.\n   *\n   * @param {Object} [options] optional parameters\n   * @param {Array} [options.window=whole image] the subset to read data from.\n   * @param {Boolean} [options.interleave=true] whether the data shall be read\n   *                                             in one single array or separate\n   *                                             arrays.\n   * @param {Number} [options.pool=null] The optional decoder pool to use.\n   * @param {number} [options.width] The desired width of the output. When the width is no the\n   *                                 same as the images, resampling will be performed.\n   * @param {number} [options.height] The desired height of the output. When the width is no the\n   *                                  same as the images, resampling will be performed.\n   * @param {string} [options.resampleMethod='nearest'] The desired resampling method.\n   * @param {bool} [options.enableAlpha=false] Enable reading alpha channel if present.\n   * @param {AbortSignal} [options.signal] An AbortSignal that may be signalled if the request is\n   *                                       to be aborted\n   * @returns {Promise.<TypedArray|TypedArray[]>} the RGB array as a Promise\n   */\n  async readRGB({ window, interleave = true, pool = null, width, height,\n    resampleMethod, enableAlpha = false, signal } = {}) {\n    const imageWindow = window || [0, 0, this.getWidth(), this.getHeight()];\n\n    // check parameters\n    if (imageWindow[0] > imageWindow[2] || imageWindow[1] > imageWindow[3]) {\n      throw new Error('Invalid subsets');\n    }\n\n    const pi = this.fileDirectory.PhotometricInterpretation;\n\n    if (pi === photometricInterpretations.RGB) {\n      let s = [0, 1, 2];\n      if ((!(this.fileDirectory.ExtraSamples === ExtraSamplesValues.Unspecified)) && enableAlpha) {\n        s = [];\n        for (let i = 0; i < this.fileDirectory.BitsPerSample.length; i += 1) {\n          s.push(i);\n        }\n      }\n      return this.readRasters({\n        window,\n        interleave,\n        samples: s,\n        pool,\n        width,\n        height,\n        resampleMethod,\n        signal,\n      });\n    }\n\n    let samples;\n    switch (pi) {\n      case photometricInterpretations.WhiteIsZero:\n      case photometricInterpretations.BlackIsZero:\n      case photometricInterpretations.Palette:\n        samples = [0];\n        break;\n      case photometricInterpretations.CMYK:\n        samples = [0, 1, 2, 3];\n        break;\n      case photometricInterpretations.YCbCr:\n      case photometricInterpretations.CIELab:\n        samples = [0, 1, 2];\n        break;\n      default:\n        throw new Error('Invalid or unsupported photometric interpretation.');\n    }\n\n    const subOptions = {\n      window: imageWindow,\n      interleave: true,\n      samples,\n      pool,\n      width,\n      height,\n      resampleMethod,\n      signal,\n    };\n    const { fileDirectory } = this;\n    const raster = await this.readRasters(subOptions);\n\n    const max = 2 ** this.fileDirectory.BitsPerSample[0];\n    let data;\n    switch (pi) {\n      case photometricInterpretations.WhiteIsZero:\n        data = fromWhiteIsZero(raster, max);\n        break;\n      case photometricInterpretations.BlackIsZero:\n        data = fromBlackIsZero(raster, max);\n        break;\n      case photometricInterpretations.Palette:\n        data = fromPalette(raster, fileDirectory.ColorMap);\n        break;\n      case photometricInterpretations.CMYK:\n        data = fromCMYK(raster);\n        break;\n      case photometricInterpretations.YCbCr:\n        data = fromYCbCr(raster);\n        break;\n      case photometricInterpretations.CIELab:\n        data = fromCIELab(raster);\n        break;\n      default:\n        throw new Error('Unsupported photometric interpretation.');\n    }\n\n    // if non-interleaved data is requested, we must split the channels\n    // into their respective arrays\n    if (!interleave) {\n      const red = new Uint8Array(data.length / 3);\n      const green = new Uint8Array(data.length / 3);\n      const blue = new Uint8Array(data.length / 3);\n      for (let i = 0, j = 0; i < data.length; i += 3, ++j) {\n        red[j] = data[i];\n        green[j] = data[i + 1];\n        blue[j] = data[i + 2];\n      }\n      data = [red, green, blue];\n    }\n\n    data.width = raster.width;\n    data.height = raster.height;\n    return data;\n  }\n\n  /**\n   * Returns an array of tiepoints.\n   * @returns {Object[]}\n   */\n  getTiePoints() {\n    if (!this.fileDirectory.ModelTiepoint) {\n      return [];\n    }\n\n    const tiePoints = [];\n    for (let i = 0; i < this.fileDirectory.ModelTiepoint.length; i += 6) {\n      tiePoints.push({\n        i: this.fileDirectory.ModelTiepoint[i],\n        j: this.fileDirectory.ModelTiepoint[i + 1],\n        k: this.fileDirectory.ModelTiepoint[i + 2],\n        x: this.fileDirectory.ModelTiepoint[i + 3],\n        y: this.fileDirectory.ModelTiepoint[i + 4],\n        z: this.fileDirectory.ModelTiepoint[i + 5],\n      });\n    }\n    return tiePoints;\n  }\n\n  /**\n   * Returns the parsed GDAL metadata items.\n   *\n   * If sample is passed to null, dataset-level metadata will be returned.\n   * Otherwise only metadata specific to the provided sample will be returned.\n   *\n   * @param {Number} [sample=null] The sample index.\n   * @returns {Object}\n   */\n  getGDALMetadata(sample = null) {\n    const metadata = {};\n    if (!this.fileDirectory.GDAL_METADATA) {\n      return null;\n    }\n    const string = this.fileDirectory.GDAL_METADATA;\n\n    let items = findTagsByName(string, 'Item');\n\n    if (sample !== null) {\n      items = items.filter((item) => Number(getAttribute(item, 'sample')) === sample);\n    }\n\n    for (let i = 0; i < items.length; ++i) {\n      const item = items[i];\n      metadata[getAttribute(item, 'name')] = item.inner;\n    }\n    return metadata;\n  }\n\n  /**\n   * Returns the GDAL nodata value\n   * @returns {Number} or null\n   */\n  getGDALNoData() {\n    if (!this.fileDirectory.GDAL_NODATA) {\n      return null;\n    }\n    const string = this.fileDirectory.GDAL_NODATA;\n    return Number(string.substring(0, string.length - 1));\n  }\n\n  /**\n   * Returns the image origin as a XYZ-vector. When the image has no affine\n   * transformation, then an exception is thrown.\n   * @returns {Array} The origin as a vector\n   */\n  getOrigin() {\n    const tiePoints = this.fileDirectory.ModelTiepoint;\n    const modelTransformation = this.fileDirectory.ModelTransformation;\n    if (tiePoints && tiePoints.length === 6) {\n      return [\n        tiePoints[3],\n        tiePoints[4],\n        tiePoints[5],\n      ];\n    }\n    if (modelTransformation) {\n      return [\n        modelTransformation[3],\n        modelTransformation[7],\n        modelTransformation[11],\n      ];\n    }\n    throw new Error('The image does not have an affine transformation.');\n  }\n\n  /**\n   * Returns the image resolution as a XYZ-vector. When the image has no affine\n   * transformation, then an exception is thrown.\n   * @param {GeoTIFFImage} [referenceImage=null] A reference image to calculate the resolution from\n   *                                             in cases when the current image does not have the\n   *                                             required tags on its own.\n   * @returns {Array} The resolution as a vector\n   */\n  getResolution(referenceImage = null) {\n    const modelPixelScale = this.fileDirectory.ModelPixelScale;\n    const modelTransformation = this.fileDirectory.ModelTransformation;\n\n    if (modelPixelScale) {\n      return [\n        modelPixelScale[0],\n        -modelPixelScale[1],\n        modelPixelScale[2],\n      ];\n    }\n    if (modelTransformation) {\n      return [\n        modelTransformation[0],\n        modelTransformation[5],\n        modelTransformation[10],\n      ];\n    }\n\n    if (referenceImage) {\n      const [refResX, refResY, refResZ] = referenceImage.getResolution();\n      return [\n        refResX * referenceImage.getWidth() / this.getWidth(),\n        refResY * referenceImage.getHeight() / this.getHeight(),\n        refResZ * referenceImage.getWidth() / this.getWidth(),\n      ];\n    }\n\n    throw new Error('The image does not have an affine transformation.');\n  }\n\n  /**\n   * Returns whether or not the pixels of the image depict an area (or point).\n   * @returns {Boolean} Whether the pixels are a point\n   */\n  pixelIsArea() {\n    return this.geoKeys.GTRasterTypeGeoKey === 1;\n  }\n\n  /**\n   * Returns the image bounding box as an array of 4 values: min-x, min-y,\n   * max-x and max-y. When the image has no affine transformation, then an\n   * exception is thrown.\n   * @returns {Array} The bounding box\n   */\n  getBoundingBox() {\n    const origin = this.getOrigin();\n    const resolution = this.getResolution();\n\n    const x1 = origin[0];\n    const y1 = origin[1];\n\n    const x2 = x1 + (resolution[0] * this.getWidth());\n    const y2 = y1 + (resolution[1] * this.getHeight());\n\n    return [\n      Math.min(x1, x2),\n      Math.min(y1, y2),\n      Math.max(x1, x2),\n      Math.max(y1, y2),\n    ];\n  }\n}\n\nexport default GeoTIFFImage;\n", "export function fromWhiteIsZero(raster, max) {\n  const { width, height } = raster;\n  const rgbRaster = new Uint8Array(width * height * 3);\n  let value;\n  for (let i = 0, j = 0; i < raster.length; ++i, j += 3) {\n    value = 256 - (raster[i] / max * 256);\n    rgbRaster[j] = value;\n    rgbRaster[j + 1] = value;\n    rgbRaster[j + 2] = value;\n  }\n  return rgbRaster;\n}\n\nexport function fromBlackIsZero(raster, max) {\n  const { width, height } = raster;\n  const rgbRaster = new Uint8Array(width * height * 3);\n  let value;\n  for (let i = 0, j = 0; i < raster.length; ++i, j += 3) {\n    value = raster[i] / max * 256;\n    rgbRaster[j] = value;\n    rgbRaster[j + 1] = value;\n    rgbRaster[j + 2] = value;\n  }\n  return rgbRaster;\n}\n\nexport function fromPalette(raster, colorMap) {\n  const { width, height } = raster;\n  const rgbRaster = new Uint8Array(width * height * 3);\n  const greenOffset = colorMap.length / 3;\n  const blueOffset = colorMap.length / 3 * 2;\n  for (let i = 0, j = 0; i < raster.length; ++i, j += 3) {\n    const mapIndex = raster[i];\n    rgbRaster[j] = colorMap[mapIndex] / 65536 * 256;\n    rgbRaster[j + 1] = colorMap[mapIndex + greenOffset] / 65536 * 256;\n    rgbRaster[j + 2] = colorMap[mapIndex + blueOffset] / 65536 * 256;\n  }\n  return rgbRaster;\n}\n\nexport function fromCMYK(cmykRaster) {\n  const { width, height } = cmykRaster;\n  const rgbRaster = new Uint8Array(width * height * 3);\n  for (let i = 0, j = 0; i < cmykRaster.length; i += 4, j += 3) {\n    const c = cmykRaster[i];\n    const m = cmykRaster[i + 1];\n    const y = cmykRaster[i + 2];\n    const k = cmykRaster[i + 3];\n\n    rgbRaster[j] = 255 * ((255 - c) / 256) * ((255 - k) / 256);\n    rgbRaster[j + 1] = 255 * ((255 - m) / 256) * ((255 - k) / 256);\n    rgbRaster[j + 2] = 255 * ((255 - y) / 256) * ((255 - k) / 256);\n  }\n  return rgbRaster;\n}\n\nexport function fromYCbCr(yCbCrRaster) {\n  const { width, height } = yCbCrRaster;\n  const rgbRaster = new Uint8ClampedArray(width * height * 3);\n  for (let i = 0, j = 0; i < yCbCrRaster.length; i += 3, j += 3) {\n    const y = yCbCrRaster[i];\n    const cb = yCbCrRaster[i + 1];\n    const cr = yCbCrRaster[i + 2];\n\n    rgbRaster[j] = (y + (1.40200 * (cr - 0x80)));\n    rgbRaster[j + 1] = (y - (0.34414 * (cb - 0x80)) - (0.71414 * (cr - 0x80)));\n    rgbRaster[j + 2] = (y + (1.77200 * (cb - 0x80)));\n  }\n  return rgbRaster;\n}\n\nconst Xn = 0.95047;\nconst Yn = 1.00000;\nconst Zn = 1.08883;\n\n// from https://github.com/antimatter15/rgb-lab/blob/master/color.js\n\nexport function fromCIELab(cieLabRaster) {\n  const { width, height } = cieLabRaster;\n  const rgbRaster = new Uint8Array(width * height * 3);\n\n  for (let i = 0, j = 0; i < cieLabRaster.length; i += 3, j += 3) {\n    const L = cieLabRaster[i + 0];\n    const a_ = cieLabRaster[i + 1] << 24 >> 24; // conversion from uint8 to int8\n    const b_ = cieLabRaster[i + 2] << 24 >> 24; // same\n\n    let y = (L + 16) / 116;\n    let x = (a_ / 500) + y;\n    let z = y - (b_ / 200);\n    let r;\n    let g;\n    let b;\n\n    x = Xn * ((x * x * x > 0.008856) ? x * x * x : (x - (16 / 116)) / 7.787);\n    y = Yn * ((y * y * y > 0.008856) ? y * y * y : (y - (16 / 116)) / 7.787);\n    z = Zn * ((z * z * z > 0.008856) ? z * z * z : (z - (16 / 116)) / 7.787);\n\n    r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n    g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n    b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n    r = (r > 0.0031308) ? ((1.055 * (r ** (1 / 2.4))) - 0.055) : 12.92 * r;\n    g = (g > 0.0031308) ? ((1.055 * (g ** (1 / 2.4))) - 0.055) : 12.92 * g;\n    b = (b > 0.0031308) ? ((1.055 * (b ** (1 / 2.4))) - 0.055) : 12.92 * b;\n\n    rgbRaster[j] = Math.max(0, Math.min(1, r)) * 255;\n    rgbRaster[j + 1] = Math.max(0, Math.min(1, g)) * 255;\n    rgbRaster[j + 2] = Math.max(0, Math.min(1, b)) * 255;\n  }\n  return rgbRaster;\n}\n", "const registry = new Map();\n\nexport function addDecoder(cases, importFn) {\n  if (!Array.isArray(cases)) {\n    cases = [cases]; // eslint-disable-line no-param-reassign\n  }\n  cases.forEach((c) => registry.set(c, importFn));\n}\n\nexport async function getDecoder(fileDirectory) {\n  const importFn = registry.get(fileDirectory.Compression);\n  if (!importFn) {\n    throw new Error(`Unknown compression method identifier: ${fileDirectory.Compression}`);\n  }\n  const Decoder = await importFn();\n  return new Decoder(fileDirectory);\n}\n\n// Add default decoders to registry (end-user may override with other implementations)\naddDecoder([undefined, 1], () => import('./raw').then((m) => m.default));\naddDecoder(5, () => import('./lzw').then((m) => m.default));\naddDecoder(6, () => {\n  throw new Error('old style JPEG compression is not supported.');\n});\naddDecoder(7, () => import('./jpeg').then((m) => m.default));\naddDecoder([8, 32946], () => import('./deflate').then((m) => m.default));\naddDecoder(32773, () => import('./packbits').then((m) => m.default));\naddDecoder(34887, () => import('./lerc').then((m) => m.default));\n", "/**\n * @module resample\n */\n\nfunction copyNewSize(array, width, height, samplesPerPixel = 1) {\n  return new (Object.getPrototypeOf(array).constructor)(width * height * samplesPerPixel);\n}\n\n/**\n * Resample the input arrays using nearest neighbor value selection.\n * @param {TypedArray[]} valueArrays The input arrays to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @returns {TypedArray[]} The resampled rasters\n */\nexport function resampleNearest(valueArrays, inWidth, inHeight, outWidth, outHeight) {\n  const relX = inWidth / outWidth;\n  const relY = inHeight / outHeight;\n  return valueArrays.map((array) => {\n    const newArray = copyNewSize(array, outWidth, outHeight);\n    for (let y = 0; y < outHeight; ++y) {\n      const cy = Math.min(Math.round(relY * y), inHeight - 1);\n      for (let x = 0; x < outWidth; ++x) {\n        const cx = Math.min(Math.round(relX * x), inWidth - 1);\n        const value = array[(cy * inWidth) + cx];\n        newArray[(y * outWidth) + x] = value;\n      }\n    }\n    return newArray;\n  });\n}\n\n// simple linear interpolation, code from:\n// https://en.wikipedia.org/wiki/Linear_interpolation#Programming_language_support\nfunction lerp(v0, v1, t) {\n  return ((1 - t) * v0) + (t * v1);\n}\n\n/**\n * Resample the input arrays using bilinear interpolation.\n * @param {TypedArray[]} valueArrays The input arrays to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @returns {TypedArray[]} The resampled rasters\n */\nexport function resampleBilinear(valueArrays, inWidth, inHeight, outWidth, outHeight) {\n  const relX = inWidth / outWidth;\n  const relY = inHeight / outHeight;\n\n  return valueArrays.map((array) => {\n    const newArray = copyNewSize(array, outWidth, outHeight);\n    for (let y = 0; y < outHeight; ++y) {\n      const rawY = relY * y;\n\n      const yl = Math.floor(rawY);\n      const yh = Math.min(Math.ceil(rawY), (inHeight - 1));\n\n      for (let x = 0; x < outWidth; ++x) {\n        const rawX = relX * x;\n        const tx = rawX % 1;\n\n        const xl = Math.floor(rawX);\n        const xh = Math.min(Math.ceil(rawX), (inWidth - 1));\n\n        const ll = array[(yl * inWidth) + xl];\n        const hl = array[(yl * inWidth) + xh];\n        const lh = array[(yh * inWidth) + xl];\n        const hh = array[(yh * inWidth) + xh];\n\n        const value = lerp(\n          lerp(ll, hl, tx),\n          lerp(lh, hh, tx),\n          rawY % 1,\n        );\n        newArray[(y * outWidth) + x] = value;\n      }\n    }\n    return newArray;\n  });\n}\n\n/**\n * Resample the input arrays using the selected resampling method.\n * @param {TypedArray[]} valueArrays The input arrays to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @param {string} [method = 'nearest'] The desired resampling method\n * @returns {TypedArray[]} The resampled rasters\n */\nexport function resample(valueArrays, inWidth, inHeight, outWidth, outHeight, method = 'nearest') {\n  switch (method.toLowerCase()) {\n    case 'nearest':\n      return resampleNearest(valueArrays, inWidth, inHeight, outWidth, outHeight);\n    case 'bilinear':\n    case 'linear':\n      return resampleBilinear(valueArrays, inWidth, inHeight, outWidth, outHeight);\n    default:\n      throw new Error(`Unsupported resampling method: '${method}'`);\n  }\n}\n\n/**\n * Resample the pixel interleaved input array using nearest neighbor value selection.\n * @param {TypedArray} valueArrays The input arrays to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @param {number} samples The number of samples per pixel for pixel\n *                         interleaved data\n * @returns {TypedArray} The resampled raster\n */\nexport function resampleNearestInterleaved(\n  valueArray, inWidth, inHeight, outWidth, outHeight, samples) {\n  const relX = inWidth / outWidth;\n  const relY = inHeight / outHeight;\n\n  const newArray = copyNewSize(valueArray, outWidth, outHeight, samples);\n  for (let y = 0; y < outHeight; ++y) {\n    const cy = Math.min(Math.round(relY * y), inHeight - 1);\n    for (let x = 0; x < outWidth; ++x) {\n      const cx = Math.min(Math.round(relX * x), inWidth - 1);\n      for (let i = 0; i < samples; ++i) {\n        const value = valueArray[(cy * inWidth * samples) + (cx * samples) + i];\n        newArray[(y * outWidth * samples) + (x * samples) + i] = value;\n      }\n    }\n  }\n  return newArray;\n}\n\n/**\n * Resample the pixel interleaved input array using bilinear interpolation.\n * @param {TypedArray} valueArrays The input arrays to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @param {number} samples The number of samples per pixel for pixel\n *                         interleaved data\n * @returns {TypedArray} The resampled raster\n */\nexport function resampleBilinearInterleaved(\n  valueArray, inWidth, inHeight, outWidth, outHeight, samples) {\n  const relX = inWidth / outWidth;\n  const relY = inHeight / outHeight;\n  const newArray = copyNewSize(valueArray, outWidth, outHeight, samples);\n  for (let y = 0; y < outHeight; ++y) {\n    const rawY = relY * y;\n\n    const yl = Math.floor(rawY);\n    const yh = Math.min(Math.ceil(rawY), (inHeight - 1));\n\n    for (let x = 0; x < outWidth; ++x) {\n      const rawX = relX * x;\n      const tx = rawX % 1;\n\n      const xl = Math.floor(rawX);\n      const xh = Math.min(Math.ceil(rawX), (inWidth - 1));\n\n      for (let i = 0; i < samples; ++i) {\n        const ll = valueArray[(yl * inWidth * samples) + (xl * samples) + i];\n        const hl = valueArray[(yl * inWidth * samples) + (xh * samples) + i];\n        const lh = valueArray[(yh * inWidth * samples) + (xl * samples) + i];\n        const hh = valueArray[(yh * inWidth * samples) + (xh * samples) + i];\n\n        const value = lerp(\n          lerp(ll, hl, tx),\n          lerp(lh, hh, tx),\n          rawY % 1,\n        );\n        newArray[(y * outWidth * samples) + (x * samples) + i] = value;\n      }\n    }\n  }\n  return newArray;\n}\n\n/**\n * Resample the pixel interleaved input array using the selected resampling method.\n * @param {TypedArray} valueArray The input array to resample\n * @param {number} inWidth The width of the input rasters\n * @param {number} inHeight The height of the input rasters\n * @param {number} outWidth The desired width of the output rasters\n * @param {number} outHeight The desired height of the output rasters\n * @param {number} samples The number of samples per pixel for pixel\n *                                 interleaved data\n * @param {string} [method = 'nearest'] The desired resampling method\n * @returns {TypedArray} The resampled rasters\n */\nexport function resampleInterleaved(valueArray, inWidth, inHeight, outWidth, outHeight, samples, method = 'nearest') {\n  switch (method.toLowerCase()) {\n    case 'nearest':\n      return resampleNearestInterleaved(\n        valueArray, inWidth, inHeight, outWidth, outHeight, samples,\n      );\n    case 'bilinear':\n    case 'linear':\n      return resampleBilinearInterleaved(\n        valueArray, inWidth, inHeight, outWidth, outHeight, samples,\n      );\n    default:\n      throw new Error(`Unsupported resampling method: '${method}'`);\n  }\n}\n", "import { getFloat16 } from '@petamoriken/float16';\n\nexport default class DataView64 {\n  constructor(arrayBuffer) {\n    this._dataView = new DataView(arrayBuffer);\n  }\n\n  get buffer() {\n    return this._dataView.buffer;\n  }\n\n  getUint64(offset, littleEndian) {\n    const left = this.getUint32(offset, littleEndian);\n    const right = this.getUint32(offset + 4, littleEndian);\n    let combined;\n    if (littleEndian) {\n      combined = left + ((2 ** 32) * right);\n      if (!Number.isSafeInteger(combined)) {\n        throw new Error(\n          `${combined} exceeds MAX_SAFE_INTEGER. `\n          + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues',\n        );\n      }\n      return combined;\n    }\n    combined = ((2 ** 32) * left) + right;\n    if (!Number.isSafeInteger(combined)) {\n      throw new Error(\n        `${combined} exceeds MAX_SAFE_INTEGER. `\n        + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues',\n      );\n    }\n\n    return combined;\n  }\n\n  // adapted from https://stackoverflow.com/a/55338384/8060591\n  getInt64(offset, littleEndian) {\n    let value = 0;\n    const isNegative = (this._dataView.getUint8(offset + (littleEndian ? 7 : 0)) & 0x80) > 0;\n    let carrying = true;\n    for (let i = 0; i < 8; i++) {\n      let byte = this._dataView.getUint8(offset + (littleEndian ? i : 7 - i));\n      if (isNegative) {\n        if (carrying) {\n          if (byte !== 0x00) {\n            byte = ~(byte - 1) & 0xff;\n            carrying = false;\n          }\n        } else {\n          byte = ~byte & 0xff;\n        }\n      }\n      value += byte * (256 ** i);\n    }\n    if (isNegative) {\n      value = -value;\n    }\n    return value;\n  }\n\n  getUint8(offset, littleEndian) {\n    return this._dataView.getUint8(offset, littleEndian);\n  }\n\n  getInt8(offset, littleEndian) {\n    return this._dataView.getInt8(offset, littleEndian);\n  }\n\n  getUint16(offset, littleEndian) {\n    return this._dataView.getUint16(offset, littleEndian);\n  }\n\n  getInt16(offset, littleEndian) {\n    return this._dataView.getInt16(offset, littleEndian);\n  }\n\n  getUint32(offset, littleEndian) {\n    return this._dataView.getUint32(offset, littleEndian);\n  }\n\n  getInt32(offset, littleEndian) {\n    return this._dataView.getInt32(offset, littleEndian);\n  }\n\n  getFloat16(offset, littleEndian) {\n    return getFloat16(this._dataView, offset, littleEndian);\n  }\n\n  getFloat32(offset, littleEndian) {\n    return this._dataView.getFloat32(offset, littleEndian);\n  }\n\n  getFloat64(offset, littleEndian) {\n    return this._dataView.getFloat64(offset, littleEndian);\n  }\n}\n", "export default class DataSlice {\n  constructor(arrayBuffer, sliceOffset, littleEndian, bigTiff) {\n    this._dataView = new DataView(arrayBuffer);\n    this._sliceOffset = sliceOffset;\n    this._littleEndian = littleEndian;\n    this._bigTiff = bigTiff;\n  }\n\n  get sliceOffset() {\n    return this._sliceOffset;\n  }\n\n  get sliceTop() {\n    return this._sliceOffset + this.buffer.byteLength;\n  }\n\n  get littleEndian() {\n    return this._littleEndian;\n  }\n\n  get bigTiff() {\n    return this._bigTiff;\n  }\n\n  get buffer() {\n    return this._dataView.buffer;\n  }\n\n  covers(offset, length) {\n    return this.sliceOffset <= offset && this.sliceTop >= offset + length;\n  }\n\n  readUint8(offset) {\n    return this._dataView.getUint8(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readInt8(offset) {\n    return this._dataView.getInt8(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readUint16(offset) {\n    return this._dataView.getUint16(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readInt16(offset) {\n    return this._dataView.getInt16(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readUint32(offset) {\n    return this._dataView.getUint32(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readInt32(offset) {\n    return this._dataView.getInt32(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readFloat32(offset) {\n    return this._dataView.getFloat32(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readFloat64(offset) {\n    return this._dataView.getFloat64(\n      offset - this._sliceOffset, this._littleEndian,\n    );\n  }\n\n  readUint64(offset) {\n    const left = this.readUint32(offset);\n    const right = this.readUint32(offset + 4);\n    let combined;\n    if (this._littleEndian) {\n      combined = left + ((2 ** 32) * right);\n      if (!Number.isSafeInteger(combined)) {\n        throw new Error(\n          `${combined} exceeds MAX_SAFE_INTEGER. `\n          + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues',\n        );\n      }\n      return combined;\n    }\n    combined = ((2 ** 32) * left) + right;\n    if (!Number.isSafeInteger(combined)) {\n      throw new Error(\n        `${combined} exceeds MAX_SAFE_INTEGER. `\n        + 'Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues',\n      );\n    }\n\n    return combined;\n  }\n\n  // adapted from https://stackoverflow.com/a/55338384/8060591\n  readInt64(offset) {\n    let value = 0;\n    const isNegative = (this._dataView.getUint8(offset + (this._littleEndian ? 7 : 0)) & 0x80)\n      > 0;\n    let carrying = true;\n    for (let i = 0; i < 8; i++) {\n      let byte = this._dataView.getUint8(\n        offset + (this._littleEndian ? i : 7 - i),\n      );\n      if (isNegative) {\n        if (carrying) {\n          if (byte !== 0x00) {\n            byte = ~(byte - 1) & 0xff;\n            carrying = false;\n          }\n        } else {\n          byte = ~byte & 0xff;\n        }\n      }\n      value += byte * (256 ** i);\n    }\n    if (isNegative) {\n      value = -value;\n    }\n    return value;\n  }\n\n  readOffset(offset) {\n    if (this._bigTiff) {\n      return this.readUint64(offset);\n    }\n    return this.readUint32(offset);\n  }\n}\n", "export function extendSerializer(extend, implementation) {\n    const fallbackDeserializer = extend.deserialize.bind(extend);\n    const fallbackSerializer = extend.serialize.bind(extend);\n    return {\n        deserialize(message) {\n            return implementation.deserialize(message, fallbackDeserializer);\n        },\n        serialize(input) {\n            return implementation.serialize(input, fallbackSerializer);\n        }\n    };\n}\nconst DefaultErrorSerializer = {\n    deserialize(message) {\n        return Object.assign(Error(message.message), {\n            name: message.name,\n            stack: message.stack\n        });\n    },\n    serialize(error) {\n        return {\n            __error_marker: \"$$error\",\n            message: error.message,\n            name: error.name,\n            stack: error.stack\n        };\n    }\n};\nconst isSerializedError = (thing) => thing && typeof thing === \"object\" && \"__error_marker\" in thing && thing.__error_marker === \"$$error\";\nexport const DefaultSerializer = {\n    deserialize(message) {\n        if (isSerializedError(message)) {\n            return DefaultErrorSerializer.deserialize(message);\n        }\n        else {\n            return message;\n        }\n    },\n    serialize(input) {\n        if (input instanceof Error) {\n            return DefaultErrorSerializer.serialize(input);\n        }\n        else {\n            return input;\n        }\n    }\n};\n", "import { extendSerializer, DefaultSerializer } from \"./serializers\";\nlet registeredSerializer = DefaultSerializer;\nexport function registerSerializer(serializer) {\n    registeredSerializer = extendSerializer(registeredSerializer, serializer);\n}\nexport function deserialize(message) {\n    return registeredSerializer.deserialize(message);\n}\nexport function serialize(input) {\n    return registeredSerializer.serialize(input);\n}\n", "// Source: <https://github.com/parcel-bundler/parcel/blob/master/packages/core/parcel-bundler/src/builtins/bundle-url.js>\nlet bundleURL;\nfunction getBundleURLCached() {\n    if (!bundleURL) {\n        bundleURL = getBundleURL();\n    }\n    return bundleURL;\n}\nfunction getBundleURL() {\n    // Attempt to find the URL of the current script and use that as the base URL\n    try {\n        throw new Error;\n    }\n    catch (err) {\n        const matches = (\"\" + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n        if (matches) {\n            return getBaseURL(matches[0]);\n        }\n    }\n    return \"/\";\n}\nfunction getBaseURL(url) {\n    return (\"\" + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\nexport { getBaseURL, getBundleURLCached as getBundleURL };\n", "// tslint:disable max-classes-per-file\nimport { getBundleURL } from \"./get-bundle-url.browser\";\nexport const defaultPoolSize = typeof navigator !== \"undefined\" && navigator.hardwareConcurrency\n    ? navigator.hardwareConcurrency\n    : 4;\nconst isAbsoluteURL = (value) => /^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(value);\nfunction createSourceBlobURL(code) {\n    const blob = new Blob([code], { type: \"application/javascript\" });\n    return URL.createObjectURL(blob);\n}\nfunction selectWorkerImplementation() {\n    if (typeof Worker === \"undefined\") {\n        // Might happen on Safari, for instance\n        // The idea is to only fail if the constructor is actually used\n        return class NoWebWorker {\n            constructor() {\n                throw Error(\"No web worker implementation available. You might have tried to spawn a worker within a worker in a browser that doesn't support workers in workers.\");\n            }\n        };\n    }\n    class WebWorker extends Worker {\n        constructor(url, options) {\n            var _a, _b;\n            if (typeof url === \"string\" && options && options._baseURL) {\n                url = new URL(url, options._baseURL);\n            }\n            else if (typeof url === \"string\" && !isAbsoluteURL(url) && getBundleURL().match(/^file:\\/\\//i)) {\n                url = new URL(url, getBundleURL().replace(/\\/[^\\/]+$/, \"/\"));\n                if ((_a = options === null || options === void 0 ? void 0 : options.CORSWorkaround) !== null && _a !== void 0 ? _a : true) {\n                    url = createSourceBlobURL(`importScripts(${JSON.stringify(url)});`);\n                }\n            }\n            if (typeof url === \"string\" && isAbsoluteURL(url)) {\n                // Create source code blob loading JS file via `importScripts()`\n                // to circumvent worker CORS restrictions\n                if ((_b = options === null || options === void 0 ? void 0 : options.CORSWorkaround) !== null && _b !== void 0 ? _b : true) {\n                    url = createSourceBlobURL(`importScripts(${JSON.stringify(url)});`);\n                }\n            }\n            super(url, options);\n        }\n    }\n    class BlobWorker extends WebWorker {\n        constructor(blob, options) {\n            const url = window.URL.createObjectURL(blob);\n            super(url, options);\n        }\n        static fromText(source, options) {\n            const blob = new window.Blob([source], { type: \"text/javascript\" });\n            return new BlobWorker(blob, options);\n        }\n    }\n    return {\n        blob: BlobWorker,\n        default: WebWorker\n    };\n}\nlet implementation;\nexport function getWorkerImplementation() {\n    if (!implementation) {\n        implementation = selectWorkerImplementation();\n    }\n    return implementation;\n}\nexport function isWorkerRuntime() {\n    const isWindowContext = typeof self !== \"undefined\" && typeof Window !== \"undefined\" && self instanceof Window;\n    return typeof self !== \"undefined\" && self.postMessage && !isWindowContext ? true : false;\n}\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport DebugLogger from \"debug\";\nimport { multicast, Observable, Subject } from \"observable-fns\";\nimport { allSettled } from \"../ponyfills\";\nimport { defaultPoolSize } from \"./implementation\";\nimport { PoolEventType } from \"./pool-types\";\nimport { Thread } from \"./thread\";\nexport { PoolEventType, Thread };\nlet nextPoolID = 1;\nfunction createArray(size) {\n    const array = [];\n    for (let index = 0; index < size; index++) {\n        array.push(index);\n    }\n    return array;\n}\nfunction delay(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nfunction flatMap(array, mapper) {\n    return array.reduce((flattened, element) => [...flattened, ...mapper(element)], []);\n}\nfunction slugify(text) {\n    return text.replace(/\\W/g, \" \").trim().replace(/\\s+/g, \"-\");\n}\nfunction spawnWorkers(spawnWorker, count) {\n    return createArray(count).map(() => ({\n        init: spawnWorker(),\n        runningTasks: []\n    }));\n}\nclass WorkerPool {\n    constructor(spawnWorker, optionsOrSize) {\n        this.eventSubject = new Subject();\n        this.initErrors = [];\n        this.isClosing = false;\n        this.nextTaskID = 1;\n        this.taskQueue = [];\n        const options = typeof optionsOrSize === \"number\"\n            ? { size: optionsOrSize }\n            : optionsOrSize || {};\n        const { size = defaultPoolSize } = options;\n        this.debug = DebugLogger(`threads:pool:${slugify(options.name || String(nextPoolID++))}`);\n        this.options = options;\n        this.workers = spawnWorkers(spawnWorker, size);\n        this.eventObservable = multicast(Observable.from(this.eventSubject));\n        Promise.all(this.workers.map(worker => worker.init)).then(() => this.eventSubject.next({\n            type: PoolEventType.initialized,\n            size: this.workers.length\n        }), error => {\n            this.debug(\"Error while initializing pool worker:\", error);\n            this.eventSubject.error(error);\n            this.initErrors.push(error);\n        });\n    }\n    findIdlingWorker() {\n        const { concurrency = 1 } = this.options;\n        return this.workers.find(worker => worker.runningTasks.length < concurrency);\n    }\n    runPoolTask(worker, task) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const workerID = this.workers.indexOf(worker) + 1;\n            this.debug(`Running task #${task.id} on worker #${workerID}...`);\n            this.eventSubject.next({\n                type: PoolEventType.taskStart,\n                taskID: task.id,\n                workerID\n            });\n            try {\n                const returnValue = yield task.run(yield worker.init);\n                this.debug(`Task #${task.id} completed successfully`);\n                this.eventSubject.next({\n                    type: PoolEventType.taskCompleted,\n                    returnValue,\n                    taskID: task.id,\n                    workerID\n                });\n            }\n            catch (error) {\n                this.debug(`Task #${task.id} failed`);\n                this.eventSubject.next({\n                    type: PoolEventType.taskFailed,\n                    taskID: task.id,\n                    error,\n                    workerID\n                });\n            }\n        });\n    }\n    run(worker, task) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const runPromise = (() => __awaiter(this, void 0, void 0, function* () {\n                const removeTaskFromWorkersRunningTasks = () => {\n                    worker.runningTasks = worker.runningTasks.filter(someRunPromise => someRunPromise !== runPromise);\n                };\n                // Defer task execution by one tick to give handlers time to subscribe\n                yield delay(0);\n                try {\n                    yield this.runPoolTask(worker, task);\n                }\n                finally {\n                    removeTaskFromWorkersRunningTasks();\n                    if (!this.isClosing) {\n                        this.scheduleWork();\n                    }\n                }\n            }))();\n            worker.runningTasks.push(runPromise);\n        });\n    }\n    scheduleWork() {\n        this.debug(`Attempt de-queueing a task in order to run it...`);\n        const availableWorker = this.findIdlingWorker();\n        if (!availableWorker)\n            return;\n        const nextTask = this.taskQueue.shift();\n        if (!nextTask) {\n            this.debug(`Task queue is empty`);\n            this.eventSubject.next({ type: PoolEventType.taskQueueDrained });\n            return;\n        }\n        this.run(availableWorker, nextTask);\n    }\n    taskCompletion(taskID) {\n        return new Promise((resolve, reject) => {\n            const eventSubscription = this.events().subscribe(event => {\n                if (event.type === PoolEventType.taskCompleted && event.taskID === taskID) {\n                    eventSubscription.unsubscribe();\n                    resolve(event.returnValue);\n                }\n                else if (event.type === PoolEventType.taskFailed && event.taskID === taskID) {\n                    eventSubscription.unsubscribe();\n                    reject(event.error);\n                }\n                else if (event.type === PoolEventType.terminated) {\n                    eventSubscription.unsubscribe();\n                    reject(Error(\"Pool has been terminated before task was run.\"));\n                }\n            });\n        });\n    }\n    settled(allowResolvingImmediately = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const getCurrentlyRunningTasks = () => flatMap(this.workers, worker => worker.runningTasks);\n            const taskFailures = [];\n            const failureSubscription = this.eventObservable.subscribe(event => {\n                if (event.type === PoolEventType.taskFailed) {\n                    taskFailures.push(event.error);\n                }\n            });\n            if (this.initErrors.length > 0) {\n                return Promise.reject(this.initErrors[0]);\n            }\n            if (allowResolvingImmediately && this.taskQueue.length === 0) {\n                yield allSettled(getCurrentlyRunningTasks());\n                return taskFailures;\n            }\n            yield new Promise((resolve, reject) => {\n                const subscription = this.eventObservable.subscribe({\n                    next(event) {\n                        if (event.type === PoolEventType.taskQueueDrained) {\n                            subscription.unsubscribe();\n                            resolve(void 0);\n                        }\n                    },\n                    error: reject // make a pool-wide error reject the completed() result promise\n                });\n            });\n            yield allSettled(getCurrentlyRunningTasks());\n            failureSubscription.unsubscribe();\n            return taskFailures;\n        });\n    }\n    completed(allowResolvingImmediately = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const settlementPromise = this.settled(allowResolvingImmediately);\n            const earlyExitPromise = new Promise((resolve, reject) => {\n                const subscription = this.eventObservable.subscribe({\n                    next(event) {\n                        if (event.type === PoolEventType.taskQueueDrained) {\n                            subscription.unsubscribe();\n                            resolve(settlementPromise);\n                        }\n                        else if (event.type === PoolEventType.taskFailed) {\n                            subscription.unsubscribe();\n                            reject(event.error);\n                        }\n                    },\n                    error: reject // make a pool-wide error reject the completed() result promise\n                });\n            });\n            const errors = yield Promise.race([\n                settlementPromise,\n                earlyExitPromise\n            ]);\n            if (errors.length > 0) {\n                throw errors[0];\n            }\n        });\n    }\n    events() {\n        return this.eventObservable;\n    }\n    queue(taskFunction) {\n        const { maxQueuedJobs = Infinity } = this.options;\n        if (this.isClosing) {\n            throw Error(`Cannot schedule pool tasks after terminate() has been called.`);\n        }\n        if (this.initErrors.length > 0) {\n            throw this.initErrors[0];\n        }\n        const taskID = this.nextTaskID++;\n        const taskCompletion = this.taskCompletion(taskID);\n        taskCompletion.catch((error) => {\n            // Prevent unhandled rejections here as we assume the user will use\n            // `pool.completed()`, `pool.settled()` or `task.catch()` to handle errors\n            this.debug(`Task #${taskID} errored:`, error);\n        });\n        const task = {\n            id: taskID,\n            run: taskFunction,\n            cancel: () => {\n                if (this.taskQueue.indexOf(task) === -1)\n                    return;\n                this.taskQueue = this.taskQueue.filter(someTask => someTask !== task);\n                this.eventSubject.next({\n                    type: PoolEventType.taskCanceled,\n                    taskID: task.id\n                });\n            },\n            then: taskCompletion.then.bind(taskCompletion)\n        };\n        if (this.taskQueue.length >= maxQueuedJobs) {\n            throw Error(\"Maximum number of pool tasks queued. Refusing to queue another one.\\n\" +\n                \"This usually happens for one of two reasons: We are either at peak \" +\n                \"workload right now or some tasks just won't finish, thus blocking the pool.\");\n        }\n        this.debug(`Queueing task #${task.id}...`);\n        this.taskQueue.push(task);\n        this.eventSubject.next({\n            type: PoolEventType.taskQueued,\n            taskID: task.id\n        });\n        this.scheduleWork();\n        return task;\n    }\n    terminate(force) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.isClosing = true;\n            if (!force) {\n                yield this.completed(true);\n            }\n            this.eventSubject.next({\n                type: PoolEventType.terminated,\n                remainingQueue: [...this.taskQueue]\n            });\n            this.eventSubject.complete();\n            yield Promise.all(this.workers.map((worker) => __awaiter(this, void 0, void 0, function* () { return Thread.terminate(yield worker.init); })));\n        });\n    }\n}\nWorkerPool.EventType = PoolEventType;\n/**\n * Thread pool constructor. Creates a new pool and spawns its worker threads.\n */\nfunction PoolConstructor(spawnWorker, optionsOrSize) {\n    // The function exists only so we don't need to use `new` to create a pool (we still can, though).\n    // If the Pool is a class or not is an implementation detail that should not concern the user.\n    return new WorkerPool(spawnWorker, optionsOrSize);\n}\nPoolConstructor.EventType = PoolEventType;\n/**\n * Thread pool constructor. Creates a new pool and spawns its worker threads.\n */\nexport const Pool = PoolConstructor;\n", "export const hasSymbols = () => typeof Symbol === \"function\";\nexport const hasSymbol = (name) => hasSymbols() && Boolean(Symbol[name]);\nexport const getSymbol = (name) => hasSymbol(name) ? Symbol[name] : \"@@\" + name;\nexport function registerObservableSymbol() {\n    if (hasSymbols() && !hasSymbol(\"observable\")) {\n        Symbol.observable = Symbol(\"observable\");\n    }\n}\nif (!hasSymbol(\"asyncIterator\")) {\n    Symbol.asyncIterator = Symbol.asyncIterator || Symbol.for(\"Symbol.asyncIterator\");\n}\n", "/**\n * Based on <https://raw.githubusercontent.com/zenparsing/zen-observable/master/src/Observable.js>\n * At commit: f63849a8c60af5d514efc8e9d6138d8273c49ad6\n */\nimport \"./symbols\";\nimport { getSymbol, hasSymbol, hasSymbols } from \"./_symbols\";\nconst SymbolIterator = getSymbol(\"iterator\");\nconst SymbolObservable = getSymbol(\"observable\");\nconst SymbolSpecies = getSymbol(\"species\");\n// === Abstract Operations ===\nfunction getMethod(obj, key) {\n    const value = obj[key];\n    if (value == null) {\n        return undefined;\n    }\n    if (typeof value !== \"function\") {\n        throw new TypeError(value + \" is not a function\");\n    }\n    return value;\n}\nfunction getSpecies(obj) {\n    let ctor = obj.constructor;\n    if (ctor !== undefined) {\n        ctor = ctor[SymbolSpecies];\n        if (ctor === null) {\n            ctor = undefined;\n        }\n    }\n    return ctor !== undefined ? ctor : Observable;\n}\nfunction isObservable(x) {\n    return x instanceof Observable; // SPEC: Brand check\n}\nfunction hostReportError(error) {\n    if (hostReportError.log) {\n        hostReportError.log(error);\n    }\n    else {\n        setTimeout(() => { throw error; }, 0);\n    }\n}\nfunction enqueue(fn) {\n    Promise.resolve().then(() => {\n        try {\n            fn();\n        }\n        catch (e) {\n            hostReportError(e);\n        }\n    });\n}\nfunction cleanupSubscription(subscription) {\n    const cleanup = subscription._cleanup;\n    if (cleanup === undefined) {\n        return;\n    }\n    subscription._cleanup = undefined;\n    if (!cleanup) {\n        return;\n    }\n    try {\n        if (typeof cleanup === \"function\") {\n            cleanup();\n        }\n        else {\n            const unsubscribe = getMethod(cleanup, \"unsubscribe\");\n            if (unsubscribe) {\n                unsubscribe.call(cleanup);\n            }\n        }\n    }\n    catch (e) {\n        hostReportError(e);\n    }\n}\nfunction closeSubscription(subscription) {\n    subscription._observer = undefined;\n    subscription._queue = undefined;\n    subscription._state = \"closed\";\n}\nfunction flushSubscription(subscription) {\n    const queue = subscription._queue;\n    if (!queue) {\n        return;\n    }\n    subscription._queue = undefined;\n    subscription._state = \"ready\";\n    for (const item of queue) {\n        notifySubscription(subscription, item.type, item.value);\n        if (subscription._state === \"closed\") {\n            break;\n        }\n    }\n}\nfunction notifySubscription(subscription, type, value) {\n    subscription._state = \"running\";\n    const observer = subscription._observer;\n    try {\n        const m = observer ? getMethod(observer, type) : undefined;\n        switch (type) {\n            case \"next\":\n                if (m)\n                    m.call(observer, value);\n                break;\n            case \"error\":\n                closeSubscription(subscription);\n                if (m)\n                    m.call(observer, value);\n                else\n                    throw value;\n                break;\n            case \"complete\":\n                closeSubscription(subscription);\n                if (m)\n                    m.call(observer);\n                break;\n        }\n    }\n    catch (e) {\n        hostReportError(e);\n    }\n    if (subscription._state === \"closed\") {\n        cleanupSubscription(subscription);\n    }\n    else if (subscription._state === \"running\") {\n        subscription._state = \"ready\";\n    }\n}\nfunction onNotify(subscription, type, value) {\n    if (subscription._state === \"closed\") {\n        return;\n    }\n    if (subscription._state === \"buffering\") {\n        subscription._queue = subscription._queue || [];\n        subscription._queue.push({ type, value });\n        return;\n    }\n    if (subscription._state !== \"ready\") {\n        subscription._state = \"buffering\";\n        subscription._queue = [{ type, value }];\n        enqueue(() => flushSubscription(subscription));\n        return;\n    }\n    notifySubscription(subscription, type, value);\n}\nexport class Subscription {\n    constructor(observer, subscriber) {\n        // ASSERT: observer is an object\n        // ASSERT: subscriber is callable\n        this._cleanup = undefined;\n        this._observer = observer;\n        this._queue = undefined;\n        this._state = \"initializing\";\n        const subscriptionObserver = new SubscriptionObserver(this);\n        try {\n            this._cleanup = subscriber.call(undefined, subscriptionObserver);\n        }\n        catch (e) {\n            subscriptionObserver.error(e);\n        }\n        if (this._state === \"initializing\") {\n            this._state = \"ready\";\n        }\n    }\n    get closed() {\n        return this._state === \"closed\";\n    }\n    unsubscribe() {\n        if (this._state !== \"closed\") {\n            closeSubscription(this);\n            cleanupSubscription(this);\n        }\n    }\n}\nexport class SubscriptionObserver {\n    constructor(subscription) { this._subscription = subscription; }\n    get closed() { return this._subscription._state === \"closed\"; }\n    next(value) { onNotify(this._subscription, \"next\", value); }\n    error(value) { onNotify(this._subscription, \"error\", value); }\n    complete() { onNotify(this._subscription, \"complete\"); }\n}\n/**\n * The basic Observable class. This primitive is used to wrap asynchronous\n * data streams in a common standardized data type that is interoperable\n * between libraries and can be composed to represent more complex processes.\n */\nexport class Observable {\n    constructor(subscriber) {\n        if (!(this instanceof Observable)) {\n            throw new TypeError(\"Observable cannot be called as a function\");\n        }\n        if (typeof subscriber !== \"function\") {\n            throw new TypeError(\"Observable initializer must be a function\");\n        }\n        this._subscriber = subscriber;\n    }\n    subscribe(nextOrObserver, onError, onComplete) {\n        if (typeof nextOrObserver !== \"object\" || nextOrObserver === null) {\n            nextOrObserver = {\n                next: nextOrObserver,\n                error: onError,\n                complete: onComplete\n            };\n        }\n        return new Subscription(nextOrObserver, this._subscriber);\n    }\n    pipe(first, ...mappers) {\n        // tslint:disable-next-line no-this-assignment\n        let intermediate = this;\n        for (const mapper of [first, ...mappers]) {\n            intermediate = mapper(intermediate);\n        }\n        return intermediate;\n    }\n    tap(nextOrObserver, onError, onComplete) {\n        const tapObserver = typeof nextOrObserver !== \"object\" || nextOrObserver === null\n            ? {\n                next: nextOrObserver,\n                error: onError,\n                complete: onComplete\n            }\n            : nextOrObserver;\n        return new Observable(observer => {\n            return this.subscribe({\n                next(value) {\n                    tapObserver.next && tapObserver.next(value);\n                    observer.next(value);\n                },\n                error(error) {\n                    tapObserver.error && tapObserver.error(error);\n                    observer.error(error);\n                },\n                complete() {\n                    tapObserver.complete && tapObserver.complete();\n                    observer.complete();\n                },\n                start(subscription) {\n                    tapObserver.start && tapObserver.start(subscription);\n                }\n            });\n        });\n    }\n    forEach(fn) {\n        return new Promise((resolve, reject) => {\n            if (typeof fn !== \"function\") {\n                reject(new TypeError(fn + \" is not a function\"));\n                return;\n            }\n            function done() {\n                subscription.unsubscribe();\n                resolve(undefined);\n            }\n            const subscription = this.subscribe({\n                next(value) {\n                    try {\n                        fn(value, done);\n                    }\n                    catch (e) {\n                        reject(e);\n                        subscription.unsubscribe();\n                    }\n                },\n                error(error) {\n                    reject(error);\n                },\n                complete() {\n                    resolve(undefined);\n                }\n            });\n        });\n    }\n    map(fn) {\n        if (typeof fn !== \"function\") {\n            throw new TypeError(fn + \" is not a function\");\n        }\n        const C = getSpecies(this);\n        return new C(observer => this.subscribe({\n            next(value) {\n                let propagatedValue = value;\n                try {\n                    propagatedValue = fn(value);\n                }\n                catch (e) {\n                    return observer.error(e);\n                }\n                observer.next(propagatedValue);\n            },\n            error(e) { observer.error(e); },\n            complete() { observer.complete(); },\n        }));\n    }\n    filter(fn) {\n        if (typeof fn !== \"function\") {\n            throw new TypeError(fn + \" is not a function\");\n        }\n        const C = getSpecies(this);\n        return new C(observer => this.subscribe({\n            next(value) {\n                try {\n                    if (!fn(value))\n                        return;\n                }\n                catch (e) {\n                    return observer.error(e);\n                }\n                observer.next(value);\n            },\n            error(e) { observer.error(e); },\n            complete() { observer.complete(); },\n        }));\n    }\n    reduce(fn, seed) {\n        if (typeof fn !== \"function\") {\n            throw new TypeError(fn + \" is not a function\");\n        }\n        const C = getSpecies(this);\n        const hasSeed = arguments.length > 1;\n        let hasValue = false;\n        let acc = seed;\n        return new C(observer => this.subscribe({\n            next(value) {\n                const first = !hasValue;\n                hasValue = true;\n                if (!first || hasSeed) {\n                    try {\n                        acc = fn(acc, value);\n                    }\n                    catch (e) {\n                        return observer.error(e);\n                    }\n                }\n                else {\n                    acc = value;\n                }\n            },\n            error(e) { observer.error(e); },\n            complete() {\n                if (!hasValue && !hasSeed) {\n                    return observer.error(new TypeError(\"Cannot reduce an empty sequence\"));\n                }\n                observer.next(acc);\n                observer.complete();\n            },\n        }));\n    }\n    concat(...sources) {\n        const C = getSpecies(this);\n        return new C(observer => {\n            let subscription;\n            let index = 0;\n            function startNext(next) {\n                subscription = next.subscribe({\n                    next(v) { observer.next(v); },\n                    error(e) { observer.error(e); },\n                    complete() {\n                        if (index === sources.length) {\n                            subscription = undefined;\n                            observer.complete();\n                        }\n                        else {\n                            startNext(C.from(sources[index++]));\n                        }\n                    },\n                });\n            }\n            startNext(this);\n            return () => {\n                if (subscription) {\n                    subscription.unsubscribe();\n                    subscription = undefined;\n                }\n            };\n        });\n    }\n    flatMap(fn) {\n        if (typeof fn !== \"function\") {\n            throw new TypeError(fn + \" is not a function\");\n        }\n        const C = getSpecies(this);\n        return new C(observer => {\n            const subscriptions = [];\n            const outer = this.subscribe({\n                next(value) {\n                    let normalizedValue;\n                    if (fn) {\n                        try {\n                            normalizedValue = fn(value);\n                        }\n                        catch (e) {\n                            return observer.error(e);\n                        }\n                    }\n                    else {\n                        normalizedValue = value;\n                    }\n                    const inner = C.from(normalizedValue).subscribe({\n                        next(innerValue) { observer.next(innerValue); },\n                        error(e) { observer.error(e); },\n                        complete() {\n                            const i = subscriptions.indexOf(inner);\n                            if (i >= 0)\n                                subscriptions.splice(i, 1);\n                            completeIfDone();\n                        },\n                    });\n                    subscriptions.push(inner);\n                },\n                error(e) { observer.error(e); },\n                complete() { completeIfDone(); },\n            });\n            function completeIfDone() {\n                if (outer.closed && subscriptions.length === 0) {\n                    observer.complete();\n                }\n            }\n            return () => {\n                subscriptions.forEach(s => s.unsubscribe());\n                outer.unsubscribe();\n            };\n        });\n    }\n    [(Symbol.observable, SymbolObservable)]() { return this; }\n    static from(x) {\n        const C = (typeof this === \"function\" ? this : Observable);\n        if (x == null) {\n            throw new TypeError(x + \" is not an object\");\n        }\n        const observableMethod = getMethod(x, SymbolObservable);\n        if (observableMethod) {\n            const observable = observableMethod.call(x);\n            if (Object(observable) !== observable) {\n                throw new TypeError(observable + \" is not an object\");\n            }\n            if (isObservable(observable) && observable.constructor === C) {\n                return observable;\n            }\n            return new C(observer => observable.subscribe(observer));\n        }\n        if (hasSymbol(\"iterator\")) {\n            const iteratorMethod = getMethod(x, SymbolIterator);\n            if (iteratorMethod) {\n                return new C(observer => {\n                    enqueue(() => {\n                        if (observer.closed)\n                            return;\n                        for (const item of iteratorMethod.call(x)) {\n                            observer.next(item);\n                            if (observer.closed)\n                                return;\n                        }\n                        observer.complete();\n                    });\n                });\n            }\n        }\n        if (Array.isArray(x)) {\n            return new C(observer => {\n                enqueue(() => {\n                    if (observer.closed)\n                        return;\n                    for (const item of x) {\n                        observer.next(item);\n                        if (observer.closed)\n                            return;\n                    }\n                    observer.complete();\n                });\n            });\n        }\n        throw new TypeError(x + \" is not observable\");\n    }\n    static of(...items) {\n        const C = (typeof this === \"function\" ? this : Observable);\n        return new C(observer => {\n            enqueue(() => {\n                if (observer.closed)\n                    return;\n                for (const item of items) {\n                    observer.next(item);\n                    if (observer.closed)\n                        return;\n                }\n                observer.complete();\n            });\n        });\n    }\n    static get [SymbolSpecies]() { return this; }\n}\nif (hasSymbols()) {\n    Object.defineProperty(Observable, Symbol(\"extensions\"), {\n        value: {\n            symbol: SymbolObservable,\n            hostReportError,\n        },\n        configurable: true,\n    });\n}\nexport default Observable;\n", "/**\n * Unsubscribe from a subscription returned by something that looks like an observable,\n * but is not necessarily our observable implementation.\n */\nfunction unsubscribe(subscription) {\n    if (typeof subscription === \"function\") {\n        subscription();\n    }\n    else if (subscription && typeof subscription.unsubscribe === \"function\") {\n        subscription.unsubscribe();\n    }\n}\nexport default unsubscribe;\n", "import Observable from \"./observable\";\n// TODO: This observer iteration approach looks inelegant and expensive\n// Idea: Come up with super class for Subscription that contains the\n//       notify*, ... methods and use it here\n/**\n * A subject is a \"hot\" observable (see `multicast`) that has its observer\n * methods (`.next(value)`, `.error(error)`, `.complete()`) exposed.\n *\n * Be careful, though! With great power comes great responsibility. Only use\n * the `Subject` when you really need to trigger updates \"from the outside\" and\n * try to keep the code that can access it to a minimum. Return\n * `Observable.from(mySubject)` to not allow other code to mutate.\n */\nclass MulticastSubject extends Observable {\n    constructor() {\n        super(observer => {\n            this._observers.add(observer);\n            return () => this._observers.delete(observer);\n        });\n        this._observers = new Set();\n    }\n    next(value) {\n        for (const observer of this._observers) {\n            observer.next(value);\n        }\n    }\n    error(error) {\n        for (const observer of this._observers) {\n            observer.error(error);\n        }\n    }\n    complete() {\n        for (const observer of this._observers) {\n            observer.complete();\n        }\n    }\n}\nexport default MulticastSubject;\n", "import Observable from \"./observable\";\nimport Subject from \"./subject\";\nimport unsubscribe from \"./unsubscribe\";\n// TODO: Subject already creates additional observables \"under the hood\",\n//       now we introduce even more. A true native MulticastObservable\n//       would be preferable.\n/**\n * Takes a \"cold\" observable and returns a wrapping \"hot\" observable that\n * proxies the input observable's values and errors.\n *\n * An observable is called \"cold\" when its initialization function is run\n * for each new subscriber. This is how observable-fns's `Observable`\n * implementation works.\n *\n * A hot observable is an observable where new subscribers subscribe to\n * the upcoming values of an already-initialiazed observable.\n *\n * The multicast observable will lazily subscribe to the source observable\n * once it has its first own subscriber and will unsubscribe from the\n * source observable when its last own subscriber unsubscribed.\n */\nfunction multicast(coldObservable) {\n    const subject = new Subject();\n    let sourceSubscription;\n    let subscriberCount = 0;\n    return new Observable(observer => {\n        // Init source subscription lazily\n        if (!sourceSubscription) {\n            sourceSubscription = coldObservable.subscribe(subject);\n        }\n        // Pipe all events from `subject` into this observable\n        const subscription = subject.subscribe(observer);\n        subscriberCount++;\n        return () => {\n            subscriberCount--;\n            subscription.unsubscribe();\n            // Close source subscription once last subscriber has unsubscribed\n            if (subscriberCount === 0) {\n                unsubscribe(sourceSubscription);\n                sourceSubscription = undefined;\n            }\n        };\n    });\n}\nexport default multicast;\n", "// Based on <https://github.com/es-shims/Promise.allSettled/blob/master/implementation.js>\nexport function allSettled(values) {\n    return Promise.all(values.map(item => {\n        const onFulfill = (value) => {\n            return { status: 'fulfilled', value };\n        };\n        const onReject = (reason) => {\n            return { status: 'rejected', reason };\n        };\n        const itemPromise = Promise.resolve(item);\n        try {\n            return itemPromise.then(onFulfill, onReject);\n        }\n        catch (error) {\n            return Promise.reject(error);\n        }\n    }));\n}\n", "/** Pool event type. Specifies the type of each `PoolEvent`. */\nexport var PoolEventType;\n(function (PoolEventType) {\n    PoolEventType[\"initialized\"] = \"initialized\";\n    PoolEventType[\"taskCanceled\"] = \"taskCanceled\";\n    PoolEventType[\"taskCompleted\"] = \"taskCompleted\";\n    PoolEventType[\"taskFailed\"] = \"taskFailed\";\n    PoolEventType[\"taskQueued\"] = \"taskQueued\";\n    PoolEventType[\"taskQueueDrained\"] = \"taskQueueDrained\";\n    PoolEventType[\"taskStart\"] = \"taskStart\";\n    PoolEventType[\"terminated\"] = \"terminated\";\n})(PoolEventType || (PoolEventType = {}));\n", "export const $errors = Symbol(\"thread.errors\");\nexport const $events = Symbol(\"thread.events\");\nexport const $terminate = Symbol(\"thread.terminate\");\nexport const $transferable = Symbol(\"thread.transferable\");\nexport const $worker = Symbol(\"thread.worker\");\n", "import { $errors, $events, $terminate } from \"../symbols\";\nfunction fail(message) {\n    throw Error(message);\n}\n/** Thread utility functions. Use them to manage or inspect a `spawn()`-ed thread. */\nexport const Thread = {\n    /** Return an observable that can be used to subscribe to all errors happening in the thread. */\n    errors(thread) {\n        return thread[$errors] || fail(\"Error observable not found. Make sure to pass a thread instance as returned by the spawn() promise.\");\n    },\n    /** Return an observable that can be used to subscribe to internal events happening in the thread. Useful for debugging. */\n    events(thread) {\n        return thread[$events] || fail(\"Events observable not found. Make sure to pass a thread instance as returned by the spawn() promise.\");\n    },\n    /** Terminate a thread. Remember to terminate every thread when you are done using it. */\n    terminate(thread) {\n        return thread[$terminate]();\n    }\n};\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport DebugLogger from \"debug\";\nimport { Observable } from \"observable-fns\";\nimport { deserialize } from \"../common\";\nimport { createPromiseWithResolver } from \"../promise\";\nimport { $errors, $events, $terminate, $worker } from \"../symbols\";\nimport { WorkerEventType } from \"../types/master\";\nimport { createProxyFunction, createProxyModule } from \"./invocation-proxy\";\nconst debugMessages = DebugLogger(\"threads:master:messages\");\nconst debugSpawn = DebugLogger(\"threads:master:spawn\");\nconst debugThreadUtils = DebugLogger(\"threads:master:thread-utils\");\nconst isInitMessage = (data) => data && data.type === \"init\";\nconst isUncaughtErrorMessage = (data) => data && data.type === \"uncaughtError\";\nconst initMessageTimeout = typeof process !== \"undefined\" && process.env.THREADS_WORKER_INIT_TIMEOUT\n    ? Number.parseInt(process.env.THREADS_WORKER_INIT_TIMEOUT, 10)\n    : 10000;\nfunction withTimeout(promise, timeoutInMs, errorMessage) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let timeoutHandle;\n        const timeout = new Promise((resolve, reject) => {\n            timeoutHandle = setTimeout(() => reject(Error(errorMessage)), timeoutInMs);\n        });\n        const result = yield Promise.race([\n            promise,\n            timeout\n        ]);\n        clearTimeout(timeoutHandle);\n        return result;\n    });\n}\nfunction receiveInitMessage(worker) {\n    return new Promise((resolve, reject) => {\n        const messageHandler = ((event) => {\n            debugMessages(\"Message from worker before finishing initialization:\", event.data);\n            if (isInitMessage(event.data)) {\n                worker.removeEventListener(\"message\", messageHandler);\n                resolve(event.data);\n            }\n            else if (isUncaughtErrorMessage(event.data)) {\n                worker.removeEventListener(\"message\", messageHandler);\n                reject(deserialize(event.data.error));\n            }\n        });\n        worker.addEventListener(\"message\", messageHandler);\n    });\n}\nfunction createEventObservable(worker, workerTermination) {\n    return new Observable(observer => {\n        const messageHandler = ((messageEvent) => {\n            const workerEvent = {\n                type: WorkerEventType.message,\n                data: messageEvent.data\n            };\n            observer.next(workerEvent);\n        });\n        const rejectionHandler = ((errorEvent) => {\n            debugThreadUtils(\"Unhandled promise rejection event in thread:\", errorEvent);\n            const workerEvent = {\n                type: WorkerEventType.internalError,\n                error: Error(errorEvent.reason)\n            };\n            observer.next(workerEvent);\n        });\n        worker.addEventListener(\"message\", messageHandler);\n        worker.addEventListener(\"unhandledrejection\", rejectionHandler);\n        workerTermination.then(() => {\n            const terminationEvent = {\n                type: WorkerEventType.termination\n            };\n            worker.removeEventListener(\"message\", messageHandler);\n            worker.removeEventListener(\"unhandledrejection\", rejectionHandler);\n            observer.next(terminationEvent);\n            observer.complete();\n        });\n    });\n}\nfunction createTerminator(worker) {\n    const [termination, resolver] = createPromiseWithResolver();\n    const terminate = () => __awaiter(this, void 0, void 0, function* () {\n        debugThreadUtils(\"Terminating worker\");\n        // Newer versions of worker_threads workers return a promise\n        yield worker.terminate();\n        resolver();\n    });\n    return { terminate, termination };\n}\nfunction setPrivateThreadProps(raw, worker, workerEvents, terminate) {\n    const workerErrors = workerEvents\n        .filter(event => event.type === WorkerEventType.internalError)\n        .map(errorEvent => errorEvent.error);\n    // tslint:disable-next-line prefer-object-spread\n    return Object.assign(raw, {\n        [$errors]: workerErrors,\n        [$events]: workerEvents,\n        [$terminate]: terminate,\n        [$worker]: worker\n    });\n}\n/**\n * Spawn a new thread. Takes a fresh worker instance, wraps it in a thin\n * abstraction layer to provide the transparent API and verifies that\n * the worker has initialized successfully.\n *\n * @param worker Instance of `Worker`. Either a web worker, `worker_threads` worker or `tiny-worker` worker.\n * @param [options]\n * @param [options.timeout] Init message timeout. Default: 10000 or set by environment variable.\n */\nexport function spawn(worker, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        debugSpawn(\"Initializing new thread\");\n        const timeout = options && options.timeout ? options.timeout : initMessageTimeout;\n        const initMessage = yield withTimeout(receiveInitMessage(worker), timeout, `Timeout: Did not receive an init message from worker after ${timeout}ms. Make sure the worker calls expose().`);\n        const exposed = initMessage.exposed;\n        const { termination, terminate } = createTerminator(worker);\n        const events = createEventObservable(worker, termination);\n        if (exposed.type === \"function\") {\n            const proxy = createProxyFunction(worker);\n            return setPrivateThreadProps(proxy, worker, events, terminate);\n        }\n        else if (exposed.type === \"module\") {\n            const proxy = createProxyModule(worker, exposed.methods);\n            return setPrivateThreadProps(proxy, worker, events, terminate);\n        }\n        else {\n            const type = exposed.type;\n            throw Error(`Worker init message states unexpected type of expose(): ${type}`);\n        }\n    });\n}\n", "const doNothing = () => undefined;\n/**\n * Creates a new promise and exposes its resolver function.\n * Use with care!\n */\nexport function createPromiseWithResolver() {\n    let alreadyResolved = false;\n    let resolvedTo;\n    let resolver = doNothing;\n    const promise = new Promise(resolve => {\n        if (alreadyResolved) {\n            resolve(resolvedTo);\n        }\n        else {\n            resolver = resolve;\n        }\n    });\n    const exposedResolver = (value) => {\n        alreadyResolved = true;\n        resolvedTo = value;\n        resolver(resolvedTo);\n    };\n    return [promise, exposedResolver];\n}\n", "/// <reference lib=\"dom\" />\n// tslint:disable max-classes-per-file\nimport { $errors, $events, $terminate, $worker } from \"../symbols\";\n/** Event as emitted by worker thread. Subscribe to using `Thread.events(thread)`. */\nexport var WorkerEventType;\n(function (WorkerEventType) {\n    WorkerEventType[\"internalError\"] = \"internalError\";\n    WorkerEventType[\"message\"] = \"message\";\n    WorkerEventType[\"termination\"] = \"termination\";\n})(WorkerEventType || (WorkerEventType = {}));\n", "/*\n * This source file contains the code for proxying calls in the master thread to calls in the workers\n * by `.postMessage()`-ing.\n *\n * Keep in mind that this code can make or break the program's performance! Need to optimize more\u2026\n */\nimport DebugLogger from \"debug\";\nimport { multicast, Observable } from \"observable-fns\";\nimport { deserialize, serialize } from \"../common\";\nimport { ObservablePromise } from \"../observable-promise\";\nimport { isTransferDescriptor } from \"../transferable\";\nimport { MasterMessageType, WorkerMessageType } from \"../types/messages\";\nconst debugMessages = DebugLogger(\"threads:master:messages\");\nlet nextJobUID = 1;\nconst dedupe = (array) => Array.from(new Set(array));\nconst isJobErrorMessage = (data) => data && data.type === WorkerMessageType.error;\nconst isJobResultMessage = (data) => data && data.type === WorkerMessageType.result;\nconst isJobStartMessage = (data) => data && data.type === WorkerMessageType.running;\nfunction createObservableForJob(worker, jobUID) {\n    return new Observable(observer => {\n        let asyncType;\n        const messageHandler = ((event) => {\n            debugMessages(\"Message from worker:\", event.data);\n            if (!event.data || event.data.uid !== jobUID)\n                return;\n            if (isJobStartMessage(event.data)) {\n                asyncType = event.data.resultType;\n            }\n            else if (isJobResultMessage(event.data)) {\n                if (asyncType === \"promise\") {\n                    if (typeof event.data.payload !== \"undefined\") {\n                        observer.next(deserialize(event.data.payload));\n                    }\n                    observer.complete();\n                    worker.removeEventListener(\"message\", messageHandler);\n                }\n                else {\n                    if (event.data.payload) {\n                        observer.next(deserialize(event.data.payload));\n                    }\n                    if (event.data.complete) {\n                        observer.complete();\n                        worker.removeEventListener(\"message\", messageHandler);\n                    }\n                }\n            }\n            else if (isJobErrorMessage(event.data)) {\n                const error = deserialize(event.data.error);\n                if (asyncType === \"promise\" || !asyncType) {\n                    observer.error(error);\n                }\n                else {\n                    observer.error(error);\n                }\n                worker.removeEventListener(\"message\", messageHandler);\n            }\n        });\n        worker.addEventListener(\"message\", messageHandler);\n        return () => {\n            if (asyncType === \"observable\" || !asyncType) {\n                const cancelMessage = {\n                    type: MasterMessageType.cancel,\n                    uid: jobUID\n                };\n                worker.postMessage(cancelMessage);\n            }\n            worker.removeEventListener(\"message\", messageHandler);\n        };\n    });\n}\nfunction prepareArguments(rawArgs) {\n    if (rawArgs.length === 0) {\n        // Exit early if possible\n        return {\n            args: [],\n            transferables: []\n        };\n    }\n    const args = [];\n    const transferables = [];\n    for (const arg of rawArgs) {\n        if (isTransferDescriptor(arg)) {\n            args.push(serialize(arg.send));\n            transferables.push(...arg.transferables);\n        }\n        else {\n            args.push(serialize(arg));\n        }\n    }\n    return {\n        args,\n        transferables: transferables.length === 0 ? transferables : dedupe(transferables)\n    };\n}\nexport function createProxyFunction(worker, method) {\n    return ((...rawArgs) => {\n        const uid = nextJobUID++;\n        const { args, transferables } = prepareArguments(rawArgs);\n        const runMessage = {\n            type: MasterMessageType.run,\n            uid,\n            method,\n            args\n        };\n        debugMessages(\"Sending command to run function to worker:\", runMessage);\n        try {\n            worker.postMessage(runMessage, transferables);\n        }\n        catch (error) {\n            return ObservablePromise.from(Promise.reject(error));\n        }\n        return ObservablePromise.from(multicast(createObservableForJob(worker, uid)));\n    });\n}\nexport function createProxyModule(worker, methodNames) {\n    const proxy = {};\n    for (const methodName of methodNames) {\n        proxy[methodName] = createProxyFunction(worker, methodName);\n    }\n    return proxy;\n}\n", "import { Observable } from \"observable-fns\";\nconst doNothing = () => undefined;\nconst returnInput = (input) => input;\nconst runDeferred = (fn) => Promise.resolve().then(fn);\nfunction fail(error) {\n    throw error;\n}\nfunction isThenable(thing) {\n    return thing && typeof thing.then === \"function\";\n}\n/**\n * Creates a hybrid, combining the APIs of an Observable and a Promise.\n *\n * It is used to proxy async process states when we are initially not sure\n * if that async process will yield values once (-> Promise) or multiple\n * times (-> Observable).\n *\n * Note that the observable promise inherits some of the observable's characteristics:\n * The `init` function will be called *once for every time anyone subscribes to it*.\n *\n * If this is undesired, derive a hot observable from it using `makeHot()` and\n * subscribe to that.\n */\nexport class ObservablePromise extends Observable {\n    constructor(init) {\n        super((originalObserver) => {\n            // tslint:disable-next-line no-this-assignment\n            const self = this;\n            const observer = Object.assign(Object.assign({}, originalObserver), { complete() {\n                    originalObserver.complete();\n                    self.onCompletion();\n                }, error(error) {\n                    originalObserver.error(error);\n                    self.onError(error);\n                },\n                next(value) {\n                    originalObserver.next(value);\n                    self.onNext(value);\n                } });\n            try {\n                this.initHasRun = true;\n                return init(observer);\n            }\n            catch (error) {\n                observer.error(error);\n            }\n        });\n        this.initHasRun = false;\n        this.fulfillmentCallbacks = [];\n        this.rejectionCallbacks = [];\n        this.firstValueSet = false;\n        this.state = \"pending\";\n    }\n    onNext(value) {\n        if (!this.firstValueSet) {\n            this.firstValue = value;\n            this.firstValueSet = true;\n        }\n    }\n    onError(error) {\n        this.state = \"rejected\";\n        this.rejection = error;\n        for (const onRejected of this.rejectionCallbacks) {\n            // Promisifying the call to turn errors into unhandled promise rejections\n            // instead of them failing sync and cancelling the iteration\n            runDeferred(() => onRejected(error));\n        }\n    }\n    onCompletion() {\n        this.state = \"fulfilled\";\n        for (const onFulfilled of this.fulfillmentCallbacks) {\n            // Promisifying the call to turn errors into unhandled promise rejections\n            // instead of them failing sync and cancelling the iteration\n            runDeferred(() => onFulfilled(this.firstValue));\n        }\n    }\n    then(onFulfilledRaw, onRejectedRaw) {\n        const onFulfilled = onFulfilledRaw || returnInput;\n        const onRejected = onRejectedRaw || fail;\n        let onRejectedCalled = false;\n        return new Promise((resolve, reject) => {\n            const rejectionCallback = (error) => {\n                if (onRejectedCalled)\n                    return;\n                onRejectedCalled = true;\n                try {\n                    resolve(onRejected(error));\n                }\n                catch (anotherError) {\n                    reject(anotherError);\n                }\n            };\n            const fulfillmentCallback = (value) => {\n                try {\n                    resolve(onFulfilled(value));\n                }\n                catch (error) {\n                    rejectionCallback(error);\n                }\n            };\n            if (!this.initHasRun) {\n                this.subscribe({ error: rejectionCallback });\n            }\n            if (this.state === \"fulfilled\") {\n                return resolve(onFulfilled(this.firstValue));\n            }\n            if (this.state === \"rejected\") {\n                onRejectedCalled = true;\n                return resolve(onRejected(this.rejection));\n            }\n            this.fulfillmentCallbacks.push(fulfillmentCallback);\n            this.rejectionCallbacks.push(rejectionCallback);\n        });\n    }\n    catch(onRejected) {\n        return this.then(undefined, onRejected);\n    }\n    finally(onCompleted) {\n        const handler = onCompleted || doNothing;\n        return this.then((value) => {\n            handler();\n            return value;\n        }, () => handler());\n    }\n    static from(thing) {\n        if (isThenable(thing)) {\n            return new ObservablePromise(observer => {\n                const onFulfilled = (value) => {\n                    observer.next(value);\n                    observer.complete();\n                };\n                const onRejected = (error) => {\n                    observer.error(error);\n                };\n                thing.then(onFulfilled, onRejected);\n            });\n        }\n        else {\n            return super.from(thing);\n        }\n    }\n}\n", "import { $transferable } from \"./symbols\";\nfunction isTransferable(thing) {\n    if (!thing || typeof thing !== \"object\")\n        return false;\n    // Don't check too thoroughly, since the list of transferable things in JS might grow over time\n    return true;\n}\nexport function isTransferDescriptor(thing) {\n    return thing && typeof thing === \"object\" && thing[$transferable];\n}\nexport function Transfer(payload, transferables) {\n    if (!transferables) {\n        if (!isTransferable(payload))\n            throw Error();\n        transferables = [payload];\n    }\n    return {\n        [$transferable]: true,\n        send: payload,\n        transferables\n    };\n}\n", "/////////////////////////////\n// Messages sent by master:\nexport var MasterMessageType;\n(function (MasterMessageType) {\n    MasterMessageType[\"cancel\"] = \"cancel\";\n    MasterMessageType[\"run\"] = \"run\";\n})(MasterMessageType || (MasterMessageType = {}));\n////////////////////////////\n// Messages sent by worker:\nexport var WorkerMessageType;\n(function (WorkerMessageType) {\n    WorkerMessageType[\"error\"] = \"error\";\n    WorkerMessageType[\"init\"] = \"init\";\n    WorkerMessageType[\"result\"] = \"result\";\n    WorkerMessageType[\"running\"] = \"running\";\n    WorkerMessageType[\"uncaughtError\"] = \"uncaughtError\";\n})(WorkerMessageType || (WorkerMessageType = {}));\n", "import { getWorkerImplementation, isWorkerRuntime } from \"./implementation\";\nexport { Pool } from \"./pool\";\nexport { spawn } from \"./spawn\";\nexport { Thread } from \"./thread\";\nexport { isWorkerRuntime };\n/** Separate class to spawn workers from source code blobs or strings. */\nexport const BlobWorker = getWorkerImplementation().blob;\n/** Worker implementation. Either web worker or a node.js Worker class. */\nexport const Worker = getWorkerImplementation().default;\n", "var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport isSomeObservable from \"is-observable\";\nimport { deserialize, serialize } from \"../common\";\nimport { isTransferDescriptor } from \"../transferable\";\nimport { MasterMessageType, WorkerMessageType } from \"../types/messages\";\nimport Implementation from \"./implementation\";\nexport { registerSerializer } from \"../common\";\nexport { Transfer } from \"../transferable\";\n/** Returns `true` if this code is currently running in a worker. */\nexport const isWorkerRuntime = Implementation.isWorkerRuntime;\nlet exposeCalled = false;\nconst activeSubscriptions = new Map();\nconst isMasterJobCancelMessage = (thing) => thing && thing.type === MasterMessageType.cancel;\nconst isMasterJobRunMessage = (thing) => thing && thing.type === MasterMessageType.run;\n/**\n * There are issues with `is-observable` not recognizing zen-observable's instances.\n * We are using `observable-fns`, but it's based on zen-observable, too.\n */\nconst isObservable = (thing) => isSomeObservable(thing) || isZenObservable(thing);\nfunction isZenObservable(thing) {\n    return thing && typeof thing === \"object\" && typeof thing.subscribe === \"function\";\n}\nfunction deconstructTransfer(thing) {\n    return isTransferDescriptor(thing)\n        ? { payload: thing.send, transferables: thing.transferables }\n        : { payload: thing, transferables: undefined };\n}\nfunction postFunctionInitMessage() {\n    const initMessage = {\n        type: WorkerMessageType.init,\n        exposed: {\n            type: \"function\"\n        }\n    };\n    Implementation.postMessageToMaster(initMessage);\n}\nfunction postModuleInitMessage(methodNames) {\n    const initMessage = {\n        type: WorkerMessageType.init,\n        exposed: {\n            type: \"module\",\n            methods: methodNames\n        }\n    };\n    Implementation.postMessageToMaster(initMessage);\n}\nfunction postJobErrorMessage(uid, rawError) {\n    const { payload: error, transferables } = deconstructTransfer(rawError);\n    const errorMessage = {\n        type: WorkerMessageType.error,\n        uid,\n        error: serialize(error)\n    };\n    Implementation.postMessageToMaster(errorMessage, transferables);\n}\nfunction postJobResultMessage(uid, completed, resultValue) {\n    const { payload, transferables } = deconstructTransfer(resultValue);\n    const resultMessage = {\n        type: WorkerMessageType.result,\n        uid,\n        complete: completed ? true : undefined,\n        payload\n    };\n    Implementation.postMessageToMaster(resultMessage, transferables);\n}\nfunction postJobStartMessage(uid, resultType) {\n    const startMessage = {\n        type: WorkerMessageType.running,\n        uid,\n        resultType\n    };\n    Implementation.postMessageToMaster(startMessage);\n}\nfunction postUncaughtErrorMessage(error) {\n    try {\n        const errorMessage = {\n            type: WorkerMessageType.uncaughtError,\n            error: serialize(error)\n        };\n        Implementation.postMessageToMaster(errorMessage);\n    }\n    catch (subError) {\n        // tslint:disable-next-line no-console\n        console.error(\"Not reporting uncaught error back to master thread as it \" +\n            \"occured while reporting an uncaught error already.\" +\n            \"\\nLatest error:\", subError, \"\\nOriginal error:\", error);\n    }\n}\nfunction runFunction(jobUID, fn, args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let syncResult;\n        try {\n            syncResult = fn(...args);\n        }\n        catch (error) {\n            return postJobErrorMessage(jobUID, error);\n        }\n        const resultType = isObservable(syncResult) ? \"observable\" : \"promise\";\n        postJobStartMessage(jobUID, resultType);\n        if (isObservable(syncResult)) {\n            const subscription = syncResult.subscribe(value => postJobResultMessage(jobUID, false, serialize(value)), error => {\n                postJobErrorMessage(jobUID, serialize(error));\n                activeSubscriptions.delete(jobUID);\n            }, () => {\n                postJobResultMessage(jobUID, true);\n                activeSubscriptions.delete(jobUID);\n            });\n            activeSubscriptions.set(jobUID, subscription);\n        }\n        else {\n            try {\n                const result = yield syncResult;\n                postJobResultMessage(jobUID, true, serialize(result));\n            }\n            catch (error) {\n                postJobErrorMessage(jobUID, serialize(error));\n            }\n        }\n    });\n}\n/**\n * Expose a function or a module (an object whose values are functions)\n * to the main thread. Must be called exactly once in every worker thread\n * to signal its API to the main thread.\n *\n * @param exposed Function or object whose values are functions\n */\nexport function expose(exposed) {\n    if (!Implementation.isWorkerRuntime()) {\n        throw Error(\"expose() called in the master thread.\");\n    }\n    if (exposeCalled) {\n        throw Error(\"expose() called more than once. This is not possible. Pass an object to expose() if you want to expose multiple functions.\");\n    }\n    exposeCalled = true;\n    if (typeof exposed === \"function\") {\n        Implementation.subscribeToMasterMessages(messageData => {\n            if (isMasterJobRunMessage(messageData) && !messageData.method) {\n                runFunction(messageData.uid, exposed, messageData.args.map(deserialize));\n            }\n        });\n        postFunctionInitMessage();\n    }\n    else if (typeof exposed === \"object\" && exposed) {\n        Implementation.subscribeToMasterMessages(messageData => {\n            if (isMasterJobRunMessage(messageData) && messageData.method) {\n                runFunction(messageData.uid, exposed[messageData.method], messageData.args.map(deserialize));\n            }\n        });\n        const methodNames = Object.keys(exposed).filter(key => typeof exposed[key] === \"function\");\n        postModuleInitMessage(methodNames);\n    }\n    else {\n        throw Error(`Invalid argument passed to expose(). Expected a function or an object, got: ${exposed}`);\n    }\n    Implementation.subscribeToMasterMessages(messageData => {\n        if (isMasterJobCancelMessage(messageData)) {\n            const jobUID = messageData.uid;\n            const subscription = activeSubscriptions.get(jobUID);\n            if (subscription) {\n                subscription.unsubscribe();\n                activeSubscriptions.delete(jobUID);\n            }\n        }\n    });\n}\nif (typeof self !== \"undefined\" && typeof self.addEventListener === \"function\" && Implementation.isWorkerRuntime()) {\n    self.addEventListener(\"error\", event => {\n        // Post with some delay, so the master had some time to subscribe to messages\n        setTimeout(() => postUncaughtErrorMessage(event.error || event), 250);\n    });\n    self.addEventListener(\"unhandledrejection\", event => {\n        const error = event.reason;\n        if (error && typeof error.message === \"string\") {\n            // Post with some delay, so the master had some time to subscribe to messages\n            setTimeout(() => postUncaughtErrorMessage(error), 250);\n        }\n    });\n}\nif (typeof process !== \"undefined\" && typeof process.on === \"function\" && Implementation.isWorkerRuntime()) {\n    process.on(\"uncaughtException\", (error) => {\n        // Post with some delay, so the master had some time to subscribe to messages\n        setTimeout(() => postUncaughtErrorMessage(error), 250);\n    });\n    process.on(\"unhandledRejection\", (error) => {\n        if (error && typeof error.message === \"string\") {\n            // Post with some delay, so the master had some time to subscribe to messages\n            setTimeout(() => postUncaughtErrorMessage(error), 250);\n        }\n    });\n}\n", "/// <reference lib=\"dom\" />\n// tslint:disable no-shadowed-variable\nconst isWorkerRuntime = function isWorkerRuntime() {\n    const isWindowContext = typeof self !== \"undefined\" && typeof Window !== \"undefined\" && self instanceof Window;\n    return typeof self !== \"undefined\" && self.postMessage && !isWindowContext ? true : false;\n};\nconst postMessageToMaster = function postMessageToMaster(data, transferList) {\n    self.postMessage(data, transferList);\n};\nconst subscribeToMasterMessages = function subscribeToMasterMessages(onMessage) {\n    const messageHandler = (messageEvent) => {\n        onMessage(messageEvent.data);\n    };\n    const unsubscribe = () => {\n        self.removeEventListener(\"message\", messageHandler);\n    };\n    self.addEventListener(\"message\", messageHandler);\n    return unsubscribe;\n};\nexport default {\n    isWorkerRuntime,\n    postMessageToMaster,\n    subscribeToMasterMessages\n};\n", "import { Pool as tPool, spawn, Worker, Transfer } from 'threads';\n\nconst defaultPoolSize = typeof navigator !== 'undefined' ? navigator.hardwareConcurrency : null;\n\n/**\n * @module pool\n */\n\n/**\n * Pool for workers to decode chunks of the images.\n */\nclass Pool {\n  /**\n   * @constructor\n   * @param {Number} size The size of the pool. Defaults to the number of CPUs\n   *                      available. When this parameter is `null` or 0, then the\n   *                      decoding will be done in the main thread.\n   * @param {Worker} worker The decoder worker, loaded and initialised. Enables\n   *                        loading the worker using worker-loader(or others) externally\n   *                        when using this library as a webpack dependency.\n   */\n  constructor(size = defaultPoolSize, worker = new Worker('./decoder.worker.js')) {\n    this.pool = tPool(() => spawn(worker), size);\n  }\n\n  /**\n   * Decode the given block of bytes with the set compression method.\n   * @param {ArrayBuffer} buffer the array buffer of bytes to decode.\n   * @returns {Promise.<ArrayBuffer>} the decoded result as a `Promise`\n   */\n  async decode(fileDirectory, buffer) {\n    return new Promise((resolve, reject) => {\n      this.pool.queue(async (decode) => {\n        try {\n          const data = await decode(fileDirectory, Transfer(buffer));\n          resolve(data);\n        } catch (err) {\n          reject(err);\n        }\n      });\n    });\n  }\n\n  destroy() {\n    this.pool.terminate(true);\n  }\n}\n\nexport default Pool;\n", "const CRLFCRLF = '\\r\\n\\r\\n';\n\n/*\n * Shim for 'Object.fromEntries'\n */\nfunction itemsToObject(items) {\n  if (typeof Object.fromEntries !== 'undefined') {\n    return Object.fromEntries(items);\n  }\n  const obj = {};\n  for (const [key, value] of items) {\n    obj[key.toLowerCase()] = value;\n  }\n  return obj;\n}\n\n/**\n * Parse HTTP headers from a given string.\n * @param {String} text the text to parse the headers from\n * @returns {Object} the parsed headers with lowercase keys\n */\nfunction parseHeaders(text) {\n  const items = text\n    .split('\\r\\n')\n    .map((line) => {\n      const kv = line.split(':').map((str) => str.trim());\n      kv[0] = kv[0].toLowerCase();\n      return kv;\n    });\n\n  return itemsToObject(items);\n}\n\n/**\n * Parse a 'Content-Type' header value to the content-type and parameters\n * @param {String} rawContentType the raw string to parse from\n * @returns {Object} the parsed content type with the fields: type and params\n */\nexport function parseContentType(rawContentType) {\n  const [type, ...rawParams] = rawContentType.split(';').map((s) => s.trim());\n  const paramsItems = rawParams.map((param) => param.split('='));\n  return { type, params: itemsToObject(paramsItems) };\n}\n\n/**\n * Parse a 'Content-Range' header value to its start, end, and total parts\n * @param {String} rawContentRange the raw string to parse from\n * @returns {Object} the parsed parts\n */\nexport function parseContentRange(rawContentRange) {\n  let start;\n  let end;\n  let total;\n\n  if (rawContentRange) {\n    [, start, end, total] = rawContentRange.match(/bytes (\\d+)-(\\d+)\\/(\\d+)/);\n    start = parseInt(start, 10);\n    end = parseInt(end, 10);\n    total = parseInt(total, 10);\n  }\n\n  return { start, end, total };\n}\n\n/**\n * Parses a list of byteranges from the given 'multipart/byteranges' HTTP response.\n * Each item in the list has the following properties:\n * - headers: the HTTP headers\n * - data: the sliced ArrayBuffer for that specific part\n * - offset: the offset of the byterange within its originating file\n * - length: the length of the byterange\n * @param {ArrayBuffer} responseArrayBuffer the response to be parsed and split\n * @param {String} boundary the boundary string used to split the sections\n * @returns {Object[]} the parsed byteranges\n */\nexport function parseByteRanges(responseArrayBuffer, boundary) {\n  let offset = null;\n  const decoder = new TextDecoder('ascii');\n  const out = [];\n\n  const startBoundary = `--${boundary}`;\n  const endBoundary = `${startBoundary}--`;\n\n  // search for the initial boundary, may be offset by some bytes\n  // TODO: more efficient to check for `--` in bytes directly\n  for (let i = 0; i < 10; ++i) {\n    const text = decoder.decode(\n      new Uint8Array(responseArrayBuffer, i, startBoundary.length),\n    );\n    if (text === startBoundary) {\n      offset = i;\n    }\n  }\n\n  if (offset === null) {\n    throw new Error('Could not find initial boundary');\n  }\n\n  while (offset < responseArrayBuffer.byteLength) {\n    const text = decoder.decode(\n      new Uint8Array(responseArrayBuffer, offset,\n        Math.min(startBoundary.length + 1024, responseArrayBuffer.byteLength - offset),\n      ),\n    );\n\n    // break if we arrived at the end\n    if (text.length === 0 || text.startsWith(endBoundary)) {\n      break;\n    }\n\n    // assert that we are actually dealing with a byterange and are at the correct offset\n    if (!text.startsWith(startBoundary)) {\n      throw new Error('Part does not start with boundary');\n    }\n\n    // get a substring from where we read the headers\n    const innerText = text.substr(startBoundary.length + 2);\n\n    if (innerText.length === 0) {\n      break;\n    }\n\n    // find the double linebreak that denotes the end of the headers\n    const endOfHeaders = innerText.indexOf(CRLFCRLF);\n\n    // parse the headers to get the content range size\n    const headers = parseHeaders(innerText.substr(0, endOfHeaders));\n    const { start, end, total } = parseContentRange(headers['content-range']);\n\n    // calculate the length of the slice and the next offset\n    const startOfData = offset + startBoundary.length + endOfHeaders + CRLFCRLF.length;\n    const length = parseInt(end, 10) + 1 - parseInt(start, 10);\n    out.push({\n      headers,\n      data: responseArrayBuffer.slice(startOfData, startOfData + length),\n      offset: start,\n      length,\n      fileSize: total,\n    });\n\n    offset = startOfData + length + 4;\n  }\n\n  return out;\n}\n", "/**\n * @typedef Slice\n * @property {number} offset\n * @property {number} length\n */\n\nexport class BaseSource {\n  /**\n   *\n   * @param {Slice[]} slices\n   * @returns {ArrayBuffer[]}\n   */\n  async fetch(slices, signal = undefined) {\n    return Promise.all(\n      slices.map((slice) => this.fetchSlice(slice, signal)),\n    );\n  }\n\n  /**\n   *\n   * @param {Slice} slice\n   * @returns {ArrayBuffer}\n   */\n  async fetchSlice(slice) {\n    throw new Error(`fetching of slice ${slice} not possible, not implemented`);\n  }\n\n  /**\n   * Returns the filesize if already determined and null otherwise\n   */\n  get fileSize() {\n    return null;\n  }\n\n  async close() {\n    // no-op by default\n  }\n}\n", "import LRUCache from 'lru-cache';\nimport { BaseSource } from './basesource';\nimport { AbortError, AggregateError, wait, zip } from '../utils';\n\nclass Block {\n  /**\n   *\n   * @param {number} offset\n   * @param {number} length\n   * @param {ArrayBuffer} [data]\n   */\n  constructor(offset, length, data = null) {\n    this.offset = offset;\n    this.length = length;\n    this.data = data;\n  }\n\n  /**\n   * @returns {number} the top byte border\n   */\n  get top() {\n    return this.offset + this.length;\n  }\n}\n\nclass BlockGroup {\n  /**\n   *\n   * @param {number} offset\n   * @param {number} length\n   * @param {number[]} blockIds\n   */\n  constructor(offset, length, blockIds) {\n    this.offset = offset;\n    this.length = length;\n    this.blockIds = blockIds;\n  }\n}\n\nexport class BlockedSource extends BaseSource {\n  /**\n   *\n   * @param {Source} source The underlying source that shall be blocked and cached\n   * @param {object} options\n   */\n  constructor(source, { blockSize = 65536, cacheSize = 100 } = {}) {\n    super();\n    this.source = source;\n    this.blockSize = blockSize;\n\n    this.blockCache = new LRUCache({ max: cacheSize });\n\n    // mapping blockId -> Block instance\n    this.blockRequests = new Map();\n\n    // set of blockIds missing for the current requests\n    this.blockIdsToFetch = new Set();\n  }\n\n  get fileSize() {\n    return this.source.fileSize;\n  }\n\n  /**\n   *\n   * @param {basesource/Slice[]} slices\n   */\n  async fetch(slices, signal) {\n    const cachedBlocks = new Map();\n    const blockRequests = new Map();\n    const missingBlockIds = new Set();\n\n    for (const { offset, length } of slices) {\n      let top = offset + length;\n\n      const { fileSize } = this;\n      if (fileSize !== null) {\n        top = Math.min(top, fileSize);\n      }\n\n      const firstBlockOffset = Math.floor(offset / this.blockSize) * this.blockSize;\n\n      // chunk the current slice into blocks\n      for (let current = firstBlockOffset; current < top; current += this.blockSize) {\n        // check if the block is cached, being requested or still missing\n        const blockId = Math.floor(current / this.blockSize);\n\n        if (this.blockCache.has(blockId)) {\n          cachedBlocks.set(blockId, this.blockCache.get(blockId));\n        } else if (this.blockRequests.has(blockId)) {\n          blockRequests.set(blockId, this.blockRequests.get(blockId));\n        } else if (this.blockIdsToFetch.has(blockId)) {\n          missingBlockIds.add(blockId);\n        } else {\n          this.blockIdsToFetch.add(blockId);\n          missingBlockIds.add(blockId);\n        }\n      }\n    }\n\n    // allow additional block requests to accumulate\n    await wait();\n    this.fetchBlocks(signal);\n\n    for (const blockId of missingBlockIds) {\n      const block = this.blockRequests.get(blockId);\n      const cachedBlock = this.blockCache.get(blockId);\n\n      if (block) {\n        blockRequests.set(blockId, block);\n      } else if (cachedBlock) {\n        cachedBlocks.set(blockId, cachedBlock);\n      } else {\n        throw new Error(`Block ${blockId} is not in the block requests`);\n      }\n    }\n\n    // actually await all pending requests\n    let results = await Promise.allSettled(blockRequests.values());\n\n    // perform retries if a block was interrupted by a previous signal\n    if (results.some((result) => result.status === 'rejected')) {\n      const retriedBlockRequests = new Set();\n      for (const [blockId, result] of zip(blockRequests.keys(), results)) {\n        const { rejected, reason } = result;\n        if (rejected) {\n          // push some blocks back to the to-fetch list if they were\n          // aborted, but only when a different signal was used\n          if (reason.name === 'AbortError' && reason.signal !== signal) {\n            this.blockIdsToFetch.add(blockId);\n            retriedBlockRequests.add(blockId);\n          }\n        }\n      }\n\n      // start the retry of some blocks if required\n      if (this.blockIdsToFetch.length > 0) {\n        this.fetchBlocks(signal);\n        for (const blockId of retriedBlockRequests) {\n          const block = this.blockRequests.get(blockId);\n          if (!block) {\n            throw new Error(`Block ${blockId} is not in the block requests`);\n          }\n          blockRequests.set(blockId, block);\n        }\n        results = await Promise.allSettled(Array.from(blockRequests.values()));\n      }\n    }\n\n    // throw an error (either abort error or AggregateError if no abort was done)\n    if (results.some((result) => result.status === 'rejected')) {\n      if (signal && signal.aborted) {\n        throw new AbortError('Request was aborted');\n      }\n      throw new AggregateError(\n        results.filter((result) => result.status === 'rejected').map((result) => result.reason),\n        'Request failed',\n      );\n    }\n\n    // extract the actual block responses\n    const values = results.map((result) => result.value);\n\n    // create a final Map, with all required blocks for this request to satisfy\n    const requiredBlocks = new Map(zip(Array.from(blockRequests.keys()), values));\n    for (const [blockId, block] of cachedBlocks) {\n      requiredBlocks.set(blockId, block);\n    }\n\n    // TODO: satisfy each slice\n    return this.readSliceData(slices, requiredBlocks);\n  }\n\n  /**\n   *\n   * @param {AbortSignal} signal\n   */\n  fetchBlocks(signal) {\n    // check if we still need to\n    if (this.blockIdsToFetch.size > 0) {\n      const groups = this.groupBlocks(this.blockIdsToFetch);\n\n      // start requesting slices of data\n      const groupRequests = this.source.fetch(groups, signal);\n\n      for (let groupIndex = 0; groupIndex < groups.length; ++groupIndex) {\n        const group = groups[groupIndex];\n\n        for (const blockId of group.blockIds) {\n          // make an async IIFE for each block\n          const blockRequest = (async () => {\n            try {\n              const response = (await groupRequests)[groupIndex];\n              const blockOffset = blockId * this.blockSize;\n              const o = blockOffset - response.offset;\n              const t = Math.min(o + this.blockSize, response.data.byteLength);\n              const data = response.data.slice(o, t);\n              const block = new Block(\n                blockOffset,\n                data.byteLength,\n                data,\n              );\n              this.blockCache.set(blockId, block);\n              return block;\n            } catch (err) {\n              if (err.name === 'AbortError') {\n                // store the signal here, we need it to determine later if an\n                // error was caused by this signal\n                err.signal = signal;\n              }\n              throw err;\n            } finally {\n              this.blockRequests.delete(blockId);\n            }\n          })();\n          this.blockRequests.set(blockId, blockRequest);\n        }\n      }\n      this.blockIdsToFetch.clear();\n    }\n  }\n\n  /**\n   *\n   * @param {Set} blockIds\n   * @returns {BlockGroup[]}\n   */\n  groupBlocks(blockIds) {\n    const sortedBlockIds = Array.from(blockIds).sort((a, b) => a - b);\n    if (sortedBlockIds.length === 0) {\n      return [];\n    }\n    let current = [];\n    let lastBlockId = null;\n    const groups = [];\n\n    for (const blockId of sortedBlockIds) {\n      if (lastBlockId === null || lastBlockId + 1 === blockId) {\n        current.push(blockId);\n        lastBlockId = blockId;\n      } else {\n        groups.push(new BlockGroup(\n          current[0] * this.blockSize,\n          current.length * this.blockSize,\n          current,\n        ));\n        current = [blockId];\n        lastBlockId = blockId;\n      }\n    }\n\n    groups.push(new BlockGroup(\n      current[0] * this.blockSize,\n      current.length * this.blockSize,\n      current,\n    ));\n\n    return groups;\n  }\n\n  /**\n   *\n   * @param {Slice[]} slices\n   * @param {Map} blocks\n   */\n  readSliceData(slices, blocks) {\n    return slices.map((slice) => {\n      const top = slice.offset + slice.length;\n      const blockIdLow = Math.floor(slice.offset / this.blockSize);\n      const blockIdHigh = Math.floor((slice.offset + slice.length) / this.blockSize);\n      const sliceData = new ArrayBuffer(slice.length);\n      const sliceView = new Uint8Array(sliceData);\n\n      for (let blockId = blockIdLow; blockId <= blockIdHigh; ++blockId) {\n        const block = blocks.get(blockId);\n        const delta = block.offset - slice.offset;\n        const topDelta = block.top - top;\n        let blockInnerOffset = 0;\n        let rangeInnerOffset = 0;\n        let usedBlockLength;\n\n        if (delta < 0) {\n          blockInnerOffset = -delta;\n        } else if (delta > 0) {\n          rangeInnerOffset = delta;\n        }\n\n        if (topDelta < 0) {\n          usedBlockLength = block.length - blockInnerOffset;\n        } else {\n          usedBlockLength = top - block.offset - blockInnerOffset;\n        }\n\n        const blockView = new Uint8Array(block.data, blockInnerOffset, usedBlockLength);\n        sliceView.set(blockView, rangeInnerOffset);\n      }\n\n      return sliceData;\n    });\n  }\n}\n", "export function assign(target, source) {\n  for (const key in source) {\n    if (source.hasOwnProperty(key)) {\n      target[key] = source[key];\n    }\n  }\n}\n\nexport function chunk(iterable, length) {\n  const results = [];\n  const lengthOfIterable = iterable.length;\n  for (let i = 0; i < lengthOfIterable; i += length) {\n    const chunked = [];\n    for (let ci = i; ci < i + length; ci++) {\n      chunked.push(iterable[ci]);\n    }\n    results.push(chunked);\n  }\n  return results;\n}\n\nexport function endsWith(string, expectedEnding) {\n  if (string.length < expectedEnding.length) {\n    return false;\n  }\n  const actualEnding = string.substr(string.length - expectedEnding.length);\n  return actualEnding === expectedEnding;\n}\n\nexport function forEach(iterable, func) {\n  const { length } = iterable;\n  for (let i = 0; i < length; i++) {\n    func(iterable[i], i);\n  }\n}\n\nexport function invert(oldObj) {\n  const newObj = {};\n  for (const key in oldObj) {\n    if (oldObj.hasOwnProperty(key)) {\n      const value = oldObj[key];\n      newObj[value] = key;\n    }\n  }\n  return newObj;\n}\n\nexport function range(n) {\n  const results = [];\n  for (let i = 0; i < n; i++) {\n    results.push(i);\n  }\n  return results;\n}\n\nexport function times(numTimes, func) {\n  const results = [];\n  for (let i = 0; i < numTimes; i++) {\n    results.push(func(i));\n  }\n  return results;\n}\n\nexport function toArray(iterable) {\n  const results = [];\n  const { length } = iterable;\n  for (let i = 0; i < length; i++) {\n    results.push(iterable[i]);\n  }\n  return results;\n}\n\nexport function toArrayRecursively(input) {\n  if (input.length) {\n    return toArray(input).map(toArrayRecursively);\n  }\n  return input;\n}\n\n// copied from https://github.com/academia-de-codigo/parse-content-range-header/blob/master/index.js\nexport function parseContentRange(headerValue) {\n  if (!headerValue) {\n    return null;\n  }\n\n  if (typeof headerValue !== 'string') {\n    throw new Error('invalid argument');\n  }\n\n  const parseInt = (number) => Number.parseInt(number, 10);\n\n  // Check for presence of unit\n  let matches = headerValue.match(/^(\\w*) /);\n  const unit = matches && matches[1];\n\n  // check for start-end/size header format\n  matches = headerValue.match(/(\\d+)-(\\d+)\\/(\\d+|\\*)/);\n  if (matches) {\n    return {\n      unit,\n      first: parseInt(matches[1]),\n      last: parseInt(matches[2]),\n      length: matches[3] === '*' ? null : parseInt(matches[3]),\n    };\n  }\n\n  // check for size header format\n  matches = headerValue.match(/(\\d+|\\*)/);\n  if (matches) {\n    return {\n      unit,\n      first: null,\n      last: null,\n      length: matches[1] === '*' ? null : parseInt(matches[1]),\n    };\n  }\n\n  return null;\n}\n\n/*\n * Promisified wrapper around 'setTimeout' to allow 'await'\n */\nexport async function wait(milliseconds) {\n  return new Promise((resolve) => setTimeout(resolve, milliseconds));\n}\n\nexport function zip(a, b) {\n  const A = Array.isArray(a) ? a : Array.from(a);\n  const B = Array.isArray(b) ? b : Array.from(b);\n  return A.map((k, i) => [k, B[i]]);\n}\n\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error\nexport class AbortError extends Error {\n  constructor(params) {\n    // Pass remaining arguments (including vendor specific ones) to parent constructor\n    super(params);\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, AbortError);\n    }\n\n    this.name = 'AbortError';\n  }\n}\n\nexport class CustomAggregateError extends Error {\n  constructor(errors, message) {\n    super(message);\n    this.errors = errors;\n    this.message = message;\n    this.name = 'AggregateError';\n  }\n}\n\nexport const AggregateError = CustomAggregateError;\n", "export class BaseResponse {\n  /**\n   * Returns whether the response has an ok'ish status code\n   */\n  get ok() {\n    return this.status >= 200 && this.status <= 299;\n  }\n\n  /**\n   * Returns the status code of the response\n   */\n  get status() {\n    throw new Error('not implemented');\n  }\n\n  /**\n   * Returns the value of the specified header\n   * @param {string} headerName the header name\n   * @returns {string} the header value\n   */\n  getHeader(headerName) { // eslint-disable-line no-unused-vars\n    throw new Error('not implemented');\n  }\n\n  /**\n   * @returns {ArrayBuffer} the response data of the request\n   */\n  async getData() {\n    throw new Error('not implemented');\n  }\n}\n\nexport class BaseClient {\n  constructor(url) {\n    this.url = url;\n  }\n\n  /**\n   * Send a request with the options\n   * @param {object} [options]\n   */\n  async request({ headers, credentials, signal } = {}) { // eslint-disable-line no-unused-vars\n    throw new Error('request is not implemented');\n  }\n}\n", "import { BaseClient, BaseResponse } from './base';\n\nclass FetchResponse extends BaseResponse {\n  /**\n   * BaseResponse facade for fetch API Response\n   * @param {Response} response\n   */\n  constructor(response) {\n    super();\n    this.response = response;\n  }\n\n  get status() {\n    return this.response.status;\n  }\n\n  getHeader(name) {\n    return this.response.headers.get(name);\n  }\n\n  async getData() {\n    const data = this.response.arrayBuffer\n      ? await this.response.arrayBuffer()\n      : (await this.response.buffer()).buffer;\n    return data;\n  }\n}\n\nexport class FetchClient extends BaseClient {\n  constructor(url, credentials) {\n    super(url);\n    this.credentials = credentials;\n  }\n\n  async request({ headers, credentials, signal } = {}) {\n    const response = await fetch(this.url, {\n      headers, credentials, signal,\n    });\n    return new FetchResponse(response);\n  }\n}\n", "import { BaseClient, BaseResponse } from './base';\nimport { AbortError } from '../../utils';\n\nclass XHRResponse extends BaseResponse {\n  /**\n   * BaseResponse facade for XMLHttpRequest\n   * @param {XMLHttpRequest} xhr\n   * @param {ArrayBuffer} data\n   */\n  constructor(xhr, data) {\n    super();\n    this.xhr = xhr;\n    this.data = data;\n  }\n\n  get status() {\n    return this.xhr.status;\n  }\n\n  getHeader(name) {\n    return this.xhr.getResponseHeader(name);\n  }\n\n  async getData() {\n    return this.data;\n  }\n}\n\nexport class XHRClient extends BaseClient {\n  constructRequest(headers, signal) {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET', this.url);\n      xhr.responseType = 'arraybuffer';\n      for (const [key, value] of Object.entries(headers)) {\n        xhr.setRequestHeader(key, value);\n      }\n\n      // hook signals\n      xhr.onload = () => {\n        const data = xhr.response;\n        resolve(new XHRResponse(xhr, data));\n      };\n      xhr.onerror = reject;\n      xhr.onabort = () => reject(new AbortError('Request aborted'));\n      xhr.send();\n\n      if (signal) {\n        if (signal.aborted) {\n          xhr.abort();\n        }\n        signal.addEventListener('abort', () => xhr.abort());\n      }\n    });\n  }\n\n  async request({ headers, signal } = {}) {\n    const response = await this.constructRequest(headers, signal);\n    return response;\n  }\n}\n", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"http\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"https\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"url\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "import http from 'http';\nimport https from 'https';\nimport urlMod from 'url';\n\nimport { BaseClient, BaseResponse } from './base';\nimport { AbortError } from '../../utils';\n\nclass HttpResponse extends BaseResponse {\n  /**\n   * BaseResponse facade for node HTTP/HTTPS API Response\n   * @param {http.ServerResponse} response\n   */\n  constructor(response, dataPromise) {\n    super();\n    this.response = response;\n    this.dataPromise = dataPromise;\n  }\n\n  get status() {\n    return this.response.statusCode;\n  }\n\n  getHeader(name) {\n    return this.response.headers[name];\n  }\n\n  async getData() {\n    const data = await this.dataPromise;\n    return data;\n  }\n}\n\nexport class HttpClient extends BaseClient {\n  constructor(url) {\n    super(url);\n    this.parsedUrl = urlMod.parse(this.url);\n    this.httpApi = (this.parsedUrl.protocol === 'http:' ? http : https);\n  }\n\n  constructRequest(headers, signal) {\n    return new Promise((resolve, reject) => {\n      const request = this.httpApi.get(\n        {\n          ...this.parsedUrl,\n          headers,\n        },\n        (response) => {\n          const dataPromise = new Promise((resolveData) => {\n            const chunks = [];\n\n            // collect chunks\n            response.on('data', (chunk) => {\n              chunks.push(chunk);\n            });\n\n            // concatenate all chunks and resolve the promise with the resulting buffer\n            response.on('end', () => {\n              const data = Buffer.concat(chunks).buffer;\n              resolveData(data);\n            });\n            response.on('error', reject);\n          });\n          resolve(new HttpResponse(response, dataPromise));\n        },\n      );\n      request.on('error', reject);\n\n      if (signal) {\n        if (signal.aborted) {\n          request.destroy(new AbortError('Request aborted'));\n        }\n        signal.addEventListener('abort', () => request.destroy(new AbortError('Request aborted')));\n      }\n    });\n  }\n\n  async request({ headers, signal } = {}) {\n    const response = await this.constructRequest(headers, signal);\n    return response;\n  }\n}\n", "import { parseByteRanges, parseContentRange, parseContentType } from './httputils';\nimport { BaseSource } from './basesource';\nimport { BlockedSource } from './blockedsource';\n\nimport { FetchClient } from './client/fetch';\nimport { XHRClient } from './client/xhr';\nimport { HttpClient } from './client/http';\n\nclass RemoteSource extends BaseSource {\n  /**\n   *\n   * @param {BaseClient} client\n   * @param {object} headers\n   * @param {numbers} maxRanges\n   * @param {boolean} allowFullFile\n   */\n  constructor(client, headers, maxRanges, allowFullFile) {\n    super();\n    this.client = client;\n    this.headers = headers;\n    this.maxRanges = maxRanges;\n    this.allowFullFile = allowFullFile;\n    this._fileSize = null;\n  }\n\n  /**\n   *\n   * @param {Slice[]} slices\n   */\n  async fetch(slices, signal) {\n    // if we allow multi-ranges, split the incoming request into that many sub-requests\n    // and join them afterwards\n    if (this.maxRanges >= slices.length) {\n      return this.fetchSlices(slices, signal);\n    } else if (this.maxRanges > 0 && slices.length > 1) {\n      // TODO: split into multiple multi-range requests\n\n      // const subSlicesRequests = [];\n      // for (let i = 0; i < slices.length; i += this.maxRanges) {\n      //   subSlicesRequests.push(\n      //     this.fetchSlices(slices.slice(i, i + this.maxRanges), signal),\n      //   );\n      // }\n      // return (await Promise.all(subSlicesRequests)).flat();\n    }\n\n    // otherwise make a single request for each slice\n    return Promise.all(\n      slices.map((slice) => this.fetchSlice(slice, signal)),\n    );\n  }\n\n  async fetchSlices(slices, signal) {\n    const response = await this.client.request({\n      headers: {\n        ...this.headers,\n        Range: `bytes=${slices\n          .map(({ offset, length }) => `${offset}-${offset + length}`)\n          .join(',')\n        }`,\n      },\n      signal,\n    });\n\n    if (!response.ok) {\n      throw new Error('Error fetching data.');\n    } else if (response.status === 206) {\n      const { type, params } = parseContentType(response.getHeader('content-type'));\n      if (type === 'multipart/byteranges') {\n        const byteRanges = parseByteRanges(await response.getData(), params.boundary);\n        this._fileSize = byteRanges[0].fileSize || null;\n        return byteRanges;\n      }\n\n      const data = await response.getData();\n\n      const { start, end, total } = parseContentRange(response.getHeader('content-range'));\n      this._fileSize = total || null;\n      const first = [{\n        data,\n        offset: start,\n        length: end - start,\n      }];\n\n      if (slices.length > 1) {\n        // we requested more than one slice, but got only the first\n        // unfortunately, some HTTP Servers don't support multi-ranges\n        // and return onyl the first\n\n        // get the rest of the slices and fetch them iteratetively\n        const others = await Promise.all(slices.slice(1).map((slice) => this.fetchSlice(slice, signal)));\n        return first.concat(others);\n      }\n      return first;\n    } else {\n      if (!this.allowFullFile) {\n        throw new Error('Server responded with full file');\n      }\n      const data = await response.getData();\n      this._fileSize = data.byteLength;\n      return [{\n        data,\n        offset: 0,\n        length: data.byteLength,\n      }];\n    }\n  }\n\n  async fetchSlice(slice, signal) {\n    const { offset, length } = slice;\n    const response = await this.client.request({\n      headers: {\n        ...this.headers,\n        Range: `bytes=${offset}-${offset + length}`,\n      },\n      signal,\n    });\n\n    // check the response was okay and if the server actually understands range requests\n    if (!response.ok) {\n      throw new Error('Error fetching data.');\n    } else if (response.status === 206) {\n      const data = await response.getData();\n\n      const { total } = parseContentRange(response.getHeader('content-range'));\n      this._fileSize = total || null;\n      return {\n        data,\n        offset,\n        length,\n      };\n    } else {\n      if (!this.allowFullFile) {\n        throw new Error('Server responded with full file');\n      }\n\n      const data = await response.getData();\n\n      this._fileSize = data.byteLength;\n      return {\n        data,\n        offset: 0,\n        length: data.byteLength,\n      };\n    }\n  }\n\n  get fileSize() {\n    return this._fileSize;\n  }\n}\n\nfunction maybeWrapInBlockedSource(source, { blockSize, cacheSize }) {\n  if (blockSize === null) {\n    return source;\n  }\n  return new BlockedSource(source, blockSize, cacheSize);\n}\n\nexport function makeFetchSource(url, { headers = {}, credentials, maxRanges = 0, allowFullFile = false, ...blockOptions } = {}) {\n  const client = new FetchClient(url, credentials);\n  const source = new RemoteSource(client, headers, maxRanges, allowFullFile);\n  return maybeWrapInBlockedSource(source, blockOptions);\n}\n\nexport function makeXHRSource(url, { headers = {}, maxRanges = 0, allowFullFile = false, ...blockOptions } = {}) {\n  const client = new XHRClient(url);\n  const source = new RemoteSource(client, headers, maxRanges, allowFullFile);\n  return maybeWrapInBlockedSource(source, blockOptions);\n}\n\nexport function makeHttpSource(url, { headers = {}, maxRanges = 0, allowFullFile = false, ...blockOptions } = {}) {\n  const client = new HttpClient(url);\n  const source = new RemoteSource(client, headers, maxRanges, allowFullFile);\n  return maybeWrapInBlockedSource(source, blockOptions);\n}\n\n/**\n *\n * @param {string} url\n * @param {object} options\n */\nexport function makeRemoteSource(url, { forceXHR = false, ...clientOptions } = {}) {\n  if (typeof fetch === 'function' && !forceXHR) {\n    return makeFetchSource(url, clientOptions);\n  }\n  if (typeof XMLHttpRequest !== 'undefined') {\n    return makeXHRSource(url, clientOptions);\n  }\n  return makeHttpSource(url, clientOptions);\n}\n", "export default new Proxy({}, {\n  get() {\n    throw new Error('Module \"fs\" has been externalized for browser compatibility and cannot be accessed in client code.')\n  }\n})", "/*\n  Some parts of this file are based on UTIF.js,\n  which was released under the MIT License.\n  You can view that here:\n  https://github.com/photopea/UTIF.js/blob/master/LICENSE\n*/\nimport { fieldTagNames, fieldTagTypes, fieldTypeNames, geoKeyNames } from './globals';\nimport { assign, endsWith, forEach, invert, times } from './utils';\n\nconst tagName2Code = invert(fieldTagNames);\nconst geoKeyName2Code = invert(geoKeyNames);\nconst name2code = {};\nassign(name2code, tagName2Code);\nassign(name2code, geoKeyName2Code);\nconst typeName2byte = invert(fieldTypeNames);\n\n// config variables\nconst numBytesInIfd = 1000;\n\nconst _binBE = {\n  nextZero: (data, o) => {\n    let oincr = o;\n    while (data[oincr] !== 0) {\n      oincr++;\n    }\n    return oincr;\n  },\n  readUshort: (buff, p) => {\n    return (buff[p] << 8) | buff[p + 1];\n  },\n  readShort: (buff, p) => {\n    const a = _binBE.ui8;\n    a[0] = buff[p + 1];\n    a[1] = buff[p + 0];\n    return _binBE.i16[0];\n  },\n  readInt: (buff, p) => {\n    const a = _binBE.ui8;\n    a[0] = buff[p + 3];\n    a[1] = buff[p + 2];\n    a[2] = buff[p + 1];\n    a[3] = buff[p + 0];\n    return _binBE.i32[0];\n  },\n  readUint: (buff, p) => {\n    const a = _binBE.ui8;\n    a[0] = buff[p + 3];\n    a[1] = buff[p + 2];\n    a[2] = buff[p + 1];\n    a[3] = buff[p + 0];\n    return _binBE.ui32[0];\n  },\n  readASCII: (buff, p, l) => {\n    return l.map((i) => String.fromCharCode(buff[p + i])).join('');\n  },\n  readFloat: (buff, p) => {\n    const a = _binBE.ui8;\n    times(4, (i) => {\n      a[i] = buff[p + 3 - i];\n    });\n    return _binBE.fl32[0];\n  },\n  readDouble: (buff, p) => {\n    const a = _binBE.ui8;\n    times(8, (i) => {\n      a[i] = buff[p + 7 - i];\n    });\n    return _binBE.fl64[0];\n  },\n  writeUshort: (buff, p, n) => {\n    buff[p] = (n >> 8) & 255;\n    buff[p + 1] = n & 255;\n  },\n  writeUint: (buff, p, n) => {\n    buff[p] = (n >> 24) & 255;\n    buff[p + 1] = (n >> 16) & 255;\n    buff[p + 2] = (n >> 8) & 255;\n    buff[p + 3] = (n >> 0) & 255;\n  },\n  writeASCII: (buff, p, s) => {\n    times(s.length, (i) => {\n      buff[p + i] = s.charCodeAt(i);\n    });\n  },\n  ui8: new Uint8Array(8),\n};\n\n_binBE.fl64 = new Float64Array(_binBE.ui8.buffer);\n\n_binBE.writeDouble = (buff, p, n) => {\n  _binBE.fl64[0] = n;\n  times(8, (i) => {\n    buff[p + i] = _binBE.ui8[7 - i];\n  });\n};\n\nconst _writeIFD = (bin, data, _offset, ifd) => {\n  let offset = _offset;\n\n  const keys = Object.keys(ifd).filter((key) => {\n    return key !== undefined && key !== null && key !== 'undefined';\n  });\n\n  bin.writeUshort(data, offset, keys.length);\n  offset += 2;\n\n  let eoff = offset + (12 * keys.length) + 4;\n\n  for (const key of keys) {\n    let tag = null;\n    if (typeof key === 'number') {\n      tag = key;\n    } else if (typeof key === 'string') {\n      tag = parseInt(key, 10);\n    }\n\n    const typeName = fieldTagTypes[tag];\n    const typeNum = typeName2byte[typeName];\n\n    if (typeName == null || typeName === undefined || typeof typeName === 'undefined') {\n      throw new Error(`unknown type of tag: ${tag}`);\n    }\n\n    let val = ifd[key];\n\n    if (typeof val === 'undefined') {\n      throw new Error(`failed to get value for key ${key}`);\n    }\n\n    // ASCIIZ format with trailing 0 character\n    // http://www.fileformat.info/format/tiff/corion.htm\n    // https://stackoverflow.com/questions/7783044/whats-the-difference-between-asciiz-vs-ascii\n    if (typeName === 'ASCII' && typeof val === 'string' && endsWith(val, '\\u0000') === false) {\n      val += '\\u0000';\n    }\n\n    const num = val.length;\n\n    bin.writeUshort(data, offset, tag);\n    offset += 2;\n\n    bin.writeUshort(data, offset, typeNum);\n    offset += 2;\n\n    bin.writeUint(data, offset, num);\n    offset += 4;\n\n    let dlen = [-1, 1, 1, 2, 4, 8, 0, 0, 0, 0, 0, 0, 8][typeNum] * num;\n    let toff = offset;\n\n    if (dlen > 4) {\n      bin.writeUint(data, offset, eoff);\n      toff = eoff;\n    }\n\n    if (typeName === 'ASCII') {\n      bin.writeASCII(data, toff, val);\n    } else if (typeName === 'SHORT') {\n      times(num, (i) => {\n        bin.writeUshort(data, toff + (2 * i), val[i]);\n      });\n    } else if (typeName === 'LONG') {\n      times(num, (i) => {\n        bin.writeUint(data, toff + (4 * i), val[i]);\n      });\n    } else if (typeName === 'RATIONAL') {\n      times(num, (i) => {\n        bin.writeUint(data, toff + (8 * i), Math.round(val[i] * 10000));\n        bin.writeUint(data, toff + (8 * i) + 4, 10000);\n      });\n    } else if (typeName === 'DOUBLE') {\n      times(num, (i) => {\n        bin.writeDouble(data, toff + (8 * i), val[i]);\n      });\n    }\n\n    if (dlen > 4) {\n      dlen += (dlen & 1);\n      eoff += dlen;\n    }\n\n    offset += 4;\n  }\n\n  return [offset, eoff];\n};\n\nconst encodeIfds = (ifds) => {\n  const data = new Uint8Array(numBytesInIfd);\n  let offset = 4;\n  const bin = _binBE;\n\n  // set big-endian byte-order\n  // https://en.wikipedia.org/wiki/TIFF#Byte_order\n  data[0] = 77;\n  data[1] = 77;\n\n  // set format-version number\n  // https://en.wikipedia.org/wiki/TIFF#Byte_order\n  data[3] = 42;\n\n  let ifdo = 8;\n\n  bin.writeUint(data, offset, ifdo);\n\n  offset += 4;\n\n  ifds.forEach((ifd, i) => {\n    const noffs = _writeIFD(bin, data, ifdo, ifd);\n    ifdo = noffs[1];\n    if (i < ifds.length - 1) {\n      bin.writeUint(data, noffs[0], ifdo);\n    }\n  });\n\n  if (data.slice) {\n    return data.slice(0, ifdo).buffer;\n  }\n\n  // node hasn't implemented slice on Uint8Array yet\n  const result = new Uint8Array(ifdo);\n  for (let i = 0; i < ifdo; i++) {\n    result[i] = data[i];\n  }\n  return result.buffer;\n};\n\nconst encodeImage = (values, width, height, metadata) => {\n  if (height === undefined || height === null) {\n    throw new Error(`you passed into encodeImage a width of type ${height}`);\n  }\n\n  if (width === undefined || width === null) {\n    throw new Error(`you passed into encodeImage a width of type ${width}`);\n  }\n\n  const ifd = {\n    256: [width], // ImageWidth\n    257: [height], // ImageLength\n    273: [numBytesInIfd], // strips offset\n    278: [height], // RowsPerStrip\n    305: 'geotiff.js', // no array for ASCII(Z)\n  };\n\n  if (metadata) {\n    for (const i in metadata) {\n      if (metadata.hasOwnProperty(i)) {\n        ifd[i] = metadata[i];\n      }\n    }\n  }\n\n  const prfx = new Uint8Array(encodeIfds([ifd]));\n\n  const img = new Uint8Array(values);\n\n  const samplesPerPixel = ifd[277];\n\n  const data = new Uint8Array(numBytesInIfd + (width * height * samplesPerPixel));\n  times(prfx.length, (i) => {\n    data[i] = prfx[i];\n  });\n  forEach(img, (value, i) => {\n    data[numBytesInIfd + i] = value;\n  });\n\n  return data.buffer;\n};\n\nconst convertToTids = (input) => {\n  const result = {};\n  for (const key in input) {\n    if (key !== 'StripOffsets') {\n      if (!name2code[key]) {\n        console.error(key, 'not in name2code:', Object.keys(name2code));\n      }\n      result[name2code[key]] = input[key];\n    }\n  }\n  return result;\n};\n\nconst toArray = (input) => {\n  if (Array.isArray(input)) {\n    return input;\n  }\n  return [input];\n};\n\nconst metadataDefaults = [\n  ['Compression', 1], // no compression\n  ['PlanarConfiguration', 1],\n  ['XPosition', 0],\n  ['YPosition', 0],\n  ['ResolutionUnit', 1], // Code 1 for actual pixel count or 2 for pixels per inch.\n  ['ExtraSamples', 0], // should this be an array??\n  ['GeoAsciiParams', 'WGS 84\\u0000'],\n  ['ModelTiepoint', [0, 0, 0, -180, 90, 0]], // raster fits whole globe\n  ['GTModelTypeGeoKey', 2],\n  ['GTRasterTypeGeoKey', 1],\n  ['GeographicTypeGeoKey', 4326],\n  ['GeogCitationGeoKey', 'WGS 84'],\n];\n\nexport function writeGeotiff(data, metadata) {\n  const isFlattened = typeof data[0] === 'number';\n\n  let height;\n  let numBands;\n  let width;\n  let flattenedValues;\n\n  if (isFlattened) {\n    height = metadata.height || metadata.ImageLength;\n    width = metadata.width || metadata.ImageWidth;\n    numBands = data.length / (height * width);\n    flattenedValues = data;\n  } else {\n    numBands = data.length;\n    height = data[0].length;\n    width = data[0][0].length;\n    flattenedValues = [];\n    times(height, (rowIndex) => {\n      times(width, (columnIndex) => {\n        times(numBands, (bandIndex) => {\n          flattenedValues.push(data[bandIndex][rowIndex][columnIndex]);\n        });\n      });\n    });\n  }\n\n  metadata.ImageLength = height;\n  delete metadata.height;\n  metadata.ImageWidth = width;\n  delete metadata.width;\n\n  // consult https://www.loc.gov/preservation/digital/formats/content/tiff_tags.shtml\n\n  if (!metadata.BitsPerSample) {\n    metadata.BitsPerSample = times(numBands, () => 8);\n  }\n\n  metadataDefaults.forEach((tag) => {\n    const key = tag[0];\n    if (!metadata[key]) {\n      const value = tag[1];\n      metadata[key] = value;\n    }\n  });\n\n  // The color space of the image data.\n  // 1=black is zero and 2=RGB.\n  if (!metadata.PhotometricInterpretation) {\n    metadata.PhotometricInterpretation = metadata.BitsPerSample.length === 3 ? 2 : 1;\n  }\n\n  // The number of components per pixel.\n  if (!metadata.SamplesPerPixel) {\n    metadata.SamplesPerPixel = [numBands];\n  }\n\n  if (!metadata.StripByteCounts) {\n    // we are only writing one strip\n    metadata.StripByteCounts = [numBands * height * width];\n  }\n\n  if (!metadata.ModelPixelScale) {\n    // assumes raster takes up exactly the whole globe\n    metadata.ModelPixelScale = [360 / width, 180 / height, 0];\n  }\n\n  if (!metadata.SampleFormat) {\n    metadata.SampleFormat = times(numBands, () => 1);\n  }\n\n  const geoKeys = Object.keys(metadata)\n    .filter((key) => endsWith(key, 'GeoKey'))\n    .sort((a, b) => name2code[a] - name2code[b]);\n\n  if (!metadata.GeoKeyDirectory) {\n    const NumberOfKeys = geoKeys.length;\n\n    const GeoKeyDirectory = [1, 1, 0, NumberOfKeys];\n    geoKeys.forEach((geoKey) => {\n      const KeyID = Number(name2code[geoKey]);\n      GeoKeyDirectory.push(KeyID);\n\n      let Count;\n      let TIFFTagLocation;\n      let valueOffset;\n      if (fieldTagTypes[KeyID] === 'SHORT') {\n        Count = 1;\n        TIFFTagLocation = 0;\n        valueOffset = metadata[geoKey];\n      } else if (geoKey === 'GeogCitationGeoKey') {\n        Count = metadata.GeoAsciiParams.length;\n        TIFFTagLocation = Number(name2code.GeoAsciiParams);\n        valueOffset = 0;\n      } else {\n        console.log(`[geotiff.js] couldn't get TIFFTagLocation for ${geoKey}`);\n      }\n      GeoKeyDirectory.push(TIFFTagLocation);\n      GeoKeyDirectory.push(Count);\n      GeoKeyDirectory.push(valueOffset);\n    });\n    metadata.GeoKeyDirectory = GeoKeyDirectory;\n  }\n\n  // delete GeoKeys from metadata, because stored in GeoKeyDirectory tag\n  for (const geoKey in geoKeys) {\n    if (geoKeys.hasOwnProperty(geoKey)) {\n      delete metadata[geoKey];\n    }\n  }\n\n  [\n    'Compression',\n    'ExtraSamples',\n    'GeographicTypeGeoKey',\n    'GTModelTypeGeoKey',\n    'GTRasterTypeGeoKey',\n    'ImageLength', // synonym of ImageHeight\n    'ImageWidth',\n    'PhotometricInterpretation',\n    'PlanarConfiguration',\n    'ResolutionUnit',\n    'SamplesPerPixel',\n    'XPosition',\n    'YPosition',\n  ].forEach((name) => {\n    if (metadata[name]) {\n      metadata[name] = toArray(metadata[name]);\n    }\n  });\n\n  const encodedMetadata = convertToTids(metadata);\n\n  const outputImage = encodeImage(flattenedValues, width, height, encodedMetadata);\n\n  return outputImage;\n}\n", "/**\n * A no-op logger\n */\nclass DummyLogger {\n  log() {}\n\n  debug() {}\n\n  info() {}\n\n  warn() {}\n\n  error() {}\n\n  time() {}\n\n  timeEnd() {}\n}\n\nlet LOGGER = new DummyLogger();\n\n/**\n *\n * @param {object} logger the new logger. e.g `console`\n */\nexport function setLogger(logger = new DummyLogger()) {\n  LOGGER = logger;\n}\n\nexport function debug(...args) {\n  return LOGGER.debug(...args);\n}\n\nexport function log(...args) {\n  return LOGGER.log(...args);\n}\n\nexport function info(...args) {\n  return LOGGER.info(...args);\n}\n\nexport function warn(...args) {\n  return LOGGER.warn(...args);\n}\n\nexport function error(...args) {\n  return LOGGER.error(...args);\n}\n\nexport function time(...args) {\n  return LOGGER.time(...args);\n}\n\nexport function timeEnd(...args) {\n  return LOGGER.timeEnd(...args);\n}\n", "import GeoTIFFImage from './geotiffimage';\nimport DataView64 from './dataview64';\nimport DataSlice from './dataslice';\nimport Pool from './pool';\n\nimport { makeRemoteSource } from './source/remote';\nimport { makeBufferSource } from './source/arraybuffer';\nimport { makeFileReaderSource } from './source/filereader';\nimport { makeFileSource } from './source/file';\n\nimport { fieldTypes, fieldTagNames, arrayFields, geoKeyNames } from './globals';\nimport { writeGeotiff } from './geotiffwriter';\nimport * as globals from './globals';\nimport * as rgb from './rgb';\nimport { getDecoder, addDecoder } from './compression';\nimport { setLogger } from './logging';\n\nexport { globals };\nexport { rgb };\nexport { getDecoder, addDecoder };\nexport { setLogger };\n\nfunction getFieldTypeLength(fieldType) {\n  switch (fieldType) {\n    case fieldTypes.BYTE: case fieldTypes.ASCII: case fieldTypes.SBYTE: case fieldTypes.UNDEFINED:\n      return 1;\n    case fieldTypes.SHORT: case fieldTypes.SSHORT:\n      return 2;\n    case fieldTypes.LONG: case fieldTypes.SLONG: case fieldTypes.FLOAT: case fieldTypes.IFD:\n      return 4;\n    case fieldTypes.RATIONAL: case fieldTypes.SRATIONAL: case fieldTypes.DOUBLE:\n    case fieldTypes.LONG8: case fieldTypes.SLONG8: case fieldTypes.IFD8:\n      return 8;\n    default:\n      throw new RangeError(`Invalid field type: ${fieldType}`);\n  }\n}\n\nfunction parseGeoKeyDirectory(fileDirectory) {\n  const rawGeoKeyDirectory = fileDirectory.GeoKeyDirectory;\n  if (!rawGeoKeyDirectory) {\n    return null;\n  }\n\n  const geoKeyDirectory = {};\n  for (let i = 4; i <= rawGeoKeyDirectory[3] * 4; i += 4) {\n    const key = geoKeyNames[rawGeoKeyDirectory[i]];\n    const location = (rawGeoKeyDirectory[i + 1])\n      ? (fieldTagNames[rawGeoKeyDirectory[i + 1]]) : null;\n    const count = rawGeoKeyDirectory[i + 2];\n    const offset = rawGeoKeyDirectory[i + 3];\n\n    let value = null;\n    if (!location) {\n      value = offset;\n    } else {\n      value = fileDirectory[location];\n      if (typeof value === 'undefined' || value === null) {\n        throw new Error(`Could not get value of geoKey '${key}'.`);\n      } else if (typeof value === 'string') {\n        value = value.substring(offset, offset + count - 1);\n      } else if (value.subarray) {\n        value = value.subarray(offset, offset + count);\n        if (count === 1) {\n          value = value[0];\n        }\n      }\n    }\n    geoKeyDirectory[key] = value;\n  }\n  return geoKeyDirectory;\n}\n\nfunction getValues(dataSlice, fieldType, count, offset) {\n  let values = null;\n  let readMethod = null;\n  const fieldTypeLength = getFieldTypeLength(fieldType);\n\n  switch (fieldType) {\n    case fieldTypes.BYTE: case fieldTypes.ASCII: case fieldTypes.UNDEFINED:\n      values = new Uint8Array(count); readMethod = dataSlice.readUint8;\n      break;\n    case fieldTypes.SBYTE:\n      values = new Int8Array(count); readMethod = dataSlice.readInt8;\n      break;\n    case fieldTypes.SHORT:\n      values = new Uint16Array(count); readMethod = dataSlice.readUint16;\n      break;\n    case fieldTypes.SSHORT:\n      values = new Int16Array(count); readMethod = dataSlice.readInt16;\n      break;\n    case fieldTypes.LONG: case fieldTypes.IFD:\n      values = new Uint32Array(count); readMethod = dataSlice.readUint32;\n      break;\n    case fieldTypes.SLONG:\n      values = new Int32Array(count); readMethod = dataSlice.readInt32;\n      break;\n    case fieldTypes.LONG8: case fieldTypes.IFD8:\n      values = new Array(count); readMethod = dataSlice.readUint64;\n      break;\n    case fieldTypes.SLONG8:\n      values = new Array(count); readMethod = dataSlice.readInt64;\n      break;\n    case fieldTypes.RATIONAL:\n      values = new Uint32Array(count * 2); readMethod = dataSlice.readUint32;\n      break;\n    case fieldTypes.SRATIONAL:\n      values = new Int32Array(count * 2); readMethod = dataSlice.readInt32;\n      break;\n    case fieldTypes.FLOAT:\n      values = new Float32Array(count); readMethod = dataSlice.readFloat32;\n      break;\n    case fieldTypes.DOUBLE:\n      values = new Float64Array(count); readMethod = dataSlice.readFloat64;\n      break;\n    default:\n      throw new RangeError(`Invalid field type: ${fieldType}`);\n  }\n\n  // normal fields\n  if (!(fieldType === fieldTypes.RATIONAL || fieldType === fieldTypes.SRATIONAL)) {\n    for (let i = 0; i < count; ++i) {\n      values[i] = readMethod.call(\n        dataSlice, offset + (i * fieldTypeLength),\n      );\n    }\n  } else { // RATIONAL or SRATIONAL\n    for (let i = 0; i < count; i += 2) {\n      values[i] = readMethod.call(\n        dataSlice, offset + (i * fieldTypeLength),\n      );\n      values[i + 1] = readMethod.call(\n        dataSlice, offset + ((i * fieldTypeLength) + 4),\n      );\n    }\n  }\n\n  if (fieldType === fieldTypes.ASCII) {\n    return new TextDecoder('utf-8').decode(values);\n  }\n  return values;\n}\n\n/**\n * Data class to store the parsed file directory, geo key directory and\n * offset to the next IFD\n */\nclass ImageFileDirectory {\n  constructor(fileDirectory, geoKeyDirectory, nextIFDByteOffset) {\n    this.fileDirectory = fileDirectory;\n    this.geoKeyDirectory = geoKeyDirectory;\n    this.nextIFDByteOffset = nextIFDByteOffset;\n  }\n}\n\n/**\n * Error class for cases when an IFD index was requested, that does not exist\n * in the file.\n */\nclass GeoTIFFImageIndexError extends Error {\n  constructor(index) {\n    super(`No image at index ${index}`);\n    this.index = index;\n  }\n}\n\nclass GeoTIFFBase {\n  /**\n   * (experimental) Reads raster data from the best fitting image. This function uses\n   * the image with the lowest resolution that is still a higher resolution than the\n   * requested resolution.\n   * When specified, the `bbox` option is translated to the `window` option and the\n   * `resX` and `resY` to `width` and `height` respectively.\n   * Then, the [readRasters]{@link GeoTIFFImage#readRasters} method of the selected\n   * image is called and the result returned.\n   * @see GeoTIFFImage.readRasters\n   * @param {Object} [options={}] optional parameters\n   * @param {Array} [options.window=whole image] the subset to read data from.\n   * @param {Array} [options.bbox=whole image] the subset to read data from in\n   *                                           geographical coordinates.\n   * @param {Array} [options.samples=all samples] the selection of samples to read from.\n   * @param {Boolean} [options.interleave=false] whether the data shall be read\n   *                                             in one single array or separate\n   *                                             arrays.\n   * @param {Number} [options.pool=null] The optional decoder pool to use.\n   * @param {Number} [options.width] The desired width of the output. When the width is not the\n   *                                 same as the images, resampling will be performed.\n   * @param {Number} [options.height] The desired height of the output. When the width is not the\n   *                                  same as the images, resampling will be performed.\n   * @param {String} [options.resampleMethod='nearest'] The desired resampling method.\n   * @param {AbortSignal} [options.signal] An AbortSignal that may be signalled if the request is\n   *                                       to be aborted\n   * @param {Number|Number[]} [options.fillValue] The value to use for parts of the image\n   *                                              outside of the images extent. When multiple\n   *                                              samples are requested, an array of fill values\n   *                                              can be passed.\n   * @returns {Promise.<(TypedArray|TypedArray[])>} the decoded arrays as a promise\n   */\n  async readRasters(options = {}) {\n    const { window: imageWindow, width, height } = options;\n    let { resX, resY, bbox } = options;\n\n    const firstImage = await this.getImage();\n    let usedImage = firstImage;\n    const imageCount = await this.getImageCount();\n    const imgBBox = firstImage.getBoundingBox();\n\n    if (imageWindow && bbox) {\n      throw new Error('Both \"bbox\" and \"window\" passed.');\n    }\n\n    // if width/height is passed, transform it to resolution\n    if (width || height) {\n      // if we have an image window (pixel coordinates), transform it to a BBox\n      // using the origin/resolution of the first image.\n      if (imageWindow) {\n        const [oX, oY] = firstImage.getOrigin();\n        const [rX, rY] = firstImage.getResolution();\n\n        bbox = [\n          oX + (imageWindow[0] * rX),\n          oY + (imageWindow[1] * rY),\n          oX + (imageWindow[2] * rX),\n          oY + (imageWindow[3] * rY),\n        ];\n      }\n\n      // if we have a bbox (or calculated one)\n\n      const usedBBox = bbox || imgBBox;\n\n      if (width) {\n        if (resX) {\n          throw new Error('Both width and resX passed');\n        }\n        resX = (usedBBox[2] - usedBBox[0]) / width;\n      }\n      if (height) {\n        if (resY) {\n          throw new Error('Both width and resY passed');\n        }\n        resY = (usedBBox[3] - usedBBox[1]) / height;\n      }\n    }\n\n    // if resolution is set or calculated, try to get the image with the worst acceptable resolution\n    if (resX || resY) {\n      const allImages = [];\n      for (let i = 0; i < imageCount; ++i) {\n        const image = await this.getImage(i);\n        const { SubfileType: subfileType, NewSubfileType: newSubfileType } = image.fileDirectory;\n        if (i === 0 || subfileType === 2 || newSubfileType & 1) {\n          allImages.push(image);\n        }\n      }\n\n      allImages.sort((a, b) => a.getWidth() - b.getWidth());\n      for (let i = 0; i < allImages.length; ++i) {\n        const image = allImages[i];\n        const imgResX = (imgBBox[2] - imgBBox[0]) / image.getWidth();\n        const imgResY = (imgBBox[3] - imgBBox[1]) / image.getHeight();\n\n        usedImage = image;\n        if ((resX && resX > imgResX) || (resY && resY > imgResY)) {\n          break;\n        }\n      }\n    }\n\n    let wnd = imageWindow;\n    if (bbox) {\n      const [oX, oY] = firstImage.getOrigin();\n      const [imageResX, imageResY] = usedImage.getResolution(firstImage);\n\n      wnd = [\n        Math.round((bbox[0] - oX) / imageResX),\n        Math.round((bbox[1] - oY) / imageResY),\n        Math.round((bbox[2] - oX) / imageResX),\n        Math.round((bbox[3] - oY) / imageResY),\n      ];\n      wnd = [\n        Math.min(wnd[0], wnd[2]),\n        Math.min(wnd[1], wnd[3]),\n        Math.max(wnd[0], wnd[2]),\n        Math.max(wnd[1], wnd[3]),\n      ];\n    }\n\n    return usedImage.readRasters({ ...options, window: wnd });\n  }\n}\n\n/**\n * The abstraction for a whole GeoTIFF file.\n * @augments GeoTIFFBase\n */\nclass GeoTIFF extends GeoTIFFBase {\n  /**\n   * @constructor\n   * @param {Source} source The datasource to read from.\n   * @param {Boolean} littleEndian Whether the image uses little endian.\n   * @param {Boolean} bigTiff Whether the image uses bigTIFF conventions.\n   * @param {Number} firstIFDOffset The numeric byte-offset from the start of the image\n   *                                to the first IFD.\n   * @param {Object} [options] further options.\n   * @param {Boolean} [options.cache=false] whether or not decoded tiles shall be cached.\n   */\n  constructor(source, littleEndian, bigTiff, firstIFDOffset, options = {}) {\n    super();\n    this.source = source;\n    this.littleEndian = littleEndian;\n    this.bigTiff = bigTiff;\n    this.firstIFDOffset = firstIFDOffset;\n    this.cache = options.cache || false;\n    this.ifdRequests = [];\n    this.ghostValues = null;\n  }\n\n  async getSlice(offset, size) {\n    const fallbackSize = this.bigTiff ? 4048 : 1024;\n    return new DataSlice(\n      (await this.source.fetch([{\n        offset,\n        length: typeof size !== 'undefined' ? size : fallbackSize,\n      }]))[0],\n      offset,\n      this.littleEndian,\n      this.bigTiff,\n    );\n  }\n\n  /**\n   * Instructs to parse an image file directory at the given file offset.\n   * As there is no way to ensure that a location is indeed the start of an IFD,\n   * this function must be called with caution (e.g only using the IFD offsets from\n   * the headers or other IFDs).\n   * @param {number} offset the offset to parse the IFD at\n   * @returns {ImageFileDirectory} the parsed IFD\n   */\n  async parseFileDirectoryAt(offset) {\n    const entrySize = this.bigTiff ? 20 : 12;\n    const offsetSize = this.bigTiff ? 8 : 2;\n\n    let dataSlice = await this.getSlice(offset);\n    const numDirEntries = this.bigTiff\n      ? dataSlice.readUint64(offset)\n      : dataSlice.readUint16(offset);\n\n    // if the slice does not cover the whole IFD, request a bigger slice, where the\n    // whole IFD fits: num of entries + n x tag length + offset to next IFD\n    const byteSize = (numDirEntries * entrySize) + (this.bigTiff ? 16 : 6);\n    if (!dataSlice.covers(offset, byteSize)) {\n      dataSlice = await this.getSlice(offset, byteSize);\n    }\n\n    const fileDirectory = {};\n\n    // loop over the IFD and create a file directory object\n    let i = offset + (this.bigTiff ? 8 : 2);\n    for (let entryCount = 0; entryCount < numDirEntries; i += entrySize, ++entryCount) {\n      const fieldTag = dataSlice.readUint16(i);\n      const fieldType = dataSlice.readUint16(i + 2);\n      const typeCount = this.bigTiff\n        ? dataSlice.readUint64(i + 4)\n        : dataSlice.readUint32(i + 4);\n\n      let fieldValues;\n      let value;\n      const fieldTypeLength = getFieldTypeLength(fieldType);\n      const valueOffset = i + (this.bigTiff ? 12 : 8);\n\n      // check whether the value is directly encoded in the tag or refers to a\n      // different external byte range\n      if (fieldTypeLength * typeCount <= (this.bigTiff ? 8 : 4)) {\n        fieldValues = getValues(dataSlice, fieldType, typeCount, valueOffset);\n      } else {\n        // resolve the reference to the actual byte range\n        const actualOffset = dataSlice.readOffset(valueOffset);\n        const length = getFieldTypeLength(fieldType) * typeCount;\n\n        // check, whether we actually cover the referenced byte range; if not,\n        // request a new slice of bytes to read from it\n        if (dataSlice.covers(actualOffset, length)) {\n          fieldValues = getValues(dataSlice, fieldType, typeCount, actualOffset);\n        } else {\n          const fieldDataSlice = await this.getSlice(actualOffset, length);\n          fieldValues = getValues(fieldDataSlice, fieldType, typeCount, actualOffset);\n        }\n      }\n\n      // unpack single values from the array\n      if (typeCount === 1 && arrayFields.indexOf(fieldTag) === -1\n        && !(fieldType === fieldTypes.RATIONAL || fieldType === fieldTypes.SRATIONAL)) {\n        value = fieldValues[0];\n      } else {\n        value = fieldValues;\n      }\n\n      // write the tags value to the file directly\n      fileDirectory[fieldTagNames[fieldTag]] = value;\n    }\n    const geoKeyDirectory = parseGeoKeyDirectory(fileDirectory);\n    const nextIFDByteOffset = dataSlice.readOffset(\n      offset + offsetSize + (entrySize * numDirEntries),\n    );\n\n    return new ImageFileDirectory(\n      fileDirectory,\n      geoKeyDirectory,\n      nextIFDByteOffset,\n    );\n  }\n\n  async requestIFD(index) {\n    // see if we already have that IFD index requested.\n    if (this.ifdRequests[index]) {\n      // attach to an already requested IFD\n      return this.ifdRequests[index];\n    } else if (index === 0) {\n      // special case for index 0\n      this.ifdRequests[index] = this.parseFileDirectoryAt(this.firstIFDOffset);\n      return this.ifdRequests[index];\n    } else if (!this.ifdRequests[index - 1]) {\n      // if the previous IFD was not yet loaded, load that one first\n      // this is the recursive call.\n      try {\n        this.ifdRequests[index - 1] = this.requestIFD(index - 1);\n      } catch (e) {\n        // if the previous one already was an index error, rethrow\n        // with the current index\n        if (e instanceof GeoTIFFImageIndexError) {\n          throw new GeoTIFFImageIndexError(index);\n        }\n        // rethrow anything else\n        throw e;\n      }\n    }\n    // if the previous IFD was loaded, we can finally fetch the one we are interested in.\n    // we need to wrap this in an IIFE, otherwise this.ifdRequests[index] would be delayed\n    this.ifdRequests[index] = (async () => {\n      const previousIfd = await this.ifdRequests[index - 1];\n      if (previousIfd.nextIFDByteOffset === 0) {\n        throw new GeoTIFFImageIndexError(index);\n      }\n      return this.parseFileDirectoryAt(previousIfd.nextIFDByteOffset);\n    })();\n    return this.ifdRequests[index];\n  }\n\n  /**\n   * Get the n-th internal subfile of an image. By default, the first is returned.\n   *\n   * @param {Number} [index=0] the index of the image to return.\n   * @returns {GeoTIFFImage} the image at the given index\n   */\n  async getImage(index = 0) {\n    const ifd = await this.requestIFD(index);\n    return new GeoTIFFImage(\n      ifd.fileDirectory, ifd.geoKeyDirectory,\n      this.dataView, this.littleEndian, this.cache, this.source,\n    );\n  }\n\n  /**\n   * Returns the count of the internal subfiles.\n   *\n   * @returns {Number} the number of internal subfile images\n   */\n  async getImageCount() {\n    let index = 0;\n    // loop until we run out of IFDs\n    let hasNext = true;\n    while (hasNext) {\n      try {\n        await this.requestIFD(index);\n        ++index;\n      } catch (e) {\n        if (e instanceof GeoTIFFImageIndexError) {\n          hasNext = false;\n        } else {\n          throw e;\n        }\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Get the values of the COG ghost area as a parsed map.\n   * See https://gdal.org/drivers/raster/cog.html#header-ghost-area for reference\n   * @returns {Object} the parsed ghost area or null, if no such area was found\n   */\n  async getGhostValues() {\n    const offset = this.bigTiff ? 16 : 8;\n    if (this.ghostValues) {\n      return this.ghostValues;\n    }\n    const detectionString = 'GDAL_STRUCTURAL_METADATA_SIZE=';\n    const heuristicAreaSize = detectionString.length + 100;\n    let slice = await this.getSlice(offset, heuristicAreaSize);\n    if (detectionString === getValues(slice, fieldTypes.ASCII, detectionString.length, offset)) {\n      const valuesString = getValues(slice, fieldTypes.ASCII, heuristicAreaSize, offset);\n      const firstLine = valuesString.split('\\n')[0];\n      const metadataSize = Number(firstLine.split('=')[1].split(' ')[0]) + firstLine.length;\n      if (metadataSize > heuristicAreaSize) {\n        slice = await this.getSlice(offset, metadataSize);\n      }\n      const fullString = getValues(slice, fieldTypes.ASCII, metadataSize, offset);\n      this.ghostValues = {};\n      fullString\n        .split('\\n')\n        .filter((line) => line.length > 0)\n        .map((line) => line.split('='))\n        .forEach(([key, value]) => {\n          this.ghostValues[key] = value;\n        });\n    }\n    return this.ghostValues;\n  }\n\n  /**\n   * Parse a (Geo)TIFF file from the given source.\n   *\n   * @param {source~Source} source The source of data to parse from.\n   * @param {object} options Additional options.\n   * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n   *                               to be aborted\n   */\n  static async fromSource(source, options, signal) {\n    const headerData = (await source.fetch([{ offset: 0, length: 1024 }], signal))[0];\n    const dataView = new DataView64(headerData);\n\n    const BOM = dataView.getUint16(0, 0);\n    let littleEndian;\n    if (BOM === 0x4949) {\n      littleEndian = true;\n    } else if (BOM === 0x4D4D) {\n      littleEndian = false;\n    } else {\n      throw new TypeError('Invalid byte order value.');\n    }\n\n    const magicNumber = dataView.getUint16(2, littleEndian);\n    let bigTiff;\n    if (magicNumber === 42) {\n      bigTiff = false;\n    } else if (magicNumber === 43) {\n      bigTiff = true;\n      const offsetByteSize = dataView.getUint16(4, littleEndian);\n      if (offsetByteSize !== 8) {\n        throw new Error('Unsupported offset byte-size.');\n      }\n    } else {\n      throw new TypeError('Invalid magic number.');\n    }\n\n    const firstIFDOffset = bigTiff\n      ? dataView.getUint64(8, littleEndian)\n      : dataView.getUint32(4, littleEndian);\n    return new GeoTIFF(source, littleEndian, bigTiff, firstIFDOffset, options);\n  }\n\n  /**\n   * Closes the underlying file buffer\n   * N.B. After the GeoTIFF has been completely processed it needs\n   * to be closed but only if it has been constructed from a file.\n   */\n  close() {\n    if (typeof this.source.close === 'function') {\n      return this.source.close();\n    }\n    return false;\n  }\n}\n\nexport { GeoTIFF };\nexport default GeoTIFF;\n\n/**\n * Wrapper for GeoTIFF files that have external overviews.\n * @augments GeoTIFFBase\n */\nclass MultiGeoTIFF extends GeoTIFFBase {\n  /**\n   * Construct a new MultiGeoTIFF from a main and several overview files.\n   * @param {GeoTIFF} mainFile The main GeoTIFF file.\n   * @param {GeoTIFF[]} overviewFiles An array of overview files.\n   */\n  constructor(mainFile, overviewFiles) {\n    super();\n    this.mainFile = mainFile;\n    this.overviewFiles = overviewFiles;\n    this.imageFiles = [mainFile].concat(overviewFiles);\n\n    this.fileDirectoriesPerFile = null;\n    this.fileDirectoriesPerFileParsing = null;\n    this.imageCount = null;\n  }\n\n  async parseFileDirectoriesPerFile() {\n    const requests = [this.mainFile.parseFileDirectoryAt(this.mainFile.firstIFDOffset)]\n      .concat(this.overviewFiles.map((file) => file.parseFileDirectoryAt(file.firstIFDOffset)));\n\n    this.fileDirectoriesPerFile = await Promise.all(requests);\n    return this.fileDirectoriesPerFile;\n  }\n\n  /**\n   * Get the n-th internal subfile of an image. By default, the first is returned.\n   *\n   * @param {Number} [index=0] the index of the image to return.\n   * @returns {GeoTIFFImage} the image at the given index\n   */\n  async getImage(index = 0) {\n    await this.getImageCount();\n    await this.parseFileDirectoriesPerFile();\n    let visited = 0;\n    let relativeIndex = 0;\n    for (let i = 0; i < this.imageFiles.length; i++) {\n      const imageFile = this.imageFiles[i];\n      for (let ii = 0; ii < this.imageCounts[i]; ii++) {\n        if (index === visited) {\n          const ifd = await imageFile.requestIFD(relativeIndex);\n          return new GeoTIFFImage(\n            ifd.fileDirectory, ifd.geoKeyDirectory,\n            imageFile.dataView, imageFile.littleEndian, imageFile.cache, imageFile.source,\n          );\n        }\n        visited++;\n        relativeIndex++;\n      }\n      relativeIndex = 0;\n    }\n\n    throw new RangeError('Invalid image index');\n  }\n\n  /**\n   * Returns the count of the internal subfiles.\n   *\n   * @returns {Number} the number of internal subfile images\n   */\n  async getImageCount() {\n    if (this.imageCount !== null) {\n      return this.imageCount;\n    }\n    const requests = [this.mainFile.getImageCount()]\n      .concat(this.overviewFiles.map((file) => file.getImageCount()));\n    this.imageCounts = await Promise.all(requests);\n    this.imageCount = this.imageCounts.reduce((count, ifds) => count + ifds, 0);\n    return this.imageCount;\n  }\n}\n\nexport { MultiGeoTIFF };\n\n/**\n * Creates a new GeoTIFF from a remote URL.\n * @param {string} url The URL to access the image from\n * @param {object} [options] Additional options to pass to the source.\n *                           See {@link makeRemoteSource} for details.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise.<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromUrl(url, options = {}, signal) {\n  return GeoTIFF.fromSource(makeRemoteSource(url, options), signal);\n}\n\n/**\n * Construct a new GeoTIFF from an\n * [ArrayBuffer]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer}.\n * @param {ArrayBuffer} arrayBuffer The data to read the file from.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise.<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromArrayBuffer(arrayBuffer, signal) {\n  return GeoTIFF.fromSource(makeBufferSource(arrayBuffer), signal);\n}\n\n/**\n * Construct a GeoTIFF from a local file path. This uses the node\n * [filesystem API]{@link https://nodejs.org/api/fs.html} and is\n * not available on browsers.\n *\n * N.B. After the GeoTIFF has been completely processed it needs\n * to be closed but only if it has been constructed from a file.\n * @param {string} path The file path to read from.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise.<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromFile(path, signal) {\n  return GeoTIFF.fromSource(makeFileSource(path), signal);\n}\n\n/**\n * Construct a GeoTIFF from an HTML\n * [Blob]{@link https://developer.mozilla.org/en-US/docs/Web/API/Blob} or\n * [File]{@link https://developer.mozilla.org/en-US/docs/Web/API/File}\n * object.\n * @param {Blob|File} blob The Blob or File object to read from.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise.<GeoTIFF>} The resulting GeoTIFF file.\n */\nexport async function fromBlob(blob, signal) {\n  return GeoTIFF.fromSource(makeFileReaderSource(blob), signal);\n}\n\n/**\n * Construct a MultiGeoTIFF from the given URLs.\n * @param {string} mainUrl The URL for the main file.\n * @param {string[]} overviewUrls An array of URLs for the overview images.\n * @param {object} [options] Additional options to pass to the source.\n *                           See [makeRemoteSource]{@link module:source.makeRemoteSource}\n *                           for details.\n * @param {AbortSignal} [signal] An AbortSignal that may be signalled if the request is\n *                               to be aborted\n * @returns {Promise.<MultiGeoTIFF>} The resulting MultiGeoTIFF file.\n */\nexport async function fromUrls(mainUrl, overviewUrls = [], options = {}, signal) {\n  const mainFile = await GeoTIFF.fromSource(makeRemoteSource(mainUrl, options), signal);\n  const overviewFiles = await Promise.all(\n    overviewUrls.map((url) => GeoTIFF.fromSource(makeRemoteSource(url, options))),\n  );\n\n  return new MultiGeoTIFF(mainFile, overviewFiles);\n}\n\n/**\n * Main creating function for GeoTIFF files.\n * @param {(Array)} array of pixel values\n * @returns {metadata} metadata\n */\nexport async function writeArrayBuffer(values, metadata) {\n  return writeGeotiff(values, metadata);\n}\n\nexport { Pool };\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null],
  "mappings": "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",
  "names": []
}
